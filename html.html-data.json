{
  "version": 1.1,
  "tags": [
    {
      "name": "flux:content.get",
      "description": "Gets all child content of a record based on area. The elements are already rendered, they just need to be output. ### Example: Render all child elements with a border `fluidcontent` element with one column of child elements. Each element gets a red border: <f:section name=\"Configuration\"> <flux:grid> <flux:grid.row> <flux:grid.column name=\"teaser\"/> </flux:grid.row> </flux:grid> </f:section> <f:section name=\"Main\"> <f:for each=\"{flux:content.get(area:'teaser')}\" as=\"element\"> <div style=\"border: 1px solid red\"> <f:format.raw>{element}</f:format.raw> </div> </f:for> </f:section> /",
      "attributes": [
        {
          "name": "${area:area}=\"$1\"",
          "description": "Name or \"colPos\" value of the content area to render",
          "valueSet": "v"
        },
        {
          "name": "area",
          "description": "Name or \"colPos\" value of the content area to render"
        },
        {
          "name": "${limit:limit}=\"$1\"",
          "description": "Optional limit to the number of content elements to render",
          "valueSet": "v"
        },
        {
          "name": "limit",
          "description": "Optional limit to the number of content elements to render"
        },
        {
          "name": "${offset:offset}=\"$1\"",
          "description": "Optional offset to the limit",
          "valueSet": "v"
        },
        {
          "name": "offset",
          "description": "Optional offset to the limit"
        },
        {
          "name": "${order:order}=\"$1\"",
          "description": "Optional sort order of content elements - RAND() supported",
          "valueSet": "v"
        },
        {
          "name": "order",
          "description": "Optional sort order of content elements - RAND() supported"
        },
        {
          "name": "${sortDirection:sortDirection}=\"$1\"",
          "description": "Optional sort direction of content elements",
          "valueSet": "v"
        },
        {
          "name": "sortDirection",
          "description": "Optional sort direction of content elements"
        },
        {
          "name": "${as:as}=\"$1\"",
          "description": "Variable name to register, then render child content and insert all results as an array of records",
          "valueSet": "v"
        },
        {
          "name": "as",
          "description": "Variable name to register, then render child content and insert all results as an array of records"
        },
        {
          "name": "${loadRegister:loadRegister}=\"$1\"",
          "description": "List of LOAD_REGISTER variable",
          "valueSet": "v"
        },
        {
          "name": "loadRegister",
          "description": "List of LOAD_REGISTER variable"
        },
        {
          "name": "${render:render}=\"$1\"",
          "description": "Optional returning variable as original table rows",
          "valueSet": "v"
        },
        {
          "name": "render",
          "description": "Optional returning variable as original table rows"
        }
      ]
    },
    {
      "name": "flux:content.render",
      "description": "Renders all child content of a record based on the area name. The `area` is the `name` attribute of the `<grid.column>` that shall be rendered. ### Example: Render all child elements of one grid column `fluidcontent` element with one column of child elements: <f:section name=\"Configuration\"> <flux:grid> <flux:grid.row> <flux:grid.column name=\"teaser\"/> </flux:grid.row> </flux:grid> </f:section> <f:section name=\"Main\"> <div style=\"border: 1px solid red\"> <flux:content.render area=\"teaser\"/> </div> </f:section> /",
      "attributes": [
        {
          "name": "${area:area}=\"$1\"",
          "description": "Name or \"colPos\" value of the content area to render",
          "valueSet": "v"
        },
        {
          "name": "area",
          "description": "Name or \"colPos\" value of the content area to render"
        },
        {
          "name": "${limit:limit}=\"$1\"",
          "description": "Optional limit to the number of content elements to render",
          "valueSet": "v"
        },
        {
          "name": "limit",
          "description": "Optional limit to the number of content elements to render"
        },
        {
          "name": "${offset:offset}=\"$1\"",
          "description": "Optional offset to the limit",
          "valueSet": "v"
        },
        {
          "name": "offset",
          "description": "Optional offset to the limit"
        },
        {
          "name": "${order:order}=\"$1\"",
          "description": "Optional sort order of content elements - RAND() supported",
          "valueSet": "v"
        },
        {
          "name": "order",
          "description": "Optional sort order of content elements - RAND() supported"
        },
        {
          "name": "${sortDirection:sortDirection}=\"$1\"",
          "description": "Optional sort direction of content elements",
          "valueSet": "v"
        },
        {
          "name": "sortDirection",
          "description": "Optional sort direction of content elements"
        },
        {
          "name": "${as:as}=\"$1\"",
          "description": "Variable name to register, then render child content and insert all results as an array of records",
          "valueSet": "v"
        },
        {
          "name": "as",
          "description": "Variable name to register, then render child content and insert all results as an array of records"
        },
        {
          "name": "${loadRegister:loadRegister}=\"$1\"",
          "description": "List of LOAD_REGISTER variable",
          "valueSet": "v"
        },
        {
          "name": "loadRegister",
          "description": "List of LOAD_REGISTER variable"
        },
        {
          "name": "${render:render}=\"$1\"",
          "description": "Optional returning variable as original table rows",
          "valueSet": "v"
        },
        {
          "name": "render",
          "description": "Optional returning variable as original table rows"
        }
      ]
    },
    {
      "name": "flux:field.checkbox",
      "description": "Checkbox FlexForm field ViewHelper /",
      "attributes": [
        {
          "name": "${name:name}=\"$1\"",
          "description": "Name of the attribute, FlexForm XML-valid tag name string",
          "valueSet": "v"
        },
        {
          "name": "name",
          "description": "Name of the attribute, FlexForm XML-valid tag name string"
        },
        {
          "name": "${label:label}=\"$1\"",
          "description": "Label for the attribute, can be LLL: value. Optional - if not specified, Flux tries to detect an LLL label named \"flux.fluxFormId.fields.foobar\" based on field name, in scope of extension rendering the Flux form. If field is in an object, use \"flux.fluxFormId.objects.objectname.foobar\" where \"foobar\" is the name of the field.",
          "valueSet": "v"
        },
        {
          "name": "label",
          "description": "Label for the attribute, can be LLL: value. Optional - if not specified, Flux tries to detect an LLL label named \"flux.fluxFormId.fields.foobar\" based on field name, in scope of extension rendering the Flux form. If field is in an object, use \"flux.fluxFormId.objects.objectname.foobar\" where \"foobar\" is the name of the field."
        },
        {
          "name": "${default:default}=\"$1\"",
          "description": "Default value for this attribute",
          "valueSet": "v"
        },
        {
          "name": "default",
          "description": "Default value for this attribute"
        },
        {
          "name": "${required:required}=\"$1\"",
          "description": "If TRUE, this attribute must be filled when editing the FCE",
          "valueSet": "v"
        },
        {
          "name": "required",
          "description": "If TRUE, this attribute must be filled when editing the FCE"
        },
        {
          "name": "${exclude:exclude}=\"$1\"",
          "description": "If TRUE, this field becomes an \"exclude field\" (see TYPO3 documentation about this)",
          "valueSet": "v"
        },
        {
          "name": "exclude",
          "description": "If TRUE, this field becomes an \"exclude field\" (see TYPO3 documentation about this)"
        },
        {
          "name": "${transform:transform}=\"$1\"",
          "description": "Set this to transform your value to this type - integer, array (for csv values), float, DateTime, Vendor\\MyExt\\Domain\\Model\\Object or ObjectStorage with type hint. ",
          "valueSet": "v"
        },
        {
          "name": "transform",
          "description": "Set this to transform your value to this type - integer, array (for csv values), float, DateTime, Vendor\\MyExt\\Domain\\Model\\Object or ObjectStorage with type hint. "
        },
        {
          "name": "${enabled:enabled}=\"$1\"",
          "description": "If FALSE, disables the field in the FlexForm",
          "valueSet": "v"
        },
        {
          "name": "enabled",
          "description": "If FALSE, disables the field in the FlexForm"
        },
        {
          "name": "${requestUpdate:requestUpdate}=\"$1\"",
          "description": "If TRUE, the form is force-saved and reloaded when field value changes",
          "valueSet": "v"
        },
        {
          "name": "requestUpdate",
          "description": "If TRUE, the form is force-saved and reloaded when field value changes"
        },
        {
          "name": "${displayCond:displayCond}=\"$1\"",
          "description": "Optional \"Display Condition\" (TCA style) for this particular field. See: https://docs.typo3.org/typo3cms/TCAReference/Reference/Columns/Index.html#displaycond",
          "valueSet": "v"
        },
        {
          "name": "displayCond",
          "description": "Optional \"Display Condition\" (TCA style) for this particular field. See: https://docs.typo3.org/typo3cms/TCAReference/Reference/Columns/Index.html#displaycond"
        },
        {
          "name": "${inherit:inherit}=\"$1\"",
          "description": "If TRUE, the value for this particular field is inherited - if inheritance is enabled by the ConfigurationProvider",
          "valueSet": "v"
        },
        {
          "name": "inherit",
          "description": "If TRUE, the value for this particular field is inherited - if inheritance is enabled by the ConfigurationProvider"
        },
        {
          "name": "${inheritEmpty:inheritEmpty}=\"$1\"",
          "description": "If TRUE, allows empty values (specifically excluding the number zero!) to be inherited - if inheritance is enabled by the ConfigurationProvider",
          "valueSet": "v"
        },
        {
          "name": "inheritEmpty",
          "description": "If TRUE, allows empty values (specifically excluding the number zero!) to be inherited - if inheritance is enabled by the ConfigurationProvider"
        },
        {
          "name": "${clear:clear}=\"$1\"",
          "description": "If TRUE, a \"clear value\" checkbox is displayed next to the field which when checked, completely destroys the current field value all the way down to the stored XML value",
          "valueSet": "v"
        },
        {
          "name": "clear",
          "description": "If TRUE, a \"clear value\" checkbox is displayed next to the field which when checked, completely destroys the current field value all the way down to the stored XML value"
        },
        {
          "name": "${variables:variables}=\"$1\"",
          "description": "Freestyle variables which become assigned to the resulting Component - can then be read from that Component outside this Fluid template and in other templates using the Form object from this template",
          "valueSet": "v"
        },
        {
          "name": "variables",
          "description": "Freestyle variables which become assigned to the resulting Component - can then be read from that Component outside this Fluid template and in other templates using the Form object from this template"
        },
        {
          "name": "${extensionName:extensionName}=\"$1\"",
          "description": "If provided, enables overriding the extension context for this and all child nodes. The extension name is otherwise automatically detected from rendering context.",
          "valueSet": "v"
        },
        {
          "name": "extensionName",
          "description": "If provided, enables overriding the extension context for this and all child nodes. The extension name is otherwise automatically detected from rendering context."
        }
      ]
    },
    {
      "name": "flux:field.controllerActions",
      "description": "ControllerActions ViewHelper Renders a FlexForm select field with options fetched from requested extensionName/pluginName and other settings. There are three basic ways of adding selection options: - You can use the \"extensionName\" and \"pluginName\" to render all possible actions from an Extbase plugin that you've defined. It doesn't have to be your own plugin - if for example you are rendering actions from EXT:news or another through your own plugin. - Or you can use the \"actions\" argument which is an array: {ControllerName: 'action1,action2,action3', OtherControllerName: 'action1'} - And you can extend any of the two methods above with the \"subActions\" parameter, which allows you to extend the allowed actions whenever the specified combination of ControllerName + actionName is encountered. Example: actions=\"{ControllerName: 'action1,action2'}\" subActions=\"{ControllerName: {action1: 'action3,action4'}}\" Gives options: ControllerName->action1,action3,action4 with LLL values based on \"action1\" ControllerName->action2 with LLL values based on \"action2\" By default Flux will create one option per action when reading Controller actions - using \"subActions\" it becomes possible to add additional actions to the list of allowed actions that the option will contain, as opposed to having only one action per option. And there are a few ways to limit the options that are displayed: - You can use \"excludeActions\" to specify an array in the same syntax used by the \"actions\" argument, these are then excluded. - You can specifiy the \"controllerName\" argument in which case only actions from that Controller are displayed. And there are a couple of ways to define/resolve labels for actions: - You can add an LLL label in your locallang_db file: lowercasepluginname.lowercasecontrollername.actionfunctionname example index: myext.articlecontroller.show - You can do nothing, in which case the very first line of the PHP doc-comment of each action method is used. This value can even be an LLL:file reference (in case you don't want to use the pattern above - but beware this is somewhat expensive processing) - Or you can do nothing at all, not even add a doc comment, in which case the Controller->action syntax is used instead. Marking actions that have required arguments (which cause errors if rendered on a page that is accessible through a traditional menu) is possible but is deactivated for LLL labels; if you use LLL labels and your action requires an argument, be user friendly and note so in the LLL label or docs as applies. Lastly, you can set a custom name for the field in which case the value does not trigger the Extbase SwitchableControllerActions feature but instead works as any other Flux FlexForm field would. To use the field just place it in your Flux form (but in almost all cases leave out the \"name\" argument which is required on all other field types at the time of writing this). Where the field is placed is not important; the order and the sheet location don't matter. /",
      "attributes": [
        {
          "name": "${name:name}=\"$1\"",
          "description": "Name of the field",
          "valueSet": "v"
        },
        {
          "name": "name",
          "description": "Name of the field"
        },
        {
          "name": "${label:label}=\"$1\"",
          "description": "Label for the attribute, can be LLL: value. Optional - if not specified, Flux tries to detect an LLL label named \"flux.fluxFormId.fields.foobar\" based on field name, in scope of extension rendering the Flux form. If field is in an object, use \"flux.fluxFormId.objects.objectname.foobar\" where \"foobar\" is the name of the field.",
          "valueSet": "v"
        },
        {
          "name": "label",
          "description": "Label for the attribute, can be LLL: value. Optional - if not specified, Flux tries to detect an LLL label named \"flux.fluxFormId.fields.foobar\" based on field name, in scope of extension rendering the Flux form. If field is in an object, use \"flux.fluxFormId.objects.objectname.foobar\" where \"foobar\" is the name of the field."
        },
        {
          "name": "${default:default}=\"$1\"",
          "description": "Default value for this attribute",
          "valueSet": "v"
        },
        {
          "name": "default",
          "description": "Default value for this attribute"
        },
        {
          "name": "${required:required}=\"$1\"",
          "description": "If TRUE, this attribute must be filled when editing the FCE",
          "valueSet": "v"
        },
        {
          "name": "required",
          "description": "If TRUE, this attribute must be filled when editing the FCE"
        },
        {
          "name": "${exclude:exclude}=\"$1\"",
          "description": "If TRUE, this field becomes an \"exclude field\" (see TYPO3 documentation about this)",
          "valueSet": "v"
        },
        {
          "name": "exclude",
          "description": "If TRUE, this field becomes an \"exclude field\" (see TYPO3 documentation about this)"
        },
        {
          "name": "${transform:transform}=\"$1\"",
          "description": "Set this to transform your value to this type - integer, array (for csv values), float, DateTime, Vendor\\MyExt\\Domain\\Model\\Object or ObjectStorage with type hint. ",
          "valueSet": "v"
        },
        {
          "name": "transform",
          "description": "Set this to transform your value to this type - integer, array (for csv values), float, DateTime, Vendor\\MyExt\\Domain\\Model\\Object or ObjectStorage with type hint. "
        },
        {
          "name": "${enabled:enabled}=\"$1\"",
          "description": "If FALSE, disables the field in the FlexForm",
          "valueSet": "v"
        },
        {
          "name": "enabled",
          "description": "If FALSE, disables the field in the FlexForm"
        },
        {
          "name": "${requestUpdate:requestUpdate}=\"$1\"",
          "description": "If TRUE, the form is force-saved and reloaded when field value changes",
          "valueSet": "v"
        },
        {
          "name": "requestUpdate",
          "description": "If TRUE, the form is force-saved and reloaded when field value changes"
        },
        {
          "name": "${displayCond:displayCond}=\"$1\"",
          "description": "Optional \"Display Condition\" (TCA style) for this particular field. See: https://docs.typo3.org/typo3cms/TCAReference/Reference/Columns/Index.html#displaycond",
          "valueSet": "v"
        },
        {
          "name": "displayCond",
          "description": "Optional \"Display Condition\" (TCA style) for this particular field. See: https://docs.typo3.org/typo3cms/TCAReference/Reference/Columns/Index.html#displaycond"
        },
        {
          "name": "${inherit:inherit}=\"$1\"",
          "description": "If TRUE, the value for this particular field is inherited - if inheritance is enabled by the ConfigurationProvider",
          "valueSet": "v"
        },
        {
          "name": "inherit",
          "description": "If TRUE, the value for this particular field is inherited - if inheritance is enabled by the ConfigurationProvider"
        },
        {
          "name": "${inheritEmpty:inheritEmpty}=\"$1\"",
          "description": "If TRUE, allows empty values (specifically excluding the number zero!) to be inherited - if inheritance is enabled by the ConfigurationProvider",
          "valueSet": "v"
        },
        {
          "name": "inheritEmpty",
          "description": "If TRUE, allows empty values (specifically excluding the number zero!) to be inherited - if inheritance is enabled by the ConfigurationProvider"
        },
        {
          "name": "${clear:clear}=\"$1\"",
          "description": "If TRUE, a \"clear value\" checkbox is displayed next to the field which when checked, completely destroys the current field value all the way down to the stored XML value",
          "valueSet": "v"
        },
        {
          "name": "clear",
          "description": "If TRUE, a \"clear value\" checkbox is displayed next to the field which when checked, completely destroys the current field value all the way down to the stored XML value"
        },
        {
          "name": "${variables:variables}=\"$1\"",
          "description": "Freestyle variables which become assigned to the resulting Component - can then be read from that Component outside this Fluid template and in other templates using the Form object from this template",
          "valueSet": "v"
        },
        {
          "name": "variables",
          "description": "Freestyle variables which become assigned to the resulting Component - can then be read from that Component outside this Fluid template and in other templates using the Form object from this template"
        },
        {
          "name": "${extensionName:extensionName}=\"$1\"",
          "description": "If provided, enables overriding the extension context for this and all child nodes. The extension name is otherwise automatically detected from rendering context.",
          "valueSet": "v"
        },
        {
          "name": "extensionName",
          "description": "If provided, enables overriding the extension context for this and all child nodes. The extension name is otherwise automatically detected from rendering context."
        },
        {
          "name": "${validate:validate}=\"$1\"",
          "description": "FlexForm-type validation configuration for this input",
          "valueSet": "v"
        },
        {
          "name": "validate",
          "description": "FlexForm-type validation configuration for this input"
        },
        {
          "name": "${size:size}=\"$1\"",
          "description": "Size of the selector box",
          "valueSet": "v"
        },
        {
          "name": "size",
          "description": "Size of the selector box"
        },
        {
          "name": "${multiple:multiple}=\"$1\"",
          "description": "If TRUE, allows selecting the same value multiple times",
          "valueSet": "v"
        },
        {
          "name": "multiple",
          "description": "If TRUE, allows selecting the same value multiple times"
        },
        {
          "name": "${minItems:minItems}=\"$1\"",
          "description": "Minimum required number of items to be selected",
          "valueSet": "v"
        },
        {
          "name": "minItems",
          "description": "Minimum required number of items to be selected"
        },
        {
          "name": "${maxItems:maxItems}=\"$1\"",
          "description": "Maxium allowed number of items to be selected",
          "valueSet": "v"
        },
        {
          "name": "maxItems",
          "description": "Maxium allowed number of items to be selected"
        },
        {
          "name": "${itemListStyle:itemListStyle}=\"$1\"",
          "description": "Overrides the default list style when maxItems > 1",
          "valueSet": "v"
        },
        {
          "name": "itemListStyle",
          "description": "Overrides the default list style when maxItems > 1"
        },
        {
          "name": "${selectedListStyle:selectedListStyle}=\"$1\"",
          "description": "Overrides the default selected list style when maxItems > 1 and renderType is SelectSingle",
          "valueSet": "v"
        },
        {
          "name": "selectedListStyle",
          "description": "Overrides the default selected list style when maxItems > 1 and renderType is SelectSingle"
        },
        {
          "name": "${items:items}=\"$1\"",
          "description": "Optional, full list of items to display - note: if used, this overrides any automatic option filling!",
          "valueSet": "v"
        },
        {
          "name": "items",
          "description": "Optional, full list of items to display - note: if used, this overrides any automatic option filling!"
        },
        {
          "name": "${emptyOption:emptyOption}=\"$1\"",
          "description": "If not-FALSE, adds one empty option/value pair to the generated selector box and tries to use this property's value (cast to string) as label.",
          "valueSet": "v"
        },
        {
          "name": "emptyOption",
          "description": "If not-FALSE, adds one empty option/value pair to the generated selector box and tries to use this property's value (cast to string) as label."
        },
        {
          "name": "${translateCsvItems:translateCsvItems}=\"$1\"",
          "description": "If TRUE, attempts to resolve a LLL label for each value provided as CSV in \"items\" attribute using convention for lookup \"$field.option.123\" if given \"123\" as CSV item value. Field name is determined by normal Flux field name conventions",
          "valueSet": "v"
        },
        {
          "name": "translateCsvItems",
          "description": "If TRUE, attempts to resolve a LLL label for each value provided as CSV in \"items\" attribute using convention for lookup \"$field.option.123\" if given \"123\" as CSV item value. Field name is determined by normal Flux field name conventions"
        },
        {
          "name": "${itemsProcFunc:itemsProcFunc}=\"$1\"",
          "description": "Function for serving items. See TCA \"select\" field \"itemsProcFunc\" attribute",
          "valueSet": "v"
        },
        {
          "name": "itemsProcFunc",
          "description": "Function for serving items. See TCA \"select\" field \"itemsProcFunc\" attribute"
        },
        {
          "name": "${renderType:renderType}=\"$1\"",
          "description": "Rendering type as applies in FormEngine/TCA",
          "valueSet": "v"
        },
        {
          "name": "renderType",
          "description": "Rendering type as applies in FormEngine/TCA"
        },
        {
          "name": "${showIconTable:showIconTable}=\"$1\"",
          "description": "If TRUE shows the option icons as table beneath the select",
          "valueSet": "v"
        },
        {
          "name": "showIconTable",
          "description": "If TRUE shows the option icons as table beneath the select"
        },
        {
          "name": "${controllerExtensionName:controllerExtensionName}=\"$1\"",
          "description": "Name of the Extbase extension that contains the Controller to parse, ex. MyExtension. In vendor based extensions use dot, ex. Vendor.MyExtension",
          "valueSet": "v"
        },
        {
          "name": "controllerExtensionName",
          "description": "Name of the Extbase extension that contains the Controller to parse, ex. MyExtension. In vendor based extensions use dot, ex. Vendor.MyExtension"
        },
        {
          "name": "${pluginName:pluginName}=\"$1\"",
          "description": "Name of the Extbase plugin that contains Controller definitions to parse, ex. MyPluginName",
          "valueSet": "v"
        },
        {
          "name": "pluginName",
          "description": "Name of the Extbase plugin that contains Controller definitions to parse, ex. MyPluginName"
        },
        {
          "name": "${controllerName:controllerName}=\"$1\"",
          "description": "Optional extra limiting of actions displayed - if used, field only displays actions for this controller name - ex Article(Controller) or FrontendUser(Controller) - the Controller part is implied",
          "valueSet": "v"
        },
        {
          "name": "controllerName",
          "description": "Optional extra limiting of actions displayed - if used, field only displays actions for this controller name - ex Article(Controller) or FrontendUser(Controller) - the Controller part is implied"
        },
        {
          "name": "${actions:actions}=\"$1\"",
          "description": "Array of \"ControllerName\" => \"csv,of,actions\" which are allowed. If used, does not require the use of an ExtensionName and PluginName (will use the one specified in your current plugin automatically)",
          "valueSet": "v"
        },
        {
          "name": "actions",
          "description": "Array of \"ControllerName\" => \"csv,of,actions\" which are allowed. If used, does not require the use of an ExtensionName and PluginName (will use the one specified in your current plugin automatically)"
        },
        {
          "name": "${excludeActions:excludeActions}=\"$1\"",
          "description": "Array of \"ControllerName\" => \"csv,of,actions\" which must be excluded",
          "valueSet": "v"
        },
        {
          "name": "excludeActions",
          "description": "Array of \"ControllerName\" => \"csv,of,actions\" which must be excluded"
        },
        {
          "name": "${prefixOnRequiredArguments:prefixOnRequiredArguments}=\"$1\"",
          "description": "A short string denoting that the method takes arguments, ex * (which should then be explained in the documentation for your extension about how to setup your plugins",
          "valueSet": "v"
        },
        {
          "name": "prefixOnRequiredArguments",
          "description": "A short string denoting that the method takes arguments, ex * (which should then be explained in the documentation for your extension about how to setup your plugins"
        },
        {
          "name": "${disableLocalLanguageLabels:disableLocalLanguageLabels}=\"$1\"",
          "description": "If TRUE, disables LLL label usage and just uses the class comment or Controller->action syntax",
          "valueSet": "v"
        },
        {
          "name": "disableLocalLanguageLabels",
          "description": "If TRUE, disables LLL label usage and just uses the class comment or Controller->action syntax"
        },
        {
          "name": "${localLanguageFileRelativePath:localLanguageFileRelativePath}=\"$1\"",
          "description": "Relative (from extension $extensionName) path to locallang file containing the action method labels",
          "valueSet": "v"
        },
        {
          "name": "localLanguageFileRelativePath",
          "description": "Relative (from extension $extensionName) path to locallang file containing the action method labels"
        },
        {
          "name": "${subActions:subActions}=\"$1\"",
          "description": "Array of sub actions {ControllerName: {list: 'update,delete'}, OtherController: {new: 'create'}} which ' . 'are also allowed but not presented as options when the mapped action is selected (in example: if ' . 'ControllerName->list is selected, ControllerName->update and ControllerName->delete are allowed - but ' . 'cannot be selected).",
          "valueSet": "v"
        },
        {
          "name": "subActions",
          "description": "Array of sub actions {ControllerName: {list: 'update,delete'}, OtherController: {new: 'create'}} which ' . 'are also allowed but not presented as options when the mapped action is selected (in example: if ' . 'ControllerName->list is selected, ControllerName->update and ControllerName->delete are allowed - but ' . 'cannot be selected)."
        },
        {
          "name": "${separator:separator}=\"$1\"",
          "description": "Separator string (glue) for Controller->action values, defaults to \"->\". Empty values result in default being used.",
          "valueSet": "v"
        },
        {
          "name": "separator",
          "description": "Separator string (glue) for Controller->action values, defaults to \"->\". Empty values result in default being used."
        }
      ]
    },
    {
      "name": "flux:field.custom",
      "description": "Custom FlexForm field ViewHelper /",
      "attributes": [
        {
          "name": "${name:name}=\"$1\"",
          "description": "Name of the attribute, FlexForm XML-valid tag name string",
          "valueSet": "v"
        },
        {
          "name": "name",
          "description": "Name of the attribute, FlexForm XML-valid tag name string"
        },
        {
          "name": "${label:label}=\"$1\"",
          "description": "Label for the attribute, can be LLL: value. Optional - if not specified, Flux tries to detect an LLL label named \"flux.fluxFormId.fields.foobar\" based on field name, in scope of extension rendering the Flux form. If field is in an object, use \"flux.fluxFormId.objects.objectname.foobar\" where \"foobar\" is the name of the field.",
          "valueSet": "v"
        },
        {
          "name": "label",
          "description": "Label for the attribute, can be LLL: value. Optional - if not specified, Flux tries to detect an LLL label named \"flux.fluxFormId.fields.foobar\" based on field name, in scope of extension rendering the Flux form. If field is in an object, use \"flux.fluxFormId.objects.objectname.foobar\" where \"foobar\" is the name of the field."
        },
        {
          "name": "${default:default}=\"$1\"",
          "description": "Default value for this attribute",
          "valueSet": "v"
        },
        {
          "name": "default",
          "description": "Default value for this attribute"
        },
        {
          "name": "${required:required}=\"$1\"",
          "description": "If TRUE, this attribute must be filled when editing the FCE",
          "valueSet": "v"
        },
        {
          "name": "required",
          "description": "If TRUE, this attribute must be filled when editing the FCE"
        },
        {
          "name": "${exclude:exclude}=\"$1\"",
          "description": "If TRUE, this field becomes an \"exclude field\" (see TYPO3 documentation about this)",
          "valueSet": "v"
        },
        {
          "name": "exclude",
          "description": "If TRUE, this field becomes an \"exclude field\" (see TYPO3 documentation about this)"
        },
        {
          "name": "${transform:transform}=\"$1\"",
          "description": "Set this to transform your value to this type - integer, array (for csv values), float, DateTime, Vendor\\MyExt\\Domain\\Model\\Object or ObjectStorage with type hint. ",
          "valueSet": "v"
        },
        {
          "name": "transform",
          "description": "Set this to transform your value to this type - integer, array (for csv values), float, DateTime, Vendor\\MyExt\\Domain\\Model\\Object or ObjectStorage with type hint. "
        },
        {
          "name": "${enabled:enabled}=\"$1\"",
          "description": "If FALSE, disables the field in the FlexForm",
          "valueSet": "v"
        },
        {
          "name": "enabled",
          "description": "If FALSE, disables the field in the FlexForm"
        },
        {
          "name": "${requestUpdate:requestUpdate}=\"$1\"",
          "description": "If TRUE, the form is force-saved and reloaded when field value changes",
          "valueSet": "v"
        },
        {
          "name": "requestUpdate",
          "description": "If TRUE, the form is force-saved and reloaded when field value changes"
        },
        {
          "name": "${displayCond:displayCond}=\"$1\"",
          "description": "Optional \"Display Condition\" (TCA style) for this particular field. See: https://docs.typo3.org/typo3cms/TCAReference/Reference/Columns/Index.html#displaycond",
          "valueSet": "v"
        },
        {
          "name": "displayCond",
          "description": "Optional \"Display Condition\" (TCA style) for this particular field. See: https://docs.typo3.org/typo3cms/TCAReference/Reference/Columns/Index.html#displaycond"
        },
        {
          "name": "${inherit:inherit}=\"$1\"",
          "description": "If TRUE, the value for this particular field is inherited - if inheritance is enabled by the ConfigurationProvider",
          "valueSet": "v"
        },
        {
          "name": "inherit",
          "description": "If TRUE, the value for this particular field is inherited - if inheritance is enabled by the ConfigurationProvider"
        },
        {
          "name": "${inheritEmpty:inheritEmpty}=\"$1\"",
          "description": "If TRUE, allows empty values (specifically excluding the number zero!) to be inherited - if inheritance is enabled by the ConfigurationProvider",
          "valueSet": "v"
        },
        {
          "name": "inheritEmpty",
          "description": "If TRUE, allows empty values (specifically excluding the number zero!) to be inherited - if inheritance is enabled by the ConfigurationProvider"
        },
        {
          "name": "${clear:clear}=\"$1\"",
          "description": "If TRUE, a \"clear value\" checkbox is displayed next to the field which when checked, completely destroys the current field value all the way down to the stored XML value",
          "valueSet": "v"
        },
        {
          "name": "clear",
          "description": "If TRUE, a \"clear value\" checkbox is displayed next to the field which when checked, completely destroys the current field value all the way down to the stored XML value"
        },
        {
          "name": "${variables:variables}=\"$1\"",
          "description": "Freestyle variables which become assigned to the resulting Component - can then be read from that Component outside this Fluid template and in other templates using the Form object from this template",
          "valueSet": "v"
        },
        {
          "name": "variables",
          "description": "Freestyle variables which become assigned to the resulting Component - can then be read from that Component outside this Fluid template and in other templates using the Form object from this template"
        },
        {
          "name": "${extensionName:extensionName}=\"$1\"",
          "description": "If provided, enables overriding the extension context for this and all child nodes. The extension name is otherwise automatically detected from rendering context.",
          "valueSet": "v"
        },
        {
          "name": "extensionName",
          "description": "If provided, enables overriding the extension context for this and all child nodes. The extension name is otherwise automatically detected from rendering context."
        },
        {
          "name": "${userFunc:userFunc}=\"$1\"",
          "description": "User function to render the Closure built by this ViewHelper",
          "valueSet": "v"
        },
        {
          "name": "userFunc",
          "description": "User function to render the Closure built by this ViewHelper"
        },
        {
          "name": "${arguments:arguments}=\"$1\"",
          "description": "Optional array of arguments to pass to the UserFunction building this field",
          "valueSet": "v"
        },
        {
          "name": "arguments",
          "description": "Optional array of arguments to pass to the UserFunction building this field"
        }
      ]
    },
    {
      "name": "flux:field.dateTime",
      "description": "Input FlexForm field ViewHelper /",
      "attributes": [
        {
          "name": "${name:name}=\"$1\"",
          "description": "Name of the attribute, FlexForm XML-valid tag name string",
          "valueSet": "v"
        },
        {
          "name": "name",
          "description": "Name of the attribute, FlexForm XML-valid tag name string"
        },
        {
          "name": "${label:label}=\"$1\"",
          "description": "Label for the attribute, can be LLL: value. Optional - if not specified, Flux tries to detect an LLL label named \"flux.fluxFormId.fields.foobar\" based on field name, in scope of extension rendering the Flux form. If field is in an object, use \"flux.fluxFormId.objects.objectname.foobar\" where \"foobar\" is the name of the field.",
          "valueSet": "v"
        },
        {
          "name": "label",
          "description": "Label for the attribute, can be LLL: value. Optional - if not specified, Flux tries to detect an LLL label named \"flux.fluxFormId.fields.foobar\" based on field name, in scope of extension rendering the Flux form. If field is in an object, use \"flux.fluxFormId.objects.objectname.foobar\" where \"foobar\" is the name of the field."
        },
        {
          "name": "${default:default}=\"$1\"",
          "description": "Default value for this attribute",
          "valueSet": "v"
        },
        {
          "name": "default",
          "description": "Default value for this attribute"
        },
        {
          "name": "${required:required}=\"$1\"",
          "description": "If TRUE, this attribute must be filled when editing the FCE",
          "valueSet": "v"
        },
        {
          "name": "required",
          "description": "If TRUE, this attribute must be filled when editing the FCE"
        },
        {
          "name": "${exclude:exclude}=\"$1\"",
          "description": "If TRUE, this field becomes an \"exclude field\" (see TYPO3 documentation about this)",
          "valueSet": "v"
        },
        {
          "name": "exclude",
          "description": "If TRUE, this field becomes an \"exclude field\" (see TYPO3 documentation about this)"
        },
        {
          "name": "${transform:transform}=\"$1\"",
          "description": "Set this to transform your value to this type - integer, array (for csv values), float, DateTime, Vendor\\MyExt\\Domain\\Model\\Object or ObjectStorage with type hint. ",
          "valueSet": "v"
        },
        {
          "name": "transform",
          "description": "Set this to transform your value to this type - integer, array (for csv values), float, DateTime, Vendor\\MyExt\\Domain\\Model\\Object or ObjectStorage with type hint. "
        },
        {
          "name": "${enabled:enabled}=\"$1\"",
          "description": "If FALSE, disables the field in the FlexForm",
          "valueSet": "v"
        },
        {
          "name": "enabled",
          "description": "If FALSE, disables the field in the FlexForm"
        },
        {
          "name": "${requestUpdate:requestUpdate}=\"$1\"",
          "description": "If TRUE, the form is force-saved and reloaded when field value changes",
          "valueSet": "v"
        },
        {
          "name": "requestUpdate",
          "description": "If TRUE, the form is force-saved and reloaded when field value changes"
        },
        {
          "name": "${displayCond:displayCond}=\"$1\"",
          "description": "Optional \"Display Condition\" (TCA style) for this particular field. See: https://docs.typo3.org/typo3cms/TCAReference/Reference/Columns/Index.html#displaycond",
          "valueSet": "v"
        },
        {
          "name": "displayCond",
          "description": "Optional \"Display Condition\" (TCA style) for this particular field. See: https://docs.typo3.org/typo3cms/TCAReference/Reference/Columns/Index.html#displaycond"
        },
        {
          "name": "${inherit:inherit}=\"$1\"",
          "description": "If TRUE, the value for this particular field is inherited - if inheritance is enabled by the ConfigurationProvider",
          "valueSet": "v"
        },
        {
          "name": "inherit",
          "description": "If TRUE, the value for this particular field is inherited - if inheritance is enabled by the ConfigurationProvider"
        },
        {
          "name": "${inheritEmpty:inheritEmpty}=\"$1\"",
          "description": "If TRUE, allows empty values (specifically excluding the number zero!) to be inherited - if inheritance is enabled by the ConfigurationProvider",
          "valueSet": "v"
        },
        {
          "name": "inheritEmpty",
          "description": "If TRUE, allows empty values (specifically excluding the number zero!) to be inherited - if inheritance is enabled by the ConfigurationProvider"
        },
        {
          "name": "${clear:clear}=\"$1\"",
          "description": "If TRUE, a \"clear value\" checkbox is displayed next to the field which when checked, completely destroys the current field value all the way down to the stored XML value",
          "valueSet": "v"
        },
        {
          "name": "clear",
          "description": "If TRUE, a \"clear value\" checkbox is displayed next to the field which when checked, completely destroys the current field value all the way down to the stored XML value"
        },
        {
          "name": "${variables:variables}=\"$1\"",
          "description": "Freestyle variables which become assigned to the resulting Component - can then be read from that Component outside this Fluid template and in other templates using the Form object from this template",
          "valueSet": "v"
        },
        {
          "name": "variables",
          "description": "Freestyle variables which become assigned to the resulting Component - can then be read from that Component outside this Fluid template and in other templates using the Form object from this template"
        },
        {
          "name": "${extensionName:extensionName}=\"$1\"",
          "description": "If provided, enables overriding the extension context for this and all child nodes. The extension name is otherwise automatically detected from rendering context.",
          "valueSet": "v"
        },
        {
          "name": "extensionName",
          "description": "If provided, enables overriding the extension context for this and all child nodes. The extension name is otherwise automatically detected from rendering context."
        }
      ]
    },
    {
      "name": "flux:field.file",
      "description": "Group (select supertype) FlexForm field ViewHelper, subtype \"file\" ### Select and render an image <flux:field.file name=\"settings.image\" allowed=\"jpg,png,svg\" showThumbnails=\"1\" /> Then use `<f:image>` to render the image in the frontend: <f:image src=\"{settings.image}\"/> `alt` and `title` tags are not loaded from the file's meta data record. Use `<flux:field.inline.fal>` if you want this feature. /",
      "attributes": [
        {
          "name": "${name:name}=\"$1\"",
          "description": "Name of the attribute, FlexForm XML-valid tag name string",
          "valueSet": "v"
        },
        {
          "name": "name",
          "description": "Name of the attribute, FlexForm XML-valid tag name string"
        },
        {
          "name": "${label:label}=\"$1\"",
          "description": "Label for the attribute, can be LLL: value. Optional - if not specified, Flux tries to detect an LLL label named \"flux.fluxFormId.fields.foobar\" based on field name, in scope of extension rendering the Flux form. If field is in an object, use \"flux.fluxFormId.objects.objectname.foobar\" where \"foobar\" is the name of the field.",
          "valueSet": "v"
        },
        {
          "name": "label",
          "description": "Label for the attribute, can be LLL: value. Optional - if not specified, Flux tries to detect an LLL label named \"flux.fluxFormId.fields.foobar\" based on field name, in scope of extension rendering the Flux form. If field is in an object, use \"flux.fluxFormId.objects.objectname.foobar\" where \"foobar\" is the name of the field."
        },
        {
          "name": "${default:default}=\"$1\"",
          "description": "Default value for this attribute",
          "valueSet": "v"
        },
        {
          "name": "default",
          "description": "Default value for this attribute"
        },
        {
          "name": "${required:required}=\"$1\"",
          "description": "If TRUE, this attribute must be filled when editing the FCE",
          "valueSet": "v"
        },
        {
          "name": "required",
          "description": "If TRUE, this attribute must be filled when editing the FCE"
        },
        {
          "name": "${exclude:exclude}=\"$1\"",
          "description": "If TRUE, this field becomes an \"exclude field\" (see TYPO3 documentation about this)",
          "valueSet": "v"
        },
        {
          "name": "exclude",
          "description": "If TRUE, this field becomes an \"exclude field\" (see TYPO3 documentation about this)"
        },
        {
          "name": "${transform:transform}=\"$1\"",
          "description": "Set this to transform your value to this type - integer, array (for csv values), float, DateTime, Vendor\\MyExt\\Domain\\Model\\Object or ObjectStorage with type hint. ",
          "valueSet": "v"
        },
        {
          "name": "transform",
          "description": "Set this to transform your value to this type - integer, array (for csv values), float, DateTime, Vendor\\MyExt\\Domain\\Model\\Object or ObjectStorage with type hint. "
        },
        {
          "name": "${enabled:enabled}=\"$1\"",
          "description": "If FALSE, disables the field in the FlexForm",
          "valueSet": "v"
        },
        {
          "name": "enabled",
          "description": "If FALSE, disables the field in the FlexForm"
        },
        {
          "name": "${requestUpdate:requestUpdate}=\"$1\"",
          "description": "If TRUE, the form is force-saved and reloaded when field value changes",
          "valueSet": "v"
        },
        {
          "name": "requestUpdate",
          "description": "If TRUE, the form is force-saved and reloaded when field value changes"
        },
        {
          "name": "${displayCond:displayCond}=\"$1\"",
          "description": "Optional \"Display Condition\" (TCA style) for this particular field. See: https://docs.typo3.org/typo3cms/TCAReference/Reference/Columns/Index.html#displaycond",
          "valueSet": "v"
        },
        {
          "name": "displayCond",
          "description": "Optional \"Display Condition\" (TCA style) for this particular field. See: https://docs.typo3.org/typo3cms/TCAReference/Reference/Columns/Index.html#displaycond"
        },
        {
          "name": "${inherit:inherit}=\"$1\"",
          "description": "If TRUE, the value for this particular field is inherited - if inheritance is enabled by the ConfigurationProvider",
          "valueSet": "v"
        },
        {
          "name": "inherit",
          "description": "If TRUE, the value for this particular field is inherited - if inheritance is enabled by the ConfigurationProvider"
        },
        {
          "name": "${inheritEmpty:inheritEmpty}=\"$1\"",
          "description": "If TRUE, allows empty values (specifically excluding the number zero!) to be inherited - if inheritance is enabled by the ConfigurationProvider",
          "valueSet": "v"
        },
        {
          "name": "inheritEmpty",
          "description": "If TRUE, allows empty values (specifically excluding the number zero!) to be inherited - if inheritance is enabled by the ConfigurationProvider"
        },
        {
          "name": "${clear:clear}=\"$1\"",
          "description": "If TRUE, a \"clear value\" checkbox is displayed next to the field which when checked, completely destroys the current field value all the way down to the stored XML value",
          "valueSet": "v"
        },
        {
          "name": "clear",
          "description": "If TRUE, a \"clear value\" checkbox is displayed next to the field which when checked, completely destroys the current field value all the way down to the stored XML value"
        },
        {
          "name": "${variables:variables}=\"$1\"",
          "description": "Freestyle variables which become assigned to the resulting Component - can then be read from that Component outside this Fluid template and in other templates using the Form object from this template",
          "valueSet": "v"
        },
        {
          "name": "variables",
          "description": "Freestyle variables which become assigned to the resulting Component - can then be read from that Component outside this Fluid template and in other templates using the Form object from this template"
        },
        {
          "name": "${extensionName:extensionName}=\"$1\"",
          "description": "If provided, enables overriding the extension context for this and all child nodes. The extension name is otherwise automatically detected from rendering context.",
          "valueSet": "v"
        },
        {
          "name": "extensionName",
          "description": "If provided, enables overriding the extension context for this and all child nodes. The extension name is otherwise automatically detected from rendering context."
        },
        {
          "name": "${validate:validate}=\"$1\"",
          "description": "FlexForm-type validation configuration for this input",
          "valueSet": "v"
        },
        {
          "name": "validate",
          "description": "FlexForm-type validation configuration for this input"
        },
        {
          "name": "${size:size}=\"$1\"",
          "description": "Size of the selector box",
          "valueSet": "v"
        },
        {
          "name": "size",
          "description": "Size of the selector box"
        },
        {
          "name": "${multiple:multiple}=\"$1\"",
          "description": "If TRUE, allows selecting the same value multiple times",
          "valueSet": "v"
        },
        {
          "name": "multiple",
          "description": "If TRUE, allows selecting the same value multiple times"
        },
        {
          "name": "${minItems:minItems}=\"$1\"",
          "description": "Minimum required number of items to be selected",
          "valueSet": "v"
        },
        {
          "name": "minItems",
          "description": "Minimum required number of items to be selected"
        },
        {
          "name": "${maxItems:maxItems}=\"$1\"",
          "description": "Maxium allowed number of items to be selected",
          "valueSet": "v"
        },
        {
          "name": "maxItems",
          "description": "Maxium allowed number of items to be selected"
        },
        {
          "name": "${itemListStyle:itemListStyle}=\"$1\"",
          "description": "Overrides the default list style when maxItems > 1",
          "valueSet": "v"
        },
        {
          "name": "itemListStyle",
          "description": "Overrides the default list style when maxItems > 1"
        },
        {
          "name": "${selectedListStyle:selectedListStyle}=\"$1\"",
          "description": "Overrides the default selected list style when maxItems > 1 and renderType is SelectSingle",
          "valueSet": "v"
        },
        {
          "name": "selectedListStyle",
          "description": "Overrides the default selected list style when maxItems > 1 and renderType is SelectSingle"
        },
        {
          "name": "${items:items}=\"$1\"",
          "description": "Items for the selector; array / CSV / Traversable / Query supported",
          "valueSet": "v"
        },
        {
          "name": "items",
          "description": "Items for the selector; array / CSV / Traversable / Query supported"
        },
        {
          "name": "${emptyOption:emptyOption}=\"$1\"",
          "description": "If not-FALSE, adds one empty option/value pair to the generated selector box and tries to use this property's value (cast to string) as label.",
          "valueSet": "v"
        },
        {
          "name": "emptyOption",
          "description": "If not-FALSE, adds one empty option/value pair to the generated selector box and tries to use this property's value (cast to string) as label."
        },
        {
          "name": "${translateCsvItems:translateCsvItems}=\"$1\"",
          "description": "If TRUE, attempts to resolve a LLL label for each value provided as CSV in \"items\" attribute using convention for lookup \"$field.option.123\" if given \"123\" as CSV item value. Field name is determined by normal Flux field name conventions",
          "valueSet": "v"
        },
        {
          "name": "translateCsvItems",
          "description": "If TRUE, attempts to resolve a LLL label for each value provided as CSV in \"items\" attribute using convention for lookup \"$field.option.123\" if given \"123\" as CSV item value. Field name is determined by normal Flux field name conventions"
        },
        {
          "name": "${itemsProcFunc:itemsProcFunc}=\"$1\"",
          "description": "Function for serving items. See TCA \"select\" field \"itemsProcFunc\" attribute",
          "valueSet": "v"
        },
        {
          "name": "itemsProcFunc",
          "description": "Function for serving items. See TCA \"select\" field \"itemsProcFunc\" attribute"
        },
        {
          "name": "${maxSize:maxSize}=\"$1\"",
          "description": "Maximum file size allowed in KB",
          "valueSet": "v"
        },
        {
          "name": "maxSize",
          "description": "Maximum file size allowed in KB"
        },
        {
          "name": "${allowed:allowed}=\"$1\"",
          "description": "Defines a list of file types allowed in this field",
          "valueSet": "v"
        },
        {
          "name": "allowed",
          "description": "Defines a list of file types allowed in this field"
        },
        {
          "name": "${disallowed:disallowed}=\"$1\"",
          "description": "Defines a list of file types NOT allowed in this field",
          "valueSet": "v"
        },
        {
          "name": "disallowed",
          "description": "Defines a list of file types NOT allowed in this field"
        },
        {
          "name": "${uploadFolder:uploadFolder}=\"$1\"",
          "description": "Upload folder to use for copied/directly uploaded files",
          "valueSet": "v"
        },
        {
          "name": "uploadFolder",
          "description": "Upload folder to use for copied/directly uploaded files"
        },
        {
          "name": "${showThumbnails:showThumbnails}=\"$1\"",
          "description": "If TRUE, displays thumbnails for selected values",
          "valueSet": "v"
        },
        {
          "name": "showThumbnails",
          "description": "If TRUE, displays thumbnails for selected values"
        },
        {
          "name": "${useFalRelation:useFalRelation}=\"$1\"",
          "description": "use a fal relation instead of a simple file path",
          "valueSet": "v"
        },
        {
          "name": "useFalRelation",
          "description": "use a fal relation instead of a simple file path"
        },
        {
          "name": "${internalType:internalType}=\"$1\"",
          "description": "Internal type (TCA internal_type) to use for the field. Defaults to `file_reference` but can be set to `file` to support file uploading",
          "valueSet": "v"
        },
        {
          "name": "internalType",
          "description": "Internal type (TCA internal_type) to use for the field. Defaults to `file_reference` but can be set to `file` to support file uploading"
        }
      ]
    },
    {
      "name": "flux:field.inline",
      "description": "Inline-style FlexForm field ViewHelper /",
      "attributes": [
        {
          "name": "${name:name}=\"$1\"",
          "description": "Name of the attribute, FlexForm XML-valid tag name string",
          "valueSet": "v"
        },
        {
          "name": "name",
          "description": "Name of the attribute, FlexForm XML-valid tag name string"
        },
        {
          "name": "${label:label}=\"$1\"",
          "description": "Label for the attribute, can be LLL: value. Optional - if not specified, Flux tries to detect an LLL label named \"flux.fluxFormId.fields.foobar\" based on field name, in scope of extension rendering the Flux form. If field is in an object, use \"flux.fluxFormId.objects.objectname.foobar\" where \"foobar\" is the name of the field.",
          "valueSet": "v"
        },
        {
          "name": "label",
          "description": "Label for the attribute, can be LLL: value. Optional - if not specified, Flux tries to detect an LLL label named \"flux.fluxFormId.fields.foobar\" based on field name, in scope of extension rendering the Flux form. If field is in an object, use \"flux.fluxFormId.objects.objectname.foobar\" where \"foobar\" is the name of the field."
        },
        {
          "name": "${default:default}=\"$1\"",
          "description": "Default value for this attribute",
          "valueSet": "v"
        },
        {
          "name": "default",
          "description": "Default value for this attribute"
        },
        {
          "name": "${required:required}=\"$1\"",
          "description": "If TRUE, this attribute must be filled when editing the FCE",
          "valueSet": "v"
        },
        {
          "name": "required",
          "description": "If TRUE, this attribute must be filled when editing the FCE"
        },
        {
          "name": "${exclude:exclude}=\"$1\"",
          "description": "If TRUE, this field becomes an \"exclude field\" (see TYPO3 documentation about this)",
          "valueSet": "v"
        },
        {
          "name": "exclude",
          "description": "If TRUE, this field becomes an \"exclude field\" (see TYPO3 documentation about this)"
        },
        {
          "name": "${transform:transform}=\"$1\"",
          "description": "Set this to transform your value to this type - integer, array (for csv values), float, DateTime, Vendor\\MyExt\\Domain\\Model\\Object or ObjectStorage with type hint. ",
          "valueSet": "v"
        },
        {
          "name": "transform",
          "description": "Set this to transform your value to this type - integer, array (for csv values), float, DateTime, Vendor\\MyExt\\Domain\\Model\\Object or ObjectStorage with type hint. "
        },
        {
          "name": "${enabled:enabled}=\"$1\"",
          "description": "If FALSE, disables the field in the FlexForm",
          "valueSet": "v"
        },
        {
          "name": "enabled",
          "description": "If FALSE, disables the field in the FlexForm"
        },
        {
          "name": "${requestUpdate:requestUpdate}=\"$1\"",
          "description": "If TRUE, the form is force-saved and reloaded when field value changes",
          "valueSet": "v"
        },
        {
          "name": "requestUpdate",
          "description": "If TRUE, the form is force-saved and reloaded when field value changes"
        },
        {
          "name": "${displayCond:displayCond}=\"$1\"",
          "description": "Optional \"Display Condition\" (TCA style) for this particular field. See: https://docs.typo3.org/typo3cms/TCAReference/Reference/Columns/Index.html#displaycond",
          "valueSet": "v"
        },
        {
          "name": "displayCond",
          "description": "Optional \"Display Condition\" (TCA style) for this particular field. See: https://docs.typo3.org/typo3cms/TCAReference/Reference/Columns/Index.html#displaycond"
        },
        {
          "name": "${inherit:inherit}=\"$1\"",
          "description": "If TRUE, the value for this particular field is inherited - if inheritance is enabled by the ConfigurationProvider",
          "valueSet": "v"
        },
        {
          "name": "inherit",
          "description": "If TRUE, the value for this particular field is inherited - if inheritance is enabled by the ConfigurationProvider"
        },
        {
          "name": "${inheritEmpty:inheritEmpty}=\"$1\"",
          "description": "If TRUE, allows empty values (specifically excluding the number zero!) to be inherited - if inheritance is enabled by the ConfigurationProvider",
          "valueSet": "v"
        },
        {
          "name": "inheritEmpty",
          "description": "If TRUE, allows empty values (specifically excluding the number zero!) to be inherited - if inheritance is enabled by the ConfigurationProvider"
        },
        {
          "name": "${clear:clear}=\"$1\"",
          "description": "If TRUE, a \"clear value\" checkbox is displayed next to the field which when checked, completely destroys the current field value all the way down to the stored XML value",
          "valueSet": "v"
        },
        {
          "name": "clear",
          "description": "If TRUE, a \"clear value\" checkbox is displayed next to the field which when checked, completely destroys the current field value all the way down to the stored XML value"
        },
        {
          "name": "${variables:variables}=\"$1\"",
          "description": "Freestyle variables which become assigned to the resulting Component - can then be read from that Component outside this Fluid template and in other templates using the Form object from this template",
          "valueSet": "v"
        },
        {
          "name": "variables",
          "description": "Freestyle variables which become assigned to the resulting Component - can then be read from that Component outside this Fluid template and in other templates using the Form object from this template"
        },
        {
          "name": "${extensionName:extensionName}=\"$1\"",
          "description": "If provided, enables overriding the extension context for this and all child nodes. The extension name is otherwise automatically detected from rendering context.",
          "valueSet": "v"
        },
        {
          "name": "extensionName",
          "description": "If provided, enables overriding the extension context for this and all child nodes. The extension name is otherwise automatically detected from rendering context."
        },
        {
          "name": "${validate:validate}=\"$1\"",
          "description": "FlexForm-type validation configuration for this input",
          "valueSet": "v"
        },
        {
          "name": "validate",
          "description": "FlexForm-type validation configuration for this input"
        },
        {
          "name": "${size:size}=\"$1\"",
          "description": "Size of the selector box",
          "valueSet": "v"
        },
        {
          "name": "size",
          "description": "Size of the selector box"
        },
        {
          "name": "${multiple:multiple}=\"$1\"",
          "description": "If TRUE, allows selecting the same value multiple times",
          "valueSet": "v"
        },
        {
          "name": "multiple",
          "description": "If TRUE, allows selecting the same value multiple times"
        },
        {
          "name": "${minItems:minItems}=\"$1\"",
          "description": "Minimum required number of items to be selected",
          "valueSet": "v"
        },
        {
          "name": "minItems",
          "description": "Minimum required number of items to be selected"
        },
        {
          "name": "${maxItems:maxItems}=\"$1\"",
          "description": "Maxium allowed number of items to be selected",
          "valueSet": "v"
        },
        {
          "name": "maxItems",
          "description": "Maxium allowed number of items to be selected"
        },
        {
          "name": "${itemListStyle:itemListStyle}=\"$1\"",
          "description": "Overrides the default list style when maxItems > 1",
          "valueSet": "v"
        },
        {
          "name": "itemListStyle",
          "description": "Overrides the default list style when maxItems > 1"
        },
        {
          "name": "${selectedListStyle:selectedListStyle}=\"$1\"",
          "description": "Overrides the default selected list style when maxItems > 1 and renderType is SelectSingle",
          "valueSet": "v"
        },
        {
          "name": "selectedListStyle",
          "description": "Overrides the default selected list style when maxItems > 1 and renderType is SelectSingle"
        },
        {
          "name": "${items:items}=\"$1\"",
          "description": "Items for the selector; array / CSV / Traversable / Query supported",
          "valueSet": "v"
        },
        {
          "name": "items",
          "description": "Items for the selector; array / CSV / Traversable / Query supported"
        },
        {
          "name": "${emptyOption:emptyOption}=\"$1\"",
          "description": "If not-FALSE, adds one empty option/value pair to the generated selector box and tries to use this property's value (cast to string) as label.",
          "valueSet": "v"
        },
        {
          "name": "emptyOption",
          "description": "If not-FALSE, adds one empty option/value pair to the generated selector box and tries to use this property's value (cast to string) as label."
        },
        {
          "name": "${translateCsvItems:translateCsvItems}=\"$1\"",
          "description": "If TRUE, attempts to resolve a LLL label for each value provided as CSV in \"items\" attribute using convention for lookup \"$field.option.123\" if given \"123\" as CSV item value. Field name is determined by normal Flux field name conventions",
          "valueSet": "v"
        },
        {
          "name": "translateCsvItems",
          "description": "If TRUE, attempts to resolve a LLL label for each value provided as CSV in \"items\" attribute using convention for lookup \"$field.option.123\" if given \"123\" as CSV item value. Field name is determined by normal Flux field name conventions"
        },
        {
          "name": "${itemsProcFunc:itemsProcFunc}=\"$1\"",
          "description": "Function for serving items. See TCA \"select\" field \"itemsProcFunc\" attribute",
          "valueSet": "v"
        },
        {
          "name": "itemsProcFunc",
          "description": "Function for serving items. See TCA \"select\" field \"itemsProcFunc\" attribute"
        },
        {
          "name": "${table:table}=\"$1\"",
          "description": "Define foreign table name to turn selector into a record selector for that table",
          "valueSet": "v"
        },
        {
          "name": "table",
          "description": "Define foreign table name to turn selector into a record selector for that table"
        },
        {
          "name": "${condition:condition}=\"$1\"",
          "description": "Condition to use when selecting from \"foreignTable\", supports FlexForm `foreign_table_where` markers",
          "valueSet": "v"
        },
        {
          "name": "condition",
          "description": "Condition to use when selecting from \"foreignTable\", supports FlexForm `foreign_table_where` markers"
        },
        {
          "name": "${mm:mm}=\"$1\"",
          "description": "Optional name of MM table to use for record selection",
          "valueSet": "v"
        },
        {
          "name": "mm",
          "description": "Optional name of MM table to use for record selection"
        },
        {
          "name": "${foreignField:foreignField}=\"$1\"",
          "description": "The `foreign_field` is the field of the child record pointing to the parent record. This defines where to store the uid of the parent record.",
          "valueSet": "v"
        },
        {
          "name": "foreignField",
          "description": "The `foreign_field` is the field of the child record pointing to the parent record. This defines where to store the uid of the parent record."
        },
        {
          "name": "${foreignLabel:foreignLabel}=\"$1\"",
          "description": "If set, it overrides the label set in `TCA[foreign_table]['ctrl']['label']` for the inline-view.",
          "valueSet": "v"
        },
        {
          "name": "foreignLabel",
          "description": "If set, it overrides the label set in `TCA[foreign_table]['ctrl']['label']` for the inline-view."
        },
        {
          "name": "${foreignSelector:foreignSelector}=\"$1\"",
          "description": "A selector is used to show all possible child records that could be used to create a relation with the parent record. It will be rendered as a multi-select-box. On clicking on an item inside the selector a new relation is created. The `foreign_selector` points to a field of the `foreign_table` that is responsible for providing a selector-box - this field on the `foreign_table` usually has the type \"select\" and also has a `foreign_table` defined.",
          "valueSet": "v"
        },
        {
          "name": "foreignSelector",
          "description": "A selector is used to show all possible child records that could be used to create a relation with the parent record. It will be rendered as a multi-select-box. On clicking on an item inside the selector a new relation is created. The `foreign_selector` points to a field of the `foreign_table` that is responsible for providing a selector-box - this field on the `foreign_table` usually has the type \"select\" and also has a `foreign_table` defined."
        },
        {
          "name": "${foreignSortby:foreignSortby}=\"$1\"",
          "description": "Field on the child record (or on the intermediate table) that stores the manual sorting information.",
          "valueSet": "v"
        },
        {
          "name": "foreignSortby",
          "description": "Field on the child record (or on the intermediate table) that stores the manual sorting information."
        },
        {
          "name": "${foreignDefaultSortby:foreignDefaultSortby}=\"$1\"",
          "description": "If a fieldname for `foreign_sortby` is defined, then this is ignored. Otherwise this is used as the \"ORDER BY\" statement to sort the records in the table when listed.",
          "valueSet": "v"
        },
        {
          "name": "foreignDefaultSortby",
          "description": "If a fieldname for `foreign_sortby` is defined, then this is ignored. Otherwise this is used as the \"ORDER BY\" statement to sort the records in the table when listed."
        },
        {
          "name": "${foreignTableField:foreignTableField}=\"$1\"",
          "description": "The field of the child record pointing to the parent record. This defines where to store the table name of the parent record. On setting this configuration key together with `foreign_field`, the child record knows what its parent record is - so the child record could also be used on other parent tables.",
          "valueSet": "v"
        },
        {
          "name": "foreignTableField",
          "description": "The field of the child record pointing to the parent record. This defines where to store the table name of the parent record. On setting this configuration key together with `foreign_field`, the child record knows what its parent record is - so the child record could also be used on other parent tables."
        },
        {
          "name": "${foreignUnique:foreignUnique}=\"$1\"",
          "description": "Field which must be uniue for all children of a parent record.",
          "valueSet": "v"
        },
        {
          "name": "foreignUnique",
          "description": "Field which must be uniue for all children of a parent record."
        },
        {
          "name": "${symmetricField:symmetricField}=\"$1\"",
          "description": "In case of bidirectional symmetric relations, this defines in which field on the foreign table the uid of the \"other\" parent is stored.",
          "valueSet": "v"
        },
        {
          "name": "symmetricField",
          "description": "In case of bidirectional symmetric relations, this defines in which field on the foreign table the uid of the \"other\" parent is stored."
        },
        {
          "name": "${symmetricLabel:symmetricLabel}=\"$1\"",
          "description": "If set, this overrides the default label of the selected `symmetric_field`.",
          "valueSet": "v"
        },
        {
          "name": "symmetricLabel",
          "description": "If set, this overrides the default label of the selected `symmetric_field`."
        },
        {
          "name": "${symmetricSortby:symmetricSortby}=\"$1\"",
          "description": "Works like `foreign_sortby`, but defines the field on `foreign_table` where the \"other\" sort order is stored.",
          "valueSet": "v"
        },
        {
          "name": "symmetricSortby",
          "description": "Works like `foreign_sortby`, but defines the field on `foreign_table` where the \"other\" sort order is stored."
        },
        {
          "name": "${localizationMode:localizationMode}=\"$1\"",
          "description": "Set whether children can be localizable ('select') or just inherit from default language ('keep').",
          "valueSet": "v"
        },
        {
          "name": "localizationMode",
          "description": "Set whether children can be localizable ('select') or just inherit from default language ('keep')."
        },
        {
          "name": "${localizeChildrenAtParentLocalization:localizeChildrenAtParentLocalization}=\"$1\"",
          "description": "Defines whether children should be localized when the localization of the parent gets created.",
          "valueSet": "v"
        },
        {
          "name": "localizeChildrenAtParentLocalization",
          "description": "Defines whether children should be localized when the localization of the parent gets created."
        },
        {
          "name": "${disableMovingChildrenWithParent:disableMovingChildrenWithParent}=\"$1\"",
          "description": "Disables that child records get moved along with their parent records.",
          "valueSet": "v"
        },
        {
          "name": "disableMovingChildrenWithParent",
          "description": "Disables that child records get moved along with their parent records."
        },
        {
          "name": "${showThumbs:showThumbs}=\"$1\"",
          "description": "If TRUE, adds thumbnail display when editing in BE",
          "valueSet": "v"
        },
        {
          "name": "showThumbs",
          "description": "If TRUE, adds thumbnail display when editing in BE"
        },
        {
          "name": "${matchFields:matchFields}=\"$1\"",
          "description": "When using manyToMany you can provide an additional array of field=>value pairs that must match in the relation table",
          "valueSet": "v"
        },
        {
          "name": "matchFields",
          "description": "When using manyToMany you can provide an additional array of field=>value pairs that must match in the relation table"
        },
        {
          "name": "${oppositeField:oppositeField}=\"$1\"",
          "description": "Name of the opposite field related to a proper mm relation",
          "valueSet": "v"
        },
        {
          "name": "oppositeField",
          "description": "Name of the opposite field related to a proper mm relation"
        },
        {
          "name": "${collapseAll:collapseAll}=\"$1\"",
          "description": "If true, all child records are shown as collapsed.",
          "valueSet": "v"
        },
        {
          "name": "collapseAll",
          "description": "If true, all child records are shown as collapsed."
        },
        {
          "name": "${expandSingle:expandSingle}=\"$1\"",
          "description": "Show only one expanded record at any time. If a new record is expanded, all others are collapsed.",
          "valueSet": "v"
        },
        {
          "name": "expandSingle",
          "description": "Show only one expanded record at any time. If a new record is expanded, all others are collapsed."
        },
        {
          "name": "${newRecordLinkAddTitle:newRecordLinkAddTitle}=\"$1\"",
          "description": "Add the foreign table's title to the 'Add new' link (ie. 'Add new (sometable)')",
          "valueSet": "v"
        },
        {
          "name": "newRecordLinkAddTitle",
          "description": "Add the foreign table's title to the 'Add new' link (ie. 'Add new (sometable)')"
        },
        {
          "name": "${newRecordLinkPosition:newRecordLinkPosition}=\"$1\"",
          "description": "Where to show 'Add new' link. Can be 'top', 'bottom', 'both' or 'none'.",
          "valueSet": "v"
        },
        {
          "name": "newRecordLinkPosition",
          "description": "Where to show 'Add new' link. Can be 'top', 'bottom', 'both' or 'none'."
        },
        {
          "name": "${useCombination:useCombination}=\"$1\"",
          "description": "For use on bidirectional relations using an intermediary table. In combinations, it's possible to edit ' . 'attributes and the related child record.",
          "valueSet": "v"
        },
        {
          "name": "useCombination",
          "description": "For use on bidirectional relations using an intermediary table. In combinations, it's possible to edit ' . 'attributes and the related child record."
        },
        {
          "name": "${useSortable:useSortable}=\"$1\"",
          "description": "Allow manual sorting of records.",
          "valueSet": "v"
        },
        {
          "name": "useSortable",
          "description": "Allow manual sorting of records."
        },
        {
          "name": "${showPossibleLocalizationRecords:showPossibleLocalizationRecords}=\"$1\"",
          "description": "Show unlocalized records which are in the original language, but not yet localized.",
          "valueSet": "v"
        },
        {
          "name": "showPossibleLocalizationRecords",
          "description": "Show unlocalized records which are in the original language, but not yet localized."
        },
        {
          "name": "${showRemovedLocalizationRecords:showRemovedLocalizationRecords}=\"$1\"",
          "description": "Show records which were once localized but do not exist in the original language anymore.",
          "valueSet": "v"
        },
        {
          "name": "showRemovedLocalizationRecords",
          "description": "Show records which were once localized but do not exist in the original language anymore."
        },
        {
          "name": "${showAllLocalizationLink:showAllLocalizationLink}=\"$1\"",
          "description": "Show the 'localize all records' link to fetch untranslated records from the original language.",
          "valueSet": "v"
        },
        {
          "name": "showAllLocalizationLink",
          "description": "Show the 'localize all records' link to fetch untranslated records from the original language."
        },
        {
          "name": "${showSynchronizationLink:showSynchronizationLink}=\"$1\"",
          "description": "Defines whether to show a 'synchronize' link to update to a 1:1 translation with the original language.",
          "valueSet": "v"
        },
        {
          "name": "showSynchronizationLink",
          "description": "Defines whether to show a 'synchronize' link to update to a 1:1 translation with the original language."
        },
        {
          "name": "${enabledControls:enabledControls}=\"$1\"",
          "description": "Associative array with the keys 'info', 'new', 'dragdrop', 'sort', 'hide', delete' and 'localize'. ' . 'Set either one to TRUE or FALSE to show or hide it.",
          "valueSet": "v"
        },
        {
          "name": "enabledControls",
          "description": "Associative array with the keys 'info', 'new', 'dragdrop', 'sort', 'hide', delete' and 'localize'. ' . 'Set either one to TRUE or FALSE to show or hide it."
        },
        {
          "name": "${headerThumbnail:headerThumbnail}=\"$1\"",
          "description": "Associative array with header thumbnail.",
          "valueSet": "v"
        },
        {
          "name": "headerThumbnail",
          "description": "Associative array with header thumbnail."
        },
        {
          "name": "${foreignMatchFields:foreignMatchFields}=\"$1\"",
          "description": "The fields and values of the child record which have to match. For FAL the field/key is \"fieldname\" and the value has to be defined.",
          "valueSet": "v"
        },
        {
          "name": "foreignMatchFields",
          "description": "The fields and values of the child record which have to match. For FAL the field/key is \"fieldname\" and the value has to be defined."
        },
        {
          "name": "${foreignTypes:foreignTypes}=\"$1\"",
          "description": "Overrides the \"types\" TCA array of the target table with this array (beware! must be specified fully in order to work!). Expects an array of arrays; indexed by type number - each array containing for example a \"showitem\" CSV list value of field names to be shown when inline-editing the related record.",
          "valueSet": "v"
        },
        {
          "name": "foreignTypes",
          "description": "Overrides the \"types\" TCA array of the target table with this array (beware! must be specified fully in order to work!). Expects an array of arrays; indexed by type number - each array containing for example a \"showitem\" CSV list value of field names to be shown when inline-editing the related record."
        },
        {
          "name": "${levelLinksPosition:levelLinksPosition}=\"$1\"",
          "description": "Level links position.",
          "valueSet": "v"
        },
        {
          "name": "levelLinksPosition",
          "description": "Level links position."
        }
      ]
    },
    {
      "name": "flux:field.inline.fal",
      "description": "Creates a FAL IRRE field To get the file references, assigned with that field in a flux form, you will have to use EXT:vhs but there are two different ViewHelpers for fluidpages templates and fluidcontent elements. Example how to get the first file reference from a fluidcontent element, for the flux field named \"settings.files\": {v:content.resources.fal(field: 'settings.files') -> v:iterator.first() -> v:variable.set(name: 'settings.files')} And now the example how to get the first file reference from a fluidpages template, for the flux field named \"settings.files\": {v:page.resources.fal(field: 'settings.files') -> v:iterator.first() -> v:variable.set(name: 'settings.files')} ### Usage warning Due to [TYPO3 core bug #71239](https://forge.typo3.org/issues/71239), using FAL references within sections (`<flux:form.section>`) in content elements or within the page configuration does not work. When choosing a file in one section element, you will see it in all sections. When choosing a file in a page configuration, it will be visible in the subpages configuration, too. This issue will most likely not be fixed before TYPO3 8, so do not use it. Alternatively, you could use `<flux:field.file>`. ### Selecting and rendering an image #### Selecting a single image <flux:field.inline.fal name=\"settings.image\" required=\"1\" maxItems=\"1\" minItems=\"1\"/> #### Rendering the image {v:content.resources.fal(field: 'settings.image') -> v:iterator.first() -> v:variable.set(name: 'image')} <f:image treatIdAsReference=\"1\" src=\"{image.id}\" title=\"{image.title}\" alt=\"{image.alternative}\"/><br/> #### Rendering multiple images <f:for each=\"{v:content.resources.fal(field: 'settings.image')}\" as=\"image\"> <f:image treatIdAsReference=\"1\" src=\"{image.id}\" title=\"{image.title}\" alt=\"{image.alternative}\"/><br/> </f:for> /",
      "attributes": [
        {
          "name": "${name:name}=\"$1\"",
          "description": "Name of the attribute, FlexForm XML-valid tag name string",
          "valueSet": "v"
        },
        {
          "name": "name",
          "description": "Name of the attribute, FlexForm XML-valid tag name string"
        },
        {
          "name": "${label:label}=\"$1\"",
          "description": "Label for the attribute, can be LLL: value. Optional - if not specified, Flux tries to detect an LLL label named \"flux.fluxFormId.fields.foobar\" based on field name, in scope of extension rendering the Flux form. If field is in an object, use \"flux.fluxFormId.objects.objectname.foobar\" where \"foobar\" is the name of the field.",
          "valueSet": "v"
        },
        {
          "name": "label",
          "description": "Label for the attribute, can be LLL: value. Optional - if not specified, Flux tries to detect an LLL label named \"flux.fluxFormId.fields.foobar\" based on field name, in scope of extension rendering the Flux form. If field is in an object, use \"flux.fluxFormId.objects.objectname.foobar\" where \"foobar\" is the name of the field."
        },
        {
          "name": "${default:default}=\"$1\"",
          "description": "Default value for this attribute",
          "valueSet": "v"
        },
        {
          "name": "default",
          "description": "Default value for this attribute"
        },
        {
          "name": "${required:required}=\"$1\"",
          "description": "If TRUE, this attribute must be filled when editing the FCE",
          "valueSet": "v"
        },
        {
          "name": "required",
          "description": "If TRUE, this attribute must be filled when editing the FCE"
        },
        {
          "name": "${exclude:exclude}=\"$1\"",
          "description": "If TRUE, this field becomes an \"exclude field\" (see TYPO3 documentation about this)",
          "valueSet": "v"
        },
        {
          "name": "exclude",
          "description": "If TRUE, this field becomes an \"exclude field\" (see TYPO3 documentation about this)"
        },
        {
          "name": "${transform:transform}=\"$1\"",
          "description": "Set this to transform your value to this type - integer, array (for csv values), float, DateTime, Vendor\\MyExt\\Domain\\Model\\Object or ObjectStorage with type hint. ",
          "valueSet": "v"
        },
        {
          "name": "transform",
          "description": "Set this to transform your value to this type - integer, array (for csv values), float, DateTime, Vendor\\MyExt\\Domain\\Model\\Object or ObjectStorage with type hint. "
        },
        {
          "name": "${enabled:enabled}=\"$1\"",
          "description": "If FALSE, disables the field in the FlexForm",
          "valueSet": "v"
        },
        {
          "name": "enabled",
          "description": "If FALSE, disables the field in the FlexForm"
        },
        {
          "name": "${requestUpdate:requestUpdate}=\"$1\"",
          "description": "If TRUE, the form is force-saved and reloaded when field value changes",
          "valueSet": "v"
        },
        {
          "name": "requestUpdate",
          "description": "If TRUE, the form is force-saved and reloaded when field value changes"
        },
        {
          "name": "${displayCond:displayCond}=\"$1\"",
          "description": "Optional \"Display Condition\" (TCA style) for this particular field. See: https://docs.typo3.org/typo3cms/TCAReference/Reference/Columns/Index.html#displaycond",
          "valueSet": "v"
        },
        {
          "name": "displayCond",
          "description": "Optional \"Display Condition\" (TCA style) for this particular field. See: https://docs.typo3.org/typo3cms/TCAReference/Reference/Columns/Index.html#displaycond"
        },
        {
          "name": "${inherit:inherit}=\"$1\"",
          "description": "If TRUE, the value for this particular field is inherited - if inheritance is enabled by the ConfigurationProvider",
          "valueSet": "v"
        },
        {
          "name": "inherit",
          "description": "If TRUE, the value for this particular field is inherited - if inheritance is enabled by the ConfigurationProvider"
        },
        {
          "name": "${inheritEmpty:inheritEmpty}=\"$1\"",
          "description": "If TRUE, allows empty values (specifically excluding the number zero!) to be inherited - if inheritance is enabled by the ConfigurationProvider",
          "valueSet": "v"
        },
        {
          "name": "inheritEmpty",
          "description": "If TRUE, allows empty values (specifically excluding the number zero!) to be inherited - if inheritance is enabled by the ConfigurationProvider"
        },
        {
          "name": "${clear:clear}=\"$1\"",
          "description": "If TRUE, a \"clear value\" checkbox is displayed next to the field which when checked, completely destroys the current field value all the way down to the stored XML value",
          "valueSet": "v"
        },
        {
          "name": "clear",
          "description": "If TRUE, a \"clear value\" checkbox is displayed next to the field which when checked, completely destroys the current field value all the way down to the stored XML value"
        },
        {
          "name": "${variables:variables}=\"$1\"",
          "description": "Freestyle variables which become assigned to the resulting Component - can then be read from that Component outside this Fluid template and in other templates using the Form object from this template",
          "valueSet": "v"
        },
        {
          "name": "variables",
          "description": "Freestyle variables which become assigned to the resulting Component - can then be read from that Component outside this Fluid template and in other templates using the Form object from this template"
        },
        {
          "name": "${extensionName:extensionName}=\"$1\"",
          "description": "If provided, enables overriding the extension context for this and all child nodes. The extension name is otherwise automatically detected from rendering context.",
          "valueSet": "v"
        },
        {
          "name": "extensionName",
          "description": "If provided, enables overriding the extension context for this and all child nodes. The extension name is otherwise automatically detected from rendering context."
        },
        {
          "name": "${validate:validate}=\"$1\"",
          "description": "FlexForm-type validation configuration for this input",
          "valueSet": "v"
        },
        {
          "name": "validate",
          "description": "FlexForm-type validation configuration for this input"
        },
        {
          "name": "${size:size}=\"$1\"",
          "description": "Size of the selector box",
          "valueSet": "v"
        },
        {
          "name": "size",
          "description": "Size of the selector box"
        },
        {
          "name": "${multiple:multiple}=\"$1\"",
          "description": "If TRUE, allows selecting the same value multiple times",
          "valueSet": "v"
        },
        {
          "name": "multiple",
          "description": "If TRUE, allows selecting the same value multiple times"
        },
        {
          "name": "${minItems:minItems}=\"$1\"",
          "description": "Minimum required number of items to be selected",
          "valueSet": "v"
        },
        {
          "name": "minItems",
          "description": "Minimum required number of items to be selected"
        },
        {
          "name": "${maxItems:maxItems}=\"$1\"",
          "description": "Maxium allowed number of items to be selected",
          "valueSet": "v"
        },
        {
          "name": "maxItems",
          "description": "Maxium allowed number of items to be selected"
        },
        {
          "name": "${itemListStyle:itemListStyle}=\"$1\"",
          "description": "Overrides the default list style when maxItems > 1",
          "valueSet": "v"
        },
        {
          "name": "itemListStyle",
          "description": "Overrides the default list style when maxItems > 1"
        },
        {
          "name": "${selectedListStyle:selectedListStyle}=\"$1\"",
          "description": "Overrides the default selected list style when maxItems > 1 and renderType is SelectSingle",
          "valueSet": "v"
        },
        {
          "name": "selectedListStyle",
          "description": "Overrides the default selected list style when maxItems > 1 and renderType is SelectSingle"
        },
        {
          "name": "${items:items}=\"$1\"",
          "description": "Items for the selector; array / CSV / Traversable / Query supported",
          "valueSet": "v"
        },
        {
          "name": "items",
          "description": "Items for the selector; array / CSV / Traversable / Query supported"
        },
        {
          "name": "${emptyOption:emptyOption}=\"$1\"",
          "description": "If not-FALSE, adds one empty option/value pair to the generated selector box and tries to use this property's value (cast to string) as label.",
          "valueSet": "v"
        },
        {
          "name": "emptyOption",
          "description": "If not-FALSE, adds one empty option/value pair to the generated selector box and tries to use this property's value (cast to string) as label."
        },
        {
          "name": "${translateCsvItems:translateCsvItems}=\"$1\"",
          "description": "If TRUE, attempts to resolve a LLL label for each value provided as CSV in \"items\" attribute using convention for lookup \"$field.option.123\" if given \"123\" as CSV item value. Field name is determined by normal Flux field name conventions",
          "valueSet": "v"
        },
        {
          "name": "translateCsvItems",
          "description": "If TRUE, attempts to resolve a LLL label for each value provided as CSV in \"items\" attribute using convention for lookup \"$field.option.123\" if given \"123\" as CSV item value. Field name is determined by normal Flux field name conventions"
        },
        {
          "name": "${itemsProcFunc:itemsProcFunc}=\"$1\"",
          "description": "Function for serving items. See TCA \"select\" field \"itemsProcFunc\" attribute",
          "valueSet": "v"
        },
        {
          "name": "itemsProcFunc",
          "description": "Function for serving items. See TCA \"select\" field \"itemsProcFunc\" attribute"
        },
        {
          "name": "${table:table}=\"$1\"",
          "description": "Define foreign table name to turn selector into a record selector for that table",
          "valueSet": "v"
        },
        {
          "name": "table",
          "description": "Define foreign table name to turn selector into a record selector for that table"
        },
        {
          "name": "${condition:condition}=\"$1\"",
          "description": "Condition to use when selecting from \"foreignTable\", supports FlexForm `foreign_table_where` markers",
          "valueSet": "v"
        },
        {
          "name": "condition",
          "description": "Condition to use when selecting from \"foreignTable\", supports FlexForm `foreign_table_where` markers"
        },
        {
          "name": "${mm:mm}=\"$1\"",
          "description": "Optional name of MM table to use for record selection",
          "valueSet": "v"
        },
        {
          "name": "mm",
          "description": "Optional name of MM table to use for record selection"
        },
        {
          "name": "${foreignField:foreignField}=\"$1\"",
          "description": "The foreign_field is the field of the child record pointing to the parent record. This defines where to store the uid of the parent record.",
          "valueSet": "v"
        },
        {
          "name": "foreignField",
          "description": "The foreign_field is the field of the child record pointing to the parent record. This defines where to store the uid of the parent record."
        },
        {
          "name": "${foreignLabel:foreignLabel}=\"$1\"",
          "description": "If set, it overrides the label set in TCA[foreign_table]['ctrl']['label'] for the inline-view.",
          "valueSet": "v"
        },
        {
          "name": "foreignLabel",
          "description": "If set, it overrides the label set in TCA[foreign_table]['ctrl']['label'] for the inline-view."
        },
        {
          "name": "${foreignSelector:foreignSelector}=\"$1\"",
          "description": "A selector is used to show all possible child records that could be used to create a relation with the parent record. It will be rendered as a multi-select-box. On clicking on an item inside the selector a new relation is created. The foreign_selector points to a field of the foreign_table that is responsible for providing a selector-box this field on the foreign_table usually has the type \"select\" and also has a \"foreign_table\" defined.",
          "valueSet": "v"
        },
        {
          "name": "foreignSelector",
          "description": "A selector is used to show all possible child records that could be used to create a relation with the parent record. It will be rendered as a multi-select-box. On clicking on an item inside the selector a new relation is created. The foreign_selector points to a field of the foreign_table that is responsible for providing a selector-box this field on the foreign_table usually has the type \"select\" and also has a \"foreign_table\" defined."
        },
        {
          "name": "${foreignSortby:foreignSortby}=\"$1\"",
          "description": "Field on the child record (or on the intermediate table) that stores the manual sorting information.",
          "valueSet": "v"
        },
        {
          "name": "foreignSortby",
          "description": "Field on the child record (or on the intermediate table) that stores the manual sorting information."
        },
        {
          "name": "${foreignDefaultSortby:foreignDefaultSortby}=\"$1\"",
          "description": "If a fieldname for `foreign_sortby` is defined, then this is ignored. Otherwise this is used as the \"ORDER BY\" statement to sort the records in the table when listed.",
          "valueSet": "v"
        },
        {
          "name": "foreignDefaultSortby",
          "description": "If a fieldname for `foreign_sortby` is defined, then this is ignored. Otherwise this is used as the \"ORDER BY\" statement to sort the records in the table when listed."
        },
        {
          "name": "${foreignTableField:foreignTableField}=\"$1\"",
          "description": "The field of the child record pointing to the parent record. This defines where to store the table name of the parent record. On setting this configuration key together with foreign_field, the child record knows what its parent record is - so the child record could also be used on other parent tables.",
          "valueSet": "v"
        },
        {
          "name": "foreignTableField",
          "description": "The field of the child record pointing to the parent record. This defines where to store the table name of the parent record. On setting this configuration key together with foreign_field, the child record knows what its parent record is - so the child record could also be used on other parent tables."
        },
        {
          "name": "${foreignUnique:foreignUnique}=\"$1\"",
          "description": "Field which must be uniue for all children of a parent record.",
          "valueSet": "v"
        },
        {
          "name": "foreignUnique",
          "description": "Field which must be uniue for all children of a parent record."
        },
        {
          "name": "${symmetricField:symmetricField}=\"$1\"",
          "description": "In case of bidirectional symmetric relations, this defines in which field on the foreign table the uid of the \"other\" parent is stored.",
          "valueSet": "v"
        },
        {
          "name": "symmetricField",
          "description": "In case of bidirectional symmetric relations, this defines in which field on the foreign table the uid of the \"other\" parent is stored."
        },
        {
          "name": "${symmetricLabel:symmetricLabel}=\"$1\"",
          "description": "If set, this overrides the default label of the selected `symmetric_field`.",
          "valueSet": "v"
        },
        {
          "name": "symmetricLabel",
          "description": "If set, this overrides the default label of the selected `symmetric_field`."
        },
        {
          "name": "${symmetricSortby:symmetricSortby}=\"$1\"",
          "description": "Works like `foreign_sortby`, but defines the field on `foreign_table` where the \"other\" sort order is stored.",
          "valueSet": "v"
        },
        {
          "name": "symmetricSortby",
          "description": "Works like `foreign_sortby`, but defines the field on `foreign_table` where the \"other\" sort order is stored."
        },
        {
          "name": "${localizationMode:localizationMode}=\"$1\"",
          "description": "Set whether children can be localizable ('select') or just inherit from default language ('keep').",
          "valueSet": "v"
        },
        {
          "name": "localizationMode",
          "description": "Set whether children can be localizable ('select') or just inherit from default language ('keep')."
        },
        {
          "name": "${localizeChildrenAtParentLocalization:localizeChildrenAtParentLocalization}=\"$1\"",
          "description": "Defines whether children should be localized when the localization of the parent gets created.",
          "valueSet": "v"
        },
        {
          "name": "localizeChildrenAtParentLocalization",
          "description": "Defines whether children should be localized when the localization of the parent gets created."
        },
        {
          "name": "${disableMovingChildrenWithParent:disableMovingChildrenWithParent}=\"$1\"",
          "description": "Disables that child records get moved along with their parent records.",
          "valueSet": "v"
        },
        {
          "name": "disableMovingChildrenWithParent",
          "description": "Disables that child records get moved along with their parent records."
        },
        {
          "name": "${showThumbs:showThumbs}=\"$1\"",
          "description": "If TRUE, adds thumbnail display when editing in BE",
          "valueSet": "v"
        },
        {
          "name": "showThumbs",
          "description": "If TRUE, adds thumbnail display when editing in BE"
        },
        {
          "name": "${matchFields:matchFields}=\"$1\"",
          "description": "When using manyToMany you can provide an additional array of field=>value pairs that must match in the relation table",
          "valueSet": "v"
        },
        {
          "name": "matchFields",
          "description": "When using manyToMany you can provide an additional array of field=>value pairs that must match in the relation table"
        },
        {
          "name": "${oppositeField:oppositeField}=\"$1\"",
          "description": "Name of the opposite field related to a proper mm relation",
          "valueSet": "v"
        },
        {
          "name": "oppositeField",
          "description": "Name of the opposite field related to a proper mm relation"
        },
        {
          "name": "${collapseAll:collapseAll}=\"$1\"",
          "description": "If true, all child records are shown as collapsed.",
          "valueSet": "v"
        },
        {
          "name": "collapseAll",
          "description": "If true, all child records are shown as collapsed."
        },
        {
          "name": "${expandSingle:expandSingle}=\"$1\"",
          "description": "Show only one expanded record at any time. If a new record is expanded, all others are collapsed.",
          "valueSet": "v"
        },
        {
          "name": "expandSingle",
          "description": "Show only one expanded record at any time. If a new record is expanded, all others are collapsed."
        },
        {
          "name": "${newRecordLinkAddTitle:newRecordLinkAddTitle}=\"$1\"",
          "description": "Add the foreign table's title to the 'Add new' link (ie. 'Add new (sometable)')",
          "valueSet": "v"
        },
        {
          "name": "newRecordLinkAddTitle",
          "description": "Add the foreign table's title to the 'Add new' link (ie. 'Add new (sometable)')"
        },
        {
          "name": "${newRecordLinkPosition:newRecordLinkPosition}=\"$1\"",
          "description": "Where to show 'Add new' link. Can be 'top', 'bottom', 'both' or 'none'.",
          "valueSet": "v"
        },
        {
          "name": "newRecordLinkPosition",
          "description": "Where to show 'Add new' link. Can be 'top', 'bottom', 'both' or 'none'."
        },
        {
          "name": "${useCombination:useCombination}=\"$1\"",
          "description": "For use on bidirectional relations using an intermediary table. In combinations, it's possible to edit ' . 'attributes and the related child record.",
          "valueSet": "v"
        },
        {
          "name": "useCombination",
          "description": "For use on bidirectional relations using an intermediary table. In combinations, it's possible to edit ' . 'attributes and the related child record."
        },
        {
          "name": "${useSortable:useSortable}=\"$1\"",
          "description": "Allow manual sorting of records.",
          "valueSet": "v"
        },
        {
          "name": "useSortable",
          "description": "Allow manual sorting of records."
        },
        {
          "name": "${showPossibleLocalizationRecords:showPossibleLocalizationRecords}=\"$1\"",
          "description": "Show unlocalized records which are in the original language, but not yet localized.",
          "valueSet": "v"
        },
        {
          "name": "showPossibleLocalizationRecords",
          "description": "Show unlocalized records which are in the original language, but not yet localized."
        },
        {
          "name": "${showRemovedLocalizationRecords:showRemovedLocalizationRecords}=\"$1\"",
          "description": "Show records which were once localized but do not exist in the original language anymore.",
          "valueSet": "v"
        },
        {
          "name": "showRemovedLocalizationRecords",
          "description": "Show records which were once localized but do not exist in the original language anymore."
        },
        {
          "name": "${showAllLocalizationLink:showAllLocalizationLink}=\"$1\"",
          "description": "Show the 'localize all records' link to fetch untranslated records from the original language.",
          "valueSet": "v"
        },
        {
          "name": "showAllLocalizationLink",
          "description": "Show the 'localize all records' link to fetch untranslated records from the original language."
        },
        {
          "name": "${showSynchronizationLink:showSynchronizationLink}=\"$1\"",
          "description": "Defines whether to show a 'synchronize' link to update to a 1:1 translation with the original language.",
          "valueSet": "v"
        },
        {
          "name": "showSynchronizationLink",
          "description": "Defines whether to show a 'synchronize' link to update to a 1:1 translation with the original language."
        },
        {
          "name": "${enabledControls:enabledControls}=\"$1\"",
          "description": "Associative array with the keys 'info', 'new', 'dragdrop', 'sort', 'hide', delete' and 'localize'. ' . 'Set either one to TRUE or FALSE to show or hide it.",
          "valueSet": "v"
        },
        {
          "name": "enabledControls",
          "description": "Associative array with the keys 'info', 'new', 'dragdrop', 'sort', 'hide', delete' and 'localize'. ' . 'Set either one to TRUE or FALSE to show or hide it."
        },
        {
          "name": "${headerThumbnail:headerThumbnail}=\"$1\"",
          "description": "Associative array with header thumbnail.",
          "valueSet": "v"
        },
        {
          "name": "headerThumbnail",
          "description": "Associative array with header thumbnail."
        },
        {
          "name": "${foreignMatchFields:foreignMatchFields}=\"$1\"",
          "description": "The fields and values of the child record which have to match. For FAL the field/key is \"fieldname\" and the value has to be defined.",
          "valueSet": "v"
        },
        {
          "name": "foreignMatchFields",
          "description": "The fields and values of the child record which have to match. For FAL the field/key is \"fieldname\" and the value has to be defined."
        },
        {
          "name": "${foreignTypes:foreignTypes}=\"$1\"",
          "description": "Overrides the \"types\" TCA array of the target table with this array (beware! must be specified fully in order to work!). Expects an array of arrays; indexed by type number - each array containing for example a \"showitem\" CSV list value of field names to be shown when inline-editing the related record.",
          "valueSet": "v"
        },
        {
          "name": "foreignTypes",
          "description": "Overrides the \"types\" TCA array of the target table with this array (beware! must be specified fully in order to work!). Expects an array of arrays; indexed by type number - each array containing for example a \"showitem\" CSV list value of field names to be shown when inline-editing the related record."
        },
        {
          "name": "${levelLinksPosition:levelLinksPosition}=\"$1\"",
          "description": "Level links position.",
          "valueSet": "v"
        },
        {
          "name": "levelLinksPosition",
          "description": "Level links position."
        },
        {
          "name": "${allowedExtensions:allowedExtensions}=\"$1\"",
          "description": "Allowed File Extensions .",
          "valueSet": "v"
        },
        {
          "name": "allowedExtensions",
          "description": "Allowed File Extensions ."
        },
        {
          "name": "${disallowedExtensions:disallowedExtensions}=\"$1\"",
          "description": "Disallowed File Extensions .",
          "valueSet": "v"
        },
        {
          "name": "disallowedExtensions",
          "description": "Disallowed File Extensions ."
        },
        {
          "name": "${createNewRelationLinkTitle:createNewRelationLinkTitle}=\"$1\"",
          "description": "Override label of \"Create new relation\" button.",
          "valueSet": "v"
        },
        {
          "name": "createNewRelationLinkTitle",
          "description": "Override label of \"Create new relation\" button."
        }
      ]
    },
    {
      "name": "flux:field.input",
      "description": "Input FlexForm field ViewHelper /",
      "attributes": [
        {
          "name": "${name:name}=\"$1\"",
          "description": "Name of the attribute, FlexForm XML-valid tag name string",
          "valueSet": "v"
        },
        {
          "name": "name",
          "description": "Name of the attribute, FlexForm XML-valid tag name string"
        },
        {
          "name": "${label:label}=\"$1\"",
          "description": "Label for the attribute, can be LLL: value. Optional - if not specified, Flux tries to detect an LLL label named \"flux.fluxFormId.fields.foobar\" based on field name, in scope of extension rendering the Flux form. If field is in an object, use \"flux.fluxFormId.objects.objectname.foobar\" where \"foobar\" is the name of the field.",
          "valueSet": "v"
        },
        {
          "name": "label",
          "description": "Label for the attribute, can be LLL: value. Optional - if not specified, Flux tries to detect an LLL label named \"flux.fluxFormId.fields.foobar\" based on field name, in scope of extension rendering the Flux form. If field is in an object, use \"flux.fluxFormId.objects.objectname.foobar\" where \"foobar\" is the name of the field."
        },
        {
          "name": "${default:default}=\"$1\"",
          "description": "Default value for this attribute",
          "valueSet": "v"
        },
        {
          "name": "default",
          "description": "Default value for this attribute"
        },
        {
          "name": "${required:required}=\"$1\"",
          "description": "If TRUE, this attribute must be filled when editing the FCE",
          "valueSet": "v"
        },
        {
          "name": "required",
          "description": "If TRUE, this attribute must be filled when editing the FCE"
        },
        {
          "name": "${exclude:exclude}=\"$1\"",
          "description": "If TRUE, this field becomes an \"exclude field\" (see TYPO3 documentation about this)",
          "valueSet": "v"
        },
        {
          "name": "exclude",
          "description": "If TRUE, this field becomes an \"exclude field\" (see TYPO3 documentation about this)"
        },
        {
          "name": "${transform:transform}=\"$1\"",
          "description": "Set this to transform your value to this type - integer, array (for csv values), float, DateTime, Vendor\\MyExt\\Domain\\Model\\Object or ObjectStorage with type hint. ",
          "valueSet": "v"
        },
        {
          "name": "transform",
          "description": "Set this to transform your value to this type - integer, array (for csv values), float, DateTime, Vendor\\MyExt\\Domain\\Model\\Object or ObjectStorage with type hint. "
        },
        {
          "name": "${enabled:enabled}=\"$1\"",
          "description": "If FALSE, disables the field in the FlexForm",
          "valueSet": "v"
        },
        {
          "name": "enabled",
          "description": "If FALSE, disables the field in the FlexForm"
        },
        {
          "name": "${requestUpdate:requestUpdate}=\"$1\"",
          "description": "If TRUE, the form is force-saved and reloaded when field value changes",
          "valueSet": "v"
        },
        {
          "name": "requestUpdate",
          "description": "If TRUE, the form is force-saved and reloaded when field value changes"
        },
        {
          "name": "${displayCond:displayCond}=\"$1\"",
          "description": "Optional \"Display Condition\" (TCA style) for this particular field. See: https://docs.typo3.org/typo3cms/TCAReference/Reference/Columns/Index.html#displaycond",
          "valueSet": "v"
        },
        {
          "name": "displayCond",
          "description": "Optional \"Display Condition\" (TCA style) for this particular field. See: https://docs.typo3.org/typo3cms/TCAReference/Reference/Columns/Index.html#displaycond"
        },
        {
          "name": "${inherit:inherit}=\"$1\"",
          "description": "If TRUE, the value for this particular field is inherited - if inheritance is enabled by the ConfigurationProvider",
          "valueSet": "v"
        },
        {
          "name": "inherit",
          "description": "If TRUE, the value for this particular field is inherited - if inheritance is enabled by the ConfigurationProvider"
        },
        {
          "name": "${inheritEmpty:inheritEmpty}=\"$1\"",
          "description": "If TRUE, allows empty values (specifically excluding the number zero!) to be inherited - if inheritance is enabled by the ConfigurationProvider",
          "valueSet": "v"
        },
        {
          "name": "inheritEmpty",
          "description": "If TRUE, allows empty values (specifically excluding the number zero!) to be inherited - if inheritance is enabled by the ConfigurationProvider"
        },
        {
          "name": "${clear:clear}=\"$1\"",
          "description": "If TRUE, a \"clear value\" checkbox is displayed next to the field which when checked, completely destroys the current field value all the way down to the stored XML value",
          "valueSet": "v"
        },
        {
          "name": "clear",
          "description": "If TRUE, a \"clear value\" checkbox is displayed next to the field which when checked, completely destroys the current field value all the way down to the stored XML value"
        },
        {
          "name": "${variables:variables}=\"$1\"",
          "description": "Freestyle variables which become assigned to the resulting Component - can then be read from that Component outside this Fluid template and in other templates using the Form object from this template",
          "valueSet": "v"
        },
        {
          "name": "variables",
          "description": "Freestyle variables which become assigned to the resulting Component - can then be read from that Component outside this Fluid template and in other templates using the Form object from this template"
        },
        {
          "name": "${extensionName:extensionName}=\"$1\"",
          "description": "If provided, enables overriding the extension context for this and all child nodes. The extension name is otherwise automatically detected from rendering context.",
          "valueSet": "v"
        },
        {
          "name": "extensionName",
          "description": "If provided, enables overriding the extension context for this and all child nodes. The extension name is otherwise automatically detected from rendering context."
        },
        {
          "name": "${eval:eval}=\"$1\"",
          "description": "FlexForm-type validation configuration for this input",
          "valueSet": "v"
        },
        {
          "name": "eval",
          "description": "FlexForm-type validation configuration for this input"
        },
        {
          "name": "${size:size}=\"$1\"",
          "description": "Size of field",
          "valueSet": "v"
        },
        {
          "name": "size",
          "description": "Size of field"
        },
        {
          "name": "${maxCharacters:maxCharacters}=\"$1\"",
          "description": "Maximum number of characters allowed",
          "valueSet": "v"
        },
        {
          "name": "maxCharacters",
          "description": "Maximum number of characters allowed"
        },
        {
          "name": "${minimum:minimum}=\"$1\"",
          "description": "Minimum value for integer type fields",
          "valueSet": "v"
        },
        {
          "name": "minimum",
          "description": "Minimum value for integer type fields"
        },
        {
          "name": "${maximum:maximum}=\"$1\"",
          "description": "Maximum value for integer type fields",
          "valueSet": "v"
        },
        {
          "name": "maximum",
          "description": "Maximum value for integer type fields"
        },
        {
          "name": "${placeholder:placeholder}=\"$1\"",
          "description": "Placeholder text which vanishes if field is filled and/or field is focused",
          "valueSet": "v"
        },
        {
          "name": "placeholder",
          "description": "Placeholder text which vanishes if field is filled and/or field is focused"
        }
      ]
    },
    {
      "name": "flux:field.multiRelation",
      "description": "Select one or more database records from several tables. In comparison to ``RelationViewHelper``, only the list with selected items is visible on the left. The right side contains a \"browse\" button that opens a popup. Related: ``RelationViewHelper``. ### Example: Select from multiple tables Select pages and content elements: <flux:field.multiRelation name=\"settings.records\" table=\"pages,tt_content\" maxItems=\"5\" /> ### Example: Content element selector with autocomplete Add a wizard to search for content elements, instead of opening a popup: <flux:field.multiRelation name=\"settings.elements\" table=\"tt_content\" maxItems=\"5\"> <flux:wizard.suggest /> </flux:field.multiRelation> /",
      "attributes": [
        {
          "name": "${name:name}=\"$1\"",
          "description": "Name of the attribute, FlexForm XML-valid tag name string",
          "valueSet": "v"
        },
        {
          "name": "name",
          "description": "Name of the attribute, FlexForm XML-valid tag name string"
        },
        {
          "name": "${label:label}=\"$1\"",
          "description": "Label for the attribute, can be LLL: value. Optional - if not specified, Flux tries to detect an LLL label named \"flux.fluxFormId.fields.foobar\" based on field name, in scope of extension rendering the Flux form. If field is in an object, use \"flux.fluxFormId.objects.objectname.foobar\" where \"foobar\" is the name of the field.",
          "valueSet": "v"
        },
        {
          "name": "label",
          "description": "Label for the attribute, can be LLL: value. Optional - if not specified, Flux tries to detect an LLL label named \"flux.fluxFormId.fields.foobar\" based on field name, in scope of extension rendering the Flux form. If field is in an object, use \"flux.fluxFormId.objects.objectname.foobar\" where \"foobar\" is the name of the field."
        },
        {
          "name": "${default:default}=\"$1\"",
          "description": "Default value for this attribute",
          "valueSet": "v"
        },
        {
          "name": "default",
          "description": "Default value for this attribute"
        },
        {
          "name": "${required:required}=\"$1\"",
          "description": "If TRUE, this attribute must be filled when editing the FCE",
          "valueSet": "v"
        },
        {
          "name": "required",
          "description": "If TRUE, this attribute must be filled when editing the FCE"
        },
        {
          "name": "${exclude:exclude}=\"$1\"",
          "description": "If TRUE, this field becomes an \"exclude field\" (see TYPO3 documentation about this)",
          "valueSet": "v"
        },
        {
          "name": "exclude",
          "description": "If TRUE, this field becomes an \"exclude field\" (see TYPO3 documentation about this)"
        },
        {
          "name": "${transform:transform}=\"$1\"",
          "description": "Set this to transform your value to this type - integer, array (for csv values), float, DateTime, Vendor\\MyExt\\Domain\\Model\\Object or ObjectStorage with type hint. ",
          "valueSet": "v"
        },
        {
          "name": "transform",
          "description": "Set this to transform your value to this type - integer, array (for csv values), float, DateTime, Vendor\\MyExt\\Domain\\Model\\Object or ObjectStorage with type hint. "
        },
        {
          "name": "${enabled:enabled}=\"$1\"",
          "description": "If FALSE, disables the field in the FlexForm",
          "valueSet": "v"
        },
        {
          "name": "enabled",
          "description": "If FALSE, disables the field in the FlexForm"
        },
        {
          "name": "${requestUpdate:requestUpdate}=\"$1\"",
          "description": "If TRUE, the form is force-saved and reloaded when field value changes",
          "valueSet": "v"
        },
        {
          "name": "requestUpdate",
          "description": "If TRUE, the form is force-saved and reloaded when field value changes"
        },
        {
          "name": "${displayCond:displayCond}=\"$1\"",
          "description": "Optional \"Display Condition\" (TCA style) for this particular field. See: https://docs.typo3.org/typo3cms/TCAReference/Reference/Columns/Index.html#displaycond",
          "valueSet": "v"
        },
        {
          "name": "displayCond",
          "description": "Optional \"Display Condition\" (TCA style) for this particular field. See: https://docs.typo3.org/typo3cms/TCAReference/Reference/Columns/Index.html#displaycond"
        },
        {
          "name": "${inherit:inherit}=\"$1\"",
          "description": "If TRUE, the value for this particular field is inherited - if inheritance is enabled by the ConfigurationProvider",
          "valueSet": "v"
        },
        {
          "name": "inherit",
          "description": "If TRUE, the value for this particular field is inherited - if inheritance is enabled by the ConfigurationProvider"
        },
        {
          "name": "${inheritEmpty:inheritEmpty}=\"$1\"",
          "description": "If TRUE, allows empty values (specifically excluding the number zero!) to be inherited - if inheritance is enabled by the ConfigurationProvider",
          "valueSet": "v"
        },
        {
          "name": "inheritEmpty",
          "description": "If TRUE, allows empty values (specifically excluding the number zero!) to be inherited - if inheritance is enabled by the ConfigurationProvider"
        },
        {
          "name": "${clear:clear}=\"$1\"",
          "description": "If TRUE, a \"clear value\" checkbox is displayed next to the field which when checked, completely destroys the current field value all the way down to the stored XML value",
          "valueSet": "v"
        },
        {
          "name": "clear",
          "description": "If TRUE, a \"clear value\" checkbox is displayed next to the field which when checked, completely destroys the current field value all the way down to the stored XML value"
        },
        {
          "name": "${variables:variables}=\"$1\"",
          "description": "Freestyle variables which become assigned to the resulting Component - can then be read from that Component outside this Fluid template and in other templates using the Form object from this template",
          "valueSet": "v"
        },
        {
          "name": "variables",
          "description": "Freestyle variables which become assigned to the resulting Component - can then be read from that Component outside this Fluid template and in other templates using the Form object from this template"
        },
        {
          "name": "${extensionName:extensionName}=\"$1\"",
          "description": "If provided, enables overriding the extension context for this and all child nodes. The extension name is otherwise automatically detected from rendering context.",
          "valueSet": "v"
        },
        {
          "name": "extensionName",
          "description": "If provided, enables overriding the extension context for this and all child nodes. The extension name is otherwise automatically detected from rendering context."
        },
        {
          "name": "${validate:validate}=\"$1\"",
          "description": "FlexForm-type validation configuration for this input",
          "valueSet": "v"
        },
        {
          "name": "validate",
          "description": "FlexForm-type validation configuration for this input"
        },
        {
          "name": "${size:size}=\"$1\"",
          "description": "Size of the selector box",
          "valueSet": "v"
        },
        {
          "name": "size",
          "description": "Size of the selector box"
        },
        {
          "name": "${multiple:multiple}=\"$1\"",
          "description": "If TRUE, allows selecting the same value multiple times",
          "valueSet": "v"
        },
        {
          "name": "multiple",
          "description": "If TRUE, allows selecting the same value multiple times"
        },
        {
          "name": "${minItems:minItems}=\"$1\"",
          "description": "Minimum required number of items to be selected",
          "valueSet": "v"
        },
        {
          "name": "minItems",
          "description": "Minimum required number of items to be selected"
        },
        {
          "name": "${maxItems:maxItems}=\"$1\"",
          "description": "Maxium allowed number of items to be selected",
          "valueSet": "v"
        },
        {
          "name": "maxItems",
          "description": "Maxium allowed number of items to be selected"
        },
        {
          "name": "${itemListStyle:itemListStyle}=\"$1\"",
          "description": "Overrides the default list style when maxItems > 1",
          "valueSet": "v"
        },
        {
          "name": "itemListStyle",
          "description": "Overrides the default list style when maxItems > 1"
        },
        {
          "name": "${selectedListStyle:selectedListStyle}=\"$1\"",
          "description": "Overrides the default selected list style when maxItems > 1 and renderType is SelectSingle",
          "valueSet": "v"
        },
        {
          "name": "selectedListStyle",
          "description": "Overrides the default selected list style when maxItems > 1 and renderType is SelectSingle"
        },
        {
          "name": "${items:items}=\"$1\"",
          "description": "Items for the selector; array / CSV / Traversable / Query supported",
          "valueSet": "v"
        },
        {
          "name": "items",
          "description": "Items for the selector; array / CSV / Traversable / Query supported"
        },
        {
          "name": "${emptyOption:emptyOption}=\"$1\"",
          "description": "If not-FALSE, adds one empty option/value pair to the generated selector box and tries to use this property's value (cast to string) as label.",
          "valueSet": "v"
        },
        {
          "name": "emptyOption",
          "description": "If not-FALSE, adds one empty option/value pair to the generated selector box and tries to use this property's value (cast to string) as label."
        },
        {
          "name": "${translateCsvItems:translateCsvItems}=\"$1\"",
          "description": "If TRUE, attempts to resolve a LLL label for each value provided as CSV in \"items\" attribute using convention for lookup \"$field.option.123\" if given \"123\" as CSV item value. Field name is determined by normal Flux field name conventions",
          "valueSet": "v"
        },
        {
          "name": "translateCsvItems",
          "description": "If TRUE, attempts to resolve a LLL label for each value provided as CSV in \"items\" attribute using convention for lookup \"$field.option.123\" if given \"123\" as CSV item value. Field name is determined by normal Flux field name conventions"
        },
        {
          "name": "${itemsProcFunc:itemsProcFunc}=\"$1\"",
          "description": "Function for serving items. See TCA \"select\" field \"itemsProcFunc\" attribute",
          "valueSet": "v"
        },
        {
          "name": "itemsProcFunc",
          "description": "Function for serving items. See TCA \"select\" field \"itemsProcFunc\" attribute"
        },
        {
          "name": "${table:table}=\"$1\"",
          "description": "Define foreign table name to turn selector into a record selector for that table",
          "valueSet": "v"
        },
        {
          "name": "table",
          "description": "Define foreign table name to turn selector into a record selector for that table"
        },
        {
          "name": "${condition:condition}=\"$1\"",
          "description": "Condition to use when selecting from \"foreignTable\", supports FlexForm `foreign_table_where` markers",
          "valueSet": "v"
        },
        {
          "name": "condition",
          "description": "Condition to use when selecting from \"foreignTable\", supports FlexForm `foreign_table_where` markers"
        },
        {
          "name": "${mm:mm}=\"$1\"",
          "description": "Optional name of MM table to use for record selection",
          "valueSet": "v"
        },
        {
          "name": "mm",
          "description": "Optional name of MM table to use for record selection"
        },
        {
          "name": "${foreignField:foreignField}=\"$1\"",
          "description": "The `foreign_field` is the field of the child record pointing to the parent record. This defines where to store the uid of the parent record.",
          "valueSet": "v"
        },
        {
          "name": "foreignField",
          "description": "The `foreign_field` is the field of the child record pointing to the parent record. This defines where to store the uid of the parent record."
        },
        {
          "name": "${foreignLabel:foreignLabel}=\"$1\"",
          "description": "If set, it overrides the label set in `TCA[foreign_table]['ctrl']['label']` for the inline-view.",
          "valueSet": "v"
        },
        {
          "name": "foreignLabel",
          "description": "If set, it overrides the label set in `TCA[foreign_table]['ctrl']['label']` for the inline-view."
        },
        {
          "name": "${foreignSelector:foreignSelector}=\"$1\"",
          "description": "A selector is used to show all possible child records that could be used to create a relation with the parent record. It will be rendered as a multi-select-box. On clicking on an item inside the selector a new relation is created. The `foreign_selector` points to a field of the `foreign_table` that is responsible for providing a selector-box - this field on the `foreign_table` usually has the type \"select\" and also has a `foreign_table` defined.",
          "valueSet": "v"
        },
        {
          "name": "foreignSelector",
          "description": "A selector is used to show all possible child records that could be used to create a relation with the parent record. It will be rendered as a multi-select-box. On clicking on an item inside the selector a new relation is created. The `foreign_selector` points to a field of the `foreign_table` that is responsible for providing a selector-box - this field on the `foreign_table` usually has the type \"select\" and also has a `foreign_table` defined."
        },
        {
          "name": "${foreignSortby:foreignSortby}=\"$1\"",
          "description": "Field on the child record (or on the intermediate table) that stores the manual sorting information.",
          "valueSet": "v"
        },
        {
          "name": "foreignSortby",
          "description": "Field on the child record (or on the intermediate table) that stores the manual sorting information."
        },
        {
          "name": "${foreignDefaultSortby:foreignDefaultSortby}=\"$1\"",
          "description": "If a fieldname for `foreign_sortby` is defined, then this is ignored. Otherwise this is used as the \"ORDER BY\" statement to sort the records in the table when listed.",
          "valueSet": "v"
        },
        {
          "name": "foreignDefaultSortby",
          "description": "If a fieldname for `foreign_sortby` is defined, then this is ignored. Otherwise this is used as the \"ORDER BY\" statement to sort the records in the table when listed."
        },
        {
          "name": "${foreignTableField:foreignTableField}=\"$1\"",
          "description": "The field of the child record pointing to the parent record. This defines where to store the table name of the parent record. On setting this configuration key together with `foreign_field`, the child record knows what its parent record is - so the child record could also be used on other parent tables.",
          "valueSet": "v"
        },
        {
          "name": "foreignTableField",
          "description": "The field of the child record pointing to the parent record. This defines where to store the table name of the parent record. On setting this configuration key together with `foreign_field`, the child record knows what its parent record is - so the child record could also be used on other parent tables."
        },
        {
          "name": "${foreignUnique:foreignUnique}=\"$1\"",
          "description": "Field which must be uniue for all children of a parent record.",
          "valueSet": "v"
        },
        {
          "name": "foreignUnique",
          "description": "Field which must be uniue for all children of a parent record."
        },
        {
          "name": "${symmetricField:symmetricField}=\"$1\"",
          "description": "In case of bidirectional symmetric relations, this defines in which field on the foreign table the uid of the \"other\" parent is stored.",
          "valueSet": "v"
        },
        {
          "name": "symmetricField",
          "description": "In case of bidirectional symmetric relations, this defines in which field on the foreign table the uid of the \"other\" parent is stored."
        },
        {
          "name": "${symmetricLabel:symmetricLabel}=\"$1\"",
          "description": "If set, this overrides the default label of the selected `symmetric_field`.",
          "valueSet": "v"
        },
        {
          "name": "symmetricLabel",
          "description": "If set, this overrides the default label of the selected `symmetric_field`."
        },
        {
          "name": "${symmetricSortby:symmetricSortby}=\"$1\"",
          "description": "Works like `foreign_sortby`, but defines the field on `foreign_table` where the \"other\" sort order is stored.",
          "valueSet": "v"
        },
        {
          "name": "symmetricSortby",
          "description": "Works like `foreign_sortby`, but defines the field on `foreign_table` where the \"other\" sort order is stored."
        },
        {
          "name": "${localizationMode:localizationMode}=\"$1\"",
          "description": "Set whether children can be localizable ('select') or just inherit from default language ('keep').",
          "valueSet": "v"
        },
        {
          "name": "localizationMode",
          "description": "Set whether children can be localizable ('select') or just inherit from default language ('keep')."
        },
        {
          "name": "${localizeChildrenAtParentLocalization:localizeChildrenAtParentLocalization}=\"$1\"",
          "description": "Defines whether children should be localized when the localization of the parent gets created.",
          "valueSet": "v"
        },
        {
          "name": "localizeChildrenAtParentLocalization",
          "description": "Defines whether children should be localized when the localization of the parent gets created."
        },
        {
          "name": "${disableMovingChildrenWithParent:disableMovingChildrenWithParent}=\"$1\"",
          "description": "Disables that child records get moved along with their parent records.",
          "valueSet": "v"
        },
        {
          "name": "disableMovingChildrenWithParent",
          "description": "Disables that child records get moved along with their parent records."
        },
        {
          "name": "${showThumbs:showThumbs}=\"$1\"",
          "description": "If TRUE, adds thumbnail display when editing in BE",
          "valueSet": "v"
        },
        {
          "name": "showThumbs",
          "description": "If TRUE, adds thumbnail display when editing in BE"
        },
        {
          "name": "${matchFields:matchFields}=\"$1\"",
          "description": "When using manyToMany you can provide an additional array of field=>value pairs that must match in the relation table",
          "valueSet": "v"
        },
        {
          "name": "matchFields",
          "description": "When using manyToMany you can provide an additional array of field=>value pairs that must match in the relation table"
        },
        {
          "name": "${oppositeField:oppositeField}=\"$1\"",
          "description": "Name of the opposite field related to a proper mm relation",
          "valueSet": "v"
        },
        {
          "name": "oppositeField",
          "description": "Name of the opposite field related to a proper mm relation"
        }
      ]
    },
    {
      "name": "flux:field.none",
      "description": "None field ViewHelper Makes a read-only component which supports a default value but which cannot be edited. /",
      "attributes": [
        {
          "name": "${name:name}=\"$1\"",
          "description": "Name of the attribute, FlexForm XML-valid tag name string",
          "valueSet": "v"
        },
        {
          "name": "name",
          "description": "Name of the attribute, FlexForm XML-valid tag name string"
        },
        {
          "name": "${label:label}=\"$1\"",
          "description": "Label for the attribute, can be LLL: value. Optional - if not specified, Flux tries to detect an LLL label named \"flux.fluxFormId.fields.foobar\" based on field name, in scope of extension rendering the Flux form. If field is in an object, use \"flux.fluxFormId.objects.objectname.foobar\" where \"foobar\" is the name of the field.",
          "valueSet": "v"
        },
        {
          "name": "label",
          "description": "Label for the attribute, can be LLL: value. Optional - if not specified, Flux tries to detect an LLL label named \"flux.fluxFormId.fields.foobar\" based on field name, in scope of extension rendering the Flux form. If field is in an object, use \"flux.fluxFormId.objects.objectname.foobar\" where \"foobar\" is the name of the field."
        },
        {
          "name": "${default:default}=\"$1\"",
          "description": "Default value for this attribute",
          "valueSet": "v"
        },
        {
          "name": "default",
          "description": "Default value for this attribute"
        },
        {
          "name": "${required:required}=\"$1\"",
          "description": "If TRUE, this attribute must be filled when editing the FCE",
          "valueSet": "v"
        },
        {
          "name": "required",
          "description": "If TRUE, this attribute must be filled when editing the FCE"
        },
        {
          "name": "${exclude:exclude}=\"$1\"",
          "description": "If TRUE, this field becomes an \"exclude field\" (see TYPO3 documentation about this)",
          "valueSet": "v"
        },
        {
          "name": "exclude",
          "description": "If TRUE, this field becomes an \"exclude field\" (see TYPO3 documentation about this)"
        },
        {
          "name": "${transform:transform}=\"$1\"",
          "description": "Set this to transform your value to this type - integer, array (for csv values), float, DateTime, Vendor\\MyExt\\Domain\\Model\\Object or ObjectStorage with type hint. ",
          "valueSet": "v"
        },
        {
          "name": "transform",
          "description": "Set this to transform your value to this type - integer, array (for csv values), float, DateTime, Vendor\\MyExt\\Domain\\Model\\Object or ObjectStorage with type hint. "
        },
        {
          "name": "${enabled:enabled}=\"$1\"",
          "description": "If FALSE, disables the field in the FlexForm",
          "valueSet": "v"
        },
        {
          "name": "enabled",
          "description": "If FALSE, disables the field in the FlexForm"
        },
        {
          "name": "${requestUpdate:requestUpdate}=\"$1\"",
          "description": "If TRUE, the form is force-saved and reloaded when field value changes",
          "valueSet": "v"
        },
        {
          "name": "requestUpdate",
          "description": "If TRUE, the form is force-saved and reloaded when field value changes"
        },
        {
          "name": "${displayCond:displayCond}=\"$1\"",
          "description": "Optional \"Display Condition\" (TCA style) for this particular field. See: https://docs.typo3.org/typo3cms/TCAReference/Reference/Columns/Index.html#displaycond",
          "valueSet": "v"
        },
        {
          "name": "displayCond",
          "description": "Optional \"Display Condition\" (TCA style) for this particular field. See: https://docs.typo3.org/typo3cms/TCAReference/Reference/Columns/Index.html#displaycond"
        },
        {
          "name": "${inherit:inherit}=\"$1\"",
          "description": "If TRUE, the value for this particular field is inherited - if inheritance is enabled by the ConfigurationProvider",
          "valueSet": "v"
        },
        {
          "name": "inherit",
          "description": "If TRUE, the value for this particular field is inherited - if inheritance is enabled by the ConfigurationProvider"
        },
        {
          "name": "${inheritEmpty:inheritEmpty}=\"$1\"",
          "description": "If TRUE, allows empty values (specifically excluding the number zero!) to be inherited - if inheritance is enabled by the ConfigurationProvider",
          "valueSet": "v"
        },
        {
          "name": "inheritEmpty",
          "description": "If TRUE, allows empty values (specifically excluding the number zero!) to be inherited - if inheritance is enabled by the ConfigurationProvider"
        },
        {
          "name": "${clear:clear}=\"$1\"",
          "description": "If TRUE, a \"clear value\" checkbox is displayed next to the field which when checked, completely destroys the current field value all the way down to the stored XML value",
          "valueSet": "v"
        },
        {
          "name": "clear",
          "description": "If TRUE, a \"clear value\" checkbox is displayed next to the field which when checked, completely destroys the current field value all the way down to the stored XML value"
        },
        {
          "name": "${variables:variables}=\"$1\"",
          "description": "Freestyle variables which become assigned to the resulting Component - can then be read from that Component outside this Fluid template and in other templates using the Form object from this template",
          "valueSet": "v"
        },
        {
          "name": "variables",
          "description": "Freestyle variables which become assigned to the resulting Component - can then be read from that Component outside this Fluid template and in other templates using the Form object from this template"
        },
        {
          "name": "${extensionName:extensionName}=\"$1\"",
          "description": "If provided, enables overriding the extension context for this and all child nodes. The extension name is otherwise automatically detected from rendering context.",
          "valueSet": "v"
        },
        {
          "name": "extensionName",
          "description": "If provided, enables overriding the extension context for this and all child nodes. The extension name is otherwise automatically detected from rendering context."
        }
      ]
    },
    {
      "name": "flux:field.radio",
      "description": "Radio FlexForm field ViewHelper /",
      "attributes": [
        {
          "name": "${name:name}=\"$1\"",
          "description": "Name of the attribute, FlexForm XML-valid tag name string",
          "valueSet": "v"
        },
        {
          "name": "name",
          "description": "Name of the attribute, FlexForm XML-valid tag name string"
        },
        {
          "name": "${label:label}=\"$1\"",
          "description": "Label for the attribute, can be LLL: value. Optional - if not specified, Flux tries to detect an LLL label named \"flux.fluxFormId.fields.foobar\" based on field name, in scope of extension rendering the Flux form. If field is in an object, use \"flux.fluxFormId.objects.objectname.foobar\" where \"foobar\" is the name of the field.",
          "valueSet": "v"
        },
        {
          "name": "label",
          "description": "Label for the attribute, can be LLL: value. Optional - if not specified, Flux tries to detect an LLL label named \"flux.fluxFormId.fields.foobar\" based on field name, in scope of extension rendering the Flux form. If field is in an object, use \"flux.fluxFormId.objects.objectname.foobar\" where \"foobar\" is the name of the field."
        },
        {
          "name": "${default:default}=\"$1\"",
          "description": "Default value for this attribute",
          "valueSet": "v"
        },
        {
          "name": "default",
          "description": "Default value for this attribute"
        },
        {
          "name": "${required:required}=\"$1\"",
          "description": "If TRUE, this attribute must be filled when editing the FCE",
          "valueSet": "v"
        },
        {
          "name": "required",
          "description": "If TRUE, this attribute must be filled when editing the FCE"
        },
        {
          "name": "${exclude:exclude}=\"$1\"",
          "description": "If TRUE, this field becomes an \"exclude field\" (see TYPO3 documentation about this)",
          "valueSet": "v"
        },
        {
          "name": "exclude",
          "description": "If TRUE, this field becomes an \"exclude field\" (see TYPO3 documentation about this)"
        },
        {
          "name": "${transform:transform}=\"$1\"",
          "description": "Set this to transform your value to this type - integer, array (for csv values), float, DateTime, Vendor\\MyExt\\Domain\\Model\\Object or ObjectStorage with type hint. ",
          "valueSet": "v"
        },
        {
          "name": "transform",
          "description": "Set this to transform your value to this type - integer, array (for csv values), float, DateTime, Vendor\\MyExt\\Domain\\Model\\Object or ObjectStorage with type hint. "
        },
        {
          "name": "${enabled:enabled}=\"$1\"",
          "description": "If FALSE, disables the field in the FlexForm",
          "valueSet": "v"
        },
        {
          "name": "enabled",
          "description": "If FALSE, disables the field in the FlexForm"
        },
        {
          "name": "${requestUpdate:requestUpdate}=\"$1\"",
          "description": "If TRUE, the form is force-saved and reloaded when field value changes",
          "valueSet": "v"
        },
        {
          "name": "requestUpdate",
          "description": "If TRUE, the form is force-saved and reloaded when field value changes"
        },
        {
          "name": "${displayCond:displayCond}=\"$1\"",
          "description": "Optional \"Display Condition\" (TCA style) for this particular field. See: https://docs.typo3.org/typo3cms/TCAReference/Reference/Columns/Index.html#displaycond",
          "valueSet": "v"
        },
        {
          "name": "displayCond",
          "description": "Optional \"Display Condition\" (TCA style) for this particular field. See: https://docs.typo3.org/typo3cms/TCAReference/Reference/Columns/Index.html#displaycond"
        },
        {
          "name": "${inherit:inherit}=\"$1\"",
          "description": "If TRUE, the value for this particular field is inherited - if inheritance is enabled by the ConfigurationProvider",
          "valueSet": "v"
        },
        {
          "name": "inherit",
          "description": "If TRUE, the value for this particular field is inherited - if inheritance is enabled by the ConfigurationProvider"
        },
        {
          "name": "${inheritEmpty:inheritEmpty}=\"$1\"",
          "description": "If TRUE, allows empty values (specifically excluding the number zero!) to be inherited - if inheritance is enabled by the ConfigurationProvider",
          "valueSet": "v"
        },
        {
          "name": "inheritEmpty",
          "description": "If TRUE, allows empty values (specifically excluding the number zero!) to be inherited - if inheritance is enabled by the ConfigurationProvider"
        },
        {
          "name": "${clear:clear}=\"$1\"",
          "description": "If TRUE, a \"clear value\" checkbox is displayed next to the field which when checked, completely destroys the current field value all the way down to the stored XML value",
          "valueSet": "v"
        },
        {
          "name": "clear",
          "description": "If TRUE, a \"clear value\" checkbox is displayed next to the field which when checked, completely destroys the current field value all the way down to the stored XML value"
        },
        {
          "name": "${variables:variables}=\"$1\"",
          "description": "Freestyle variables which become assigned to the resulting Component - can then be read from that Component outside this Fluid template and in other templates using the Form object from this template",
          "valueSet": "v"
        },
        {
          "name": "variables",
          "description": "Freestyle variables which become assigned to the resulting Component - can then be read from that Component outside this Fluid template and in other templates using the Form object from this template"
        },
        {
          "name": "${extensionName:extensionName}=\"$1\"",
          "description": "If provided, enables overriding the extension context for this and all child nodes. The extension name is otherwise automatically detected from rendering context.",
          "valueSet": "v"
        },
        {
          "name": "extensionName",
          "description": "If provided, enables overriding the extension context for this and all child nodes. The extension name is otherwise automatically detected from rendering context."
        },
        {
          "name": "${validate:validate}=\"$1\"",
          "description": "FlexForm-type validation configuration for this input",
          "valueSet": "v"
        },
        {
          "name": "validate",
          "description": "FlexForm-type validation configuration for this input"
        },
        {
          "name": "${size:size}=\"$1\"",
          "description": "Size of the selector box",
          "valueSet": "v"
        },
        {
          "name": "size",
          "description": "Size of the selector box"
        },
        {
          "name": "${multiple:multiple}=\"$1\"",
          "description": "If TRUE, allows selecting the same value multiple times",
          "valueSet": "v"
        },
        {
          "name": "multiple",
          "description": "If TRUE, allows selecting the same value multiple times"
        },
        {
          "name": "${minItems:minItems}=\"$1\"",
          "description": "Minimum required number of items to be selected",
          "valueSet": "v"
        },
        {
          "name": "minItems",
          "description": "Minimum required number of items to be selected"
        },
        {
          "name": "${maxItems:maxItems}=\"$1\"",
          "description": "Maxium allowed number of items to be selected",
          "valueSet": "v"
        },
        {
          "name": "maxItems",
          "description": "Maxium allowed number of items to be selected"
        },
        {
          "name": "${itemListStyle:itemListStyle}=\"$1\"",
          "description": "Overrides the default list style when maxItems > 1",
          "valueSet": "v"
        },
        {
          "name": "itemListStyle",
          "description": "Overrides the default list style when maxItems > 1"
        },
        {
          "name": "${selectedListStyle:selectedListStyle}=\"$1\"",
          "description": "Overrides the default selected list style when maxItems > 1 and renderType is SelectSingle",
          "valueSet": "v"
        },
        {
          "name": "selectedListStyle",
          "description": "Overrides the default selected list style when maxItems > 1 and renderType is SelectSingle"
        },
        {
          "name": "${items:items}=\"$1\"",
          "description": "Items for the selector; array / CSV / Traversable / Query supported",
          "valueSet": "v"
        },
        {
          "name": "items",
          "description": "Items for the selector; array / CSV / Traversable / Query supported"
        },
        {
          "name": "${emptyOption:emptyOption}=\"$1\"",
          "description": "If not-FALSE, adds one empty option/value pair to the generated selector box and tries to use this property's value (cast to string) as label.",
          "valueSet": "v"
        },
        {
          "name": "emptyOption",
          "description": "If not-FALSE, adds one empty option/value pair to the generated selector box and tries to use this property's value (cast to string) as label."
        },
        {
          "name": "${translateCsvItems:translateCsvItems}=\"$1\"",
          "description": "If TRUE, attempts to resolve a LLL label for each value provided as CSV in \"items\" attribute using convention for lookup \"$field.option.123\" if given \"123\" as CSV item value. Field name is determined by normal Flux field name conventions",
          "valueSet": "v"
        },
        {
          "name": "translateCsvItems",
          "description": "If TRUE, attempts to resolve a LLL label for each value provided as CSV in \"items\" attribute using convention for lookup \"$field.option.123\" if given \"123\" as CSV item value. Field name is determined by normal Flux field name conventions"
        },
        {
          "name": "${itemsProcFunc:itemsProcFunc}=\"$1\"",
          "description": "Function for serving items. See TCA \"select\" field \"itemsProcFunc\" attribute",
          "valueSet": "v"
        },
        {
          "name": "itemsProcFunc",
          "description": "Function for serving items. See TCA \"select\" field \"itemsProcFunc\" attribute"
        },
        {
          "name": "${renderType:renderType}=\"$1\"",
          "description": "Rendering type as applies in FormEngine/TCA",
          "valueSet": "v"
        },
        {
          "name": "renderType",
          "description": "Rendering type as applies in FormEngine/TCA"
        },
        {
          "name": "${showIconTable:showIconTable}=\"$1\"",
          "description": "If TRUE shows the option icons as table beneath the select",
          "valueSet": "v"
        },
        {
          "name": "showIconTable",
          "description": "If TRUE shows the option icons as table beneath the select"
        }
      ]
    },
    {
      "name": "flux:field.relation",
      "description": "Select one or multiple database records from one table. Features a two-list style that shows all selectable items in a list on the right side, and all selected items in a list on the left side. Related: ``MultiRelationViewHelper``. ### Example: Select a content element If put inside a fluidpages \"Configuration\" section, the following code allows selecting a content element from the current page: <flux:field.relation name=\"settings.content\" table=\"tt_content\" condition=\"AND tt_content.pid = ###THIS_UID###\" /> A list of allowed markers for the `condition` can be found in the [TCA \"select\" type `foreign_table_where` documentation](https://docs.typo3.org/typo3cms/TCAReference/ColumnsConfig/Type/Select.html#foreign-table-where). /",
      "attributes": [
        {
          "name": "${name:name}=\"$1\"",
          "description": "Name of the attribute, FlexForm XML-valid tag name string",
          "valueSet": "v"
        },
        {
          "name": "name",
          "description": "Name of the attribute, FlexForm XML-valid tag name string"
        },
        {
          "name": "${label:label}=\"$1\"",
          "description": "Label for the attribute, can be LLL: value. Optional - if not specified, Flux tries to detect an LLL label named \"flux.fluxFormId.fields.foobar\" based on field name, in scope of extension rendering the Flux form. If field is in an object, use \"flux.fluxFormId.objects.objectname.foobar\" where \"foobar\" is the name of the field.",
          "valueSet": "v"
        },
        {
          "name": "label",
          "description": "Label for the attribute, can be LLL: value. Optional - if not specified, Flux tries to detect an LLL label named \"flux.fluxFormId.fields.foobar\" based on field name, in scope of extension rendering the Flux form. If field is in an object, use \"flux.fluxFormId.objects.objectname.foobar\" where \"foobar\" is the name of the field."
        },
        {
          "name": "${default:default}=\"$1\"",
          "description": "Default value for this attribute",
          "valueSet": "v"
        },
        {
          "name": "default",
          "description": "Default value for this attribute"
        },
        {
          "name": "${required:required}=\"$1\"",
          "description": "If TRUE, this attribute must be filled when editing the FCE",
          "valueSet": "v"
        },
        {
          "name": "required",
          "description": "If TRUE, this attribute must be filled when editing the FCE"
        },
        {
          "name": "${exclude:exclude}=\"$1\"",
          "description": "If TRUE, this field becomes an \"exclude field\" (see TYPO3 documentation about this)",
          "valueSet": "v"
        },
        {
          "name": "exclude",
          "description": "If TRUE, this field becomes an \"exclude field\" (see TYPO3 documentation about this)"
        },
        {
          "name": "${transform:transform}=\"$1\"",
          "description": "Set this to transform your value to this type - integer, array (for csv values), float, DateTime, Vendor\\MyExt\\Domain\\Model\\Object or ObjectStorage with type hint. ",
          "valueSet": "v"
        },
        {
          "name": "transform",
          "description": "Set this to transform your value to this type - integer, array (for csv values), float, DateTime, Vendor\\MyExt\\Domain\\Model\\Object or ObjectStorage with type hint. "
        },
        {
          "name": "${enabled:enabled}=\"$1\"",
          "description": "If FALSE, disables the field in the FlexForm",
          "valueSet": "v"
        },
        {
          "name": "enabled",
          "description": "If FALSE, disables the field in the FlexForm"
        },
        {
          "name": "${requestUpdate:requestUpdate}=\"$1\"",
          "description": "If TRUE, the form is force-saved and reloaded when field value changes",
          "valueSet": "v"
        },
        {
          "name": "requestUpdate",
          "description": "If TRUE, the form is force-saved and reloaded when field value changes"
        },
        {
          "name": "${displayCond:displayCond}=\"$1\"",
          "description": "Optional \"Display Condition\" (TCA style) for this particular field. See: https://docs.typo3.org/typo3cms/TCAReference/Reference/Columns/Index.html#displaycond",
          "valueSet": "v"
        },
        {
          "name": "displayCond",
          "description": "Optional \"Display Condition\" (TCA style) for this particular field. See: https://docs.typo3.org/typo3cms/TCAReference/Reference/Columns/Index.html#displaycond"
        },
        {
          "name": "${inherit:inherit}=\"$1\"",
          "description": "If TRUE, the value for this particular field is inherited - if inheritance is enabled by the ConfigurationProvider",
          "valueSet": "v"
        },
        {
          "name": "inherit",
          "description": "If TRUE, the value for this particular field is inherited - if inheritance is enabled by the ConfigurationProvider"
        },
        {
          "name": "${inheritEmpty:inheritEmpty}=\"$1\"",
          "description": "If TRUE, allows empty values (specifically excluding the number zero!) to be inherited - if inheritance is enabled by the ConfigurationProvider",
          "valueSet": "v"
        },
        {
          "name": "inheritEmpty",
          "description": "If TRUE, allows empty values (specifically excluding the number zero!) to be inherited - if inheritance is enabled by the ConfigurationProvider"
        },
        {
          "name": "${clear:clear}=\"$1\"",
          "description": "If TRUE, a \"clear value\" checkbox is displayed next to the field which when checked, completely destroys the current field value all the way down to the stored XML value",
          "valueSet": "v"
        },
        {
          "name": "clear",
          "description": "If TRUE, a \"clear value\" checkbox is displayed next to the field which when checked, completely destroys the current field value all the way down to the stored XML value"
        },
        {
          "name": "${variables:variables}=\"$1\"",
          "description": "Freestyle variables which become assigned to the resulting Component - can then be read from that Component outside this Fluid template and in other templates using the Form object from this template",
          "valueSet": "v"
        },
        {
          "name": "variables",
          "description": "Freestyle variables which become assigned to the resulting Component - can then be read from that Component outside this Fluid template and in other templates using the Form object from this template"
        },
        {
          "name": "${extensionName:extensionName}=\"$1\"",
          "description": "If provided, enables overriding the extension context for this and all child nodes. The extension name is otherwise automatically detected from rendering context.",
          "valueSet": "v"
        },
        {
          "name": "extensionName",
          "description": "If provided, enables overriding the extension context for this and all child nodes. The extension name is otherwise automatically detected from rendering context."
        },
        {
          "name": "${validate:validate}=\"$1\"",
          "description": "FlexForm-type validation configuration for this input",
          "valueSet": "v"
        },
        {
          "name": "validate",
          "description": "FlexForm-type validation configuration for this input"
        },
        {
          "name": "${size:size}=\"$1\"",
          "description": "Size of the selector box",
          "valueSet": "v"
        },
        {
          "name": "size",
          "description": "Size of the selector box"
        },
        {
          "name": "${multiple:multiple}=\"$1\"",
          "description": "If TRUE, allows selecting the same value multiple times",
          "valueSet": "v"
        },
        {
          "name": "multiple",
          "description": "If TRUE, allows selecting the same value multiple times"
        },
        {
          "name": "${minItems:minItems}=\"$1\"",
          "description": "Minimum required number of items to be selected",
          "valueSet": "v"
        },
        {
          "name": "minItems",
          "description": "Minimum required number of items to be selected"
        },
        {
          "name": "${maxItems:maxItems}=\"$1\"",
          "description": "Maxium allowed number of items to be selected",
          "valueSet": "v"
        },
        {
          "name": "maxItems",
          "description": "Maxium allowed number of items to be selected"
        },
        {
          "name": "${itemListStyle:itemListStyle}=\"$1\"",
          "description": "Overrides the default list style when maxItems > 1",
          "valueSet": "v"
        },
        {
          "name": "itemListStyle",
          "description": "Overrides the default list style when maxItems > 1"
        },
        {
          "name": "${selectedListStyle:selectedListStyle}=\"$1\"",
          "description": "Overrides the default selected list style when maxItems > 1 and renderType is SelectSingle",
          "valueSet": "v"
        },
        {
          "name": "selectedListStyle",
          "description": "Overrides the default selected list style when maxItems > 1 and renderType is SelectSingle"
        },
        {
          "name": "${items:items}=\"$1\"",
          "description": "Items for the selector; array / CSV / Traversable / Query supported",
          "valueSet": "v"
        },
        {
          "name": "items",
          "description": "Items for the selector; array / CSV / Traversable / Query supported"
        },
        {
          "name": "${emptyOption:emptyOption}=\"$1\"",
          "description": "If not-FALSE, adds one empty option/value pair to the generated selector box and tries to use this property's value (cast to string) as label.",
          "valueSet": "v"
        },
        {
          "name": "emptyOption",
          "description": "If not-FALSE, adds one empty option/value pair to the generated selector box and tries to use this property's value (cast to string) as label."
        },
        {
          "name": "${translateCsvItems:translateCsvItems}=\"$1\"",
          "description": "If TRUE, attempts to resolve a LLL label for each value provided as CSV in \"items\" attribute using convention for lookup \"$field.option.123\" if given \"123\" as CSV item value. Field name is determined by normal Flux field name conventions",
          "valueSet": "v"
        },
        {
          "name": "translateCsvItems",
          "description": "If TRUE, attempts to resolve a LLL label for each value provided as CSV in \"items\" attribute using convention for lookup \"$field.option.123\" if given \"123\" as CSV item value. Field name is determined by normal Flux field name conventions"
        },
        {
          "name": "${itemsProcFunc:itemsProcFunc}=\"$1\"",
          "description": "Function for serving items. See TCA \"select\" field \"itemsProcFunc\" attribute",
          "valueSet": "v"
        },
        {
          "name": "itemsProcFunc",
          "description": "Function for serving items. See TCA \"select\" field \"itemsProcFunc\" attribute"
        },
        {
          "name": "${table:table}=\"$1\"",
          "description": "Define foreign table name to turn selector into a record selector for that table",
          "valueSet": "v"
        },
        {
          "name": "table",
          "description": "Define foreign table name to turn selector into a record selector for that table"
        },
        {
          "name": "${condition:condition}=\"$1\"",
          "description": "Condition to use when selecting from \"foreignTable\", supports FlexForm `foreign_table_where` markers",
          "valueSet": "v"
        },
        {
          "name": "condition",
          "description": "Condition to use when selecting from \"foreignTable\", supports FlexForm `foreign_table_where` markers"
        },
        {
          "name": "${mm:mm}=\"$1\"",
          "description": "Optional name of MM table to use for record selection",
          "valueSet": "v"
        },
        {
          "name": "mm",
          "description": "Optional name of MM table to use for record selection"
        },
        {
          "name": "${foreignField:foreignField}=\"$1\"",
          "description": "The `foreign_field` is the field of the child record pointing to the parent record. This defines where to store the uid of the parent record.",
          "valueSet": "v"
        },
        {
          "name": "foreignField",
          "description": "The `foreign_field` is the field of the child record pointing to the parent record. This defines where to store the uid of the parent record."
        },
        {
          "name": "${foreignLabel:foreignLabel}=\"$1\"",
          "description": "If set, it overrides the label set in `TCA[foreign_table]['ctrl']['label']` for the inline-view.",
          "valueSet": "v"
        },
        {
          "name": "foreignLabel",
          "description": "If set, it overrides the label set in `TCA[foreign_table]['ctrl']['label']` for the inline-view."
        },
        {
          "name": "${foreignSelector:foreignSelector}=\"$1\"",
          "description": "A selector is used to show all possible child records that could be used to create a relation with the parent record. It will be rendered as a multi-select-box. On clicking on an item inside the selector a new relation is created. The `foreign_selector` points to a field of the `foreign_table` that is responsible for providing a selector-box - this field on the `foreign_table` usually has the type \"select\" and also has a `foreign_table` defined.",
          "valueSet": "v"
        },
        {
          "name": "foreignSelector",
          "description": "A selector is used to show all possible child records that could be used to create a relation with the parent record. It will be rendered as a multi-select-box. On clicking on an item inside the selector a new relation is created. The `foreign_selector` points to a field of the `foreign_table` that is responsible for providing a selector-box - this field on the `foreign_table` usually has the type \"select\" and also has a `foreign_table` defined."
        },
        {
          "name": "${foreignSortby:foreignSortby}=\"$1\"",
          "description": "Field on the child record (or on the intermediate table) that stores the manual sorting information.",
          "valueSet": "v"
        },
        {
          "name": "foreignSortby",
          "description": "Field on the child record (or on the intermediate table) that stores the manual sorting information."
        },
        {
          "name": "${foreignDefaultSortby:foreignDefaultSortby}=\"$1\"",
          "description": "If a fieldname for `foreign_sortby` is defined, then this is ignored. Otherwise this is used as the \"ORDER BY\" statement to sort the records in the table when listed.",
          "valueSet": "v"
        },
        {
          "name": "foreignDefaultSortby",
          "description": "If a fieldname for `foreign_sortby` is defined, then this is ignored. Otherwise this is used as the \"ORDER BY\" statement to sort the records in the table when listed."
        },
        {
          "name": "${foreignTableField:foreignTableField}=\"$1\"",
          "description": "The field of the child record pointing to the parent record. This defines where to store the table name of the parent record. On setting this configuration key together with `foreign_field`, the child record knows what its parent record is - so the child record could also be used on other parent tables.",
          "valueSet": "v"
        },
        {
          "name": "foreignTableField",
          "description": "The field of the child record pointing to the parent record. This defines where to store the table name of the parent record. On setting this configuration key together with `foreign_field`, the child record knows what its parent record is - so the child record could also be used on other parent tables."
        },
        {
          "name": "${foreignUnique:foreignUnique}=\"$1\"",
          "description": "Field which must be uniue for all children of a parent record.",
          "valueSet": "v"
        },
        {
          "name": "foreignUnique",
          "description": "Field which must be uniue for all children of a parent record."
        },
        {
          "name": "${symmetricField:symmetricField}=\"$1\"",
          "description": "In case of bidirectional symmetric relations, this defines in which field on the foreign table the uid of the \"other\" parent is stored.",
          "valueSet": "v"
        },
        {
          "name": "symmetricField",
          "description": "In case of bidirectional symmetric relations, this defines in which field on the foreign table the uid of the \"other\" parent is stored."
        },
        {
          "name": "${symmetricLabel:symmetricLabel}=\"$1\"",
          "description": "If set, this overrides the default label of the selected `symmetric_field`.",
          "valueSet": "v"
        },
        {
          "name": "symmetricLabel",
          "description": "If set, this overrides the default label of the selected `symmetric_field`."
        },
        {
          "name": "${symmetricSortby:symmetricSortby}=\"$1\"",
          "description": "Works like `foreign_sortby`, but defines the field on `foreign_table` where the \"other\" sort order is stored.",
          "valueSet": "v"
        },
        {
          "name": "symmetricSortby",
          "description": "Works like `foreign_sortby`, but defines the field on `foreign_table` where the \"other\" sort order is stored."
        },
        {
          "name": "${localizationMode:localizationMode}=\"$1\"",
          "description": "Set whether children can be localizable ('select') or just inherit from default language ('keep').",
          "valueSet": "v"
        },
        {
          "name": "localizationMode",
          "description": "Set whether children can be localizable ('select') or just inherit from default language ('keep')."
        },
        {
          "name": "${localizeChildrenAtParentLocalization:localizeChildrenAtParentLocalization}=\"$1\"",
          "description": "Defines whether children should be localized when the localization of the parent gets created.",
          "valueSet": "v"
        },
        {
          "name": "localizeChildrenAtParentLocalization",
          "description": "Defines whether children should be localized when the localization of the parent gets created."
        },
        {
          "name": "${disableMovingChildrenWithParent:disableMovingChildrenWithParent}=\"$1\"",
          "description": "Disables that child records get moved along with their parent records.",
          "valueSet": "v"
        },
        {
          "name": "disableMovingChildrenWithParent",
          "description": "Disables that child records get moved along with their parent records."
        },
        {
          "name": "${showThumbs:showThumbs}=\"$1\"",
          "description": "If TRUE, adds thumbnail display when editing in BE",
          "valueSet": "v"
        },
        {
          "name": "showThumbs",
          "description": "If TRUE, adds thumbnail display when editing in BE"
        },
        {
          "name": "${matchFields:matchFields}=\"$1\"",
          "description": "When using manyToMany you can provide an additional array of field=>value pairs that must match in the relation table",
          "valueSet": "v"
        },
        {
          "name": "matchFields",
          "description": "When using manyToMany you can provide an additional array of field=>value pairs that must match in the relation table"
        },
        {
          "name": "${oppositeField:oppositeField}=\"$1\"",
          "description": "Name of the opposite field related to a proper mm relation",
          "valueSet": "v"
        },
        {
          "name": "oppositeField",
          "description": "Name of the opposite field related to a proper mm relation"
        }
      ]
    },
    {
      "name": "flux:field.select",
      "description": "Select-type FlexForm field ViewHelper ### Choosing one of two items Items are given in CSV mode: <flux:field.select name=\"settings.position\" items=\"left,right\" default=\"left\"/> ### Items with labels If you want to display labels that are different than the values itself, use an object in `items`: <flux:field.select name=\"settings.position\" items=\"{ 0:{0:'On the left side',1:'left'}, 1:{0:'On the right side',1:'right'} }\" /> You can translate those labels by putting a LLL reference in the first property: LLL:EXT:extname/Resources/Private/Language/locallang.xlf:flux.example.fields.items.foo' ### Links * [TCA Reference: type \"select\"](https://docs.typo3.org/typo3cms/TCAReference/stable/Reference/Columns/Select/) /",
      "attributes": [
        {
          "name": "${name:name}=\"$1\"",
          "description": "Name of the attribute, FlexForm XML-valid tag name string",
          "valueSet": "v"
        },
        {
          "name": "name",
          "description": "Name of the attribute, FlexForm XML-valid tag name string"
        },
        {
          "name": "${label:label}=\"$1\"",
          "description": "Label for the attribute, can be LLL: value. Optional - if not specified, Flux tries to detect an LLL label named \"flux.fluxFormId.fields.foobar\" based on field name, in scope of extension rendering the Flux form. If field is in an object, use \"flux.fluxFormId.objects.objectname.foobar\" where \"foobar\" is the name of the field.",
          "valueSet": "v"
        },
        {
          "name": "label",
          "description": "Label for the attribute, can be LLL: value. Optional - if not specified, Flux tries to detect an LLL label named \"flux.fluxFormId.fields.foobar\" based on field name, in scope of extension rendering the Flux form. If field is in an object, use \"flux.fluxFormId.objects.objectname.foobar\" where \"foobar\" is the name of the field."
        },
        {
          "name": "${default:default}=\"$1\"",
          "description": "Default value for this attribute",
          "valueSet": "v"
        },
        {
          "name": "default",
          "description": "Default value for this attribute"
        },
        {
          "name": "${required:required}=\"$1\"",
          "description": "If TRUE, this attribute must be filled when editing the FCE",
          "valueSet": "v"
        },
        {
          "name": "required",
          "description": "If TRUE, this attribute must be filled when editing the FCE"
        },
        {
          "name": "${exclude:exclude}=\"$1\"",
          "description": "If TRUE, this field becomes an \"exclude field\" (see TYPO3 documentation about this)",
          "valueSet": "v"
        },
        {
          "name": "exclude",
          "description": "If TRUE, this field becomes an \"exclude field\" (see TYPO3 documentation about this)"
        },
        {
          "name": "${transform:transform}=\"$1\"",
          "description": "Set this to transform your value to this type - integer, array (for csv values), float, DateTime, Vendor\\MyExt\\Domain\\Model\\Object or ObjectStorage with type hint. ",
          "valueSet": "v"
        },
        {
          "name": "transform",
          "description": "Set this to transform your value to this type - integer, array (for csv values), float, DateTime, Vendor\\MyExt\\Domain\\Model\\Object or ObjectStorage with type hint. "
        },
        {
          "name": "${enabled:enabled}=\"$1\"",
          "description": "If FALSE, disables the field in the FlexForm",
          "valueSet": "v"
        },
        {
          "name": "enabled",
          "description": "If FALSE, disables the field in the FlexForm"
        },
        {
          "name": "${requestUpdate:requestUpdate}=\"$1\"",
          "description": "If TRUE, the form is force-saved and reloaded when field value changes",
          "valueSet": "v"
        },
        {
          "name": "requestUpdate",
          "description": "If TRUE, the form is force-saved and reloaded when field value changes"
        },
        {
          "name": "${displayCond:displayCond}=\"$1\"",
          "description": "Optional \"Display Condition\" (TCA style) for this particular field. See: https://docs.typo3.org/typo3cms/TCAReference/Reference/Columns/Index.html#displaycond",
          "valueSet": "v"
        },
        {
          "name": "displayCond",
          "description": "Optional \"Display Condition\" (TCA style) for this particular field. See: https://docs.typo3.org/typo3cms/TCAReference/Reference/Columns/Index.html#displaycond"
        },
        {
          "name": "${inherit:inherit}=\"$1\"",
          "description": "If TRUE, the value for this particular field is inherited - if inheritance is enabled by the ConfigurationProvider",
          "valueSet": "v"
        },
        {
          "name": "inherit",
          "description": "If TRUE, the value for this particular field is inherited - if inheritance is enabled by the ConfigurationProvider"
        },
        {
          "name": "${inheritEmpty:inheritEmpty}=\"$1\"",
          "description": "If TRUE, allows empty values (specifically excluding the number zero!) to be inherited - if inheritance is enabled by the ConfigurationProvider",
          "valueSet": "v"
        },
        {
          "name": "inheritEmpty",
          "description": "If TRUE, allows empty values (specifically excluding the number zero!) to be inherited - if inheritance is enabled by the ConfigurationProvider"
        },
        {
          "name": "${clear:clear}=\"$1\"",
          "description": "If TRUE, a \"clear value\" checkbox is displayed next to the field which when checked, completely destroys the current field value all the way down to the stored XML value",
          "valueSet": "v"
        },
        {
          "name": "clear",
          "description": "If TRUE, a \"clear value\" checkbox is displayed next to the field which when checked, completely destroys the current field value all the way down to the stored XML value"
        },
        {
          "name": "${variables:variables}=\"$1\"",
          "description": "Freestyle variables which become assigned to the resulting Component - can then be read from that Component outside this Fluid template and in other templates using the Form object from this template",
          "valueSet": "v"
        },
        {
          "name": "variables",
          "description": "Freestyle variables which become assigned to the resulting Component - can then be read from that Component outside this Fluid template and in other templates using the Form object from this template"
        },
        {
          "name": "${extensionName:extensionName}=\"$1\"",
          "description": "If provided, enables overriding the extension context for this and all child nodes. The extension name is otherwise automatically detected from rendering context.",
          "valueSet": "v"
        },
        {
          "name": "extensionName",
          "description": "If provided, enables overriding the extension context for this and all child nodes. The extension name is otherwise automatically detected from rendering context."
        },
        {
          "name": "${validate:validate}=\"$1\"",
          "description": "FlexForm-type validation configuration for this input",
          "valueSet": "v"
        },
        {
          "name": "validate",
          "description": "FlexForm-type validation configuration for this input"
        },
        {
          "name": "${size:size}=\"$1\"",
          "description": "Size of the selector box",
          "valueSet": "v"
        },
        {
          "name": "size",
          "description": "Size of the selector box"
        },
        {
          "name": "${multiple:multiple}=\"$1\"",
          "description": "If TRUE, allows selecting the same value multiple times",
          "valueSet": "v"
        },
        {
          "name": "multiple",
          "description": "If TRUE, allows selecting the same value multiple times"
        },
        {
          "name": "${minItems:minItems}=\"$1\"",
          "description": "Minimum required number of items to be selected",
          "valueSet": "v"
        },
        {
          "name": "minItems",
          "description": "Minimum required number of items to be selected"
        },
        {
          "name": "${maxItems:maxItems}=\"$1\"",
          "description": "Maxium allowed number of items to be selected",
          "valueSet": "v"
        },
        {
          "name": "maxItems",
          "description": "Maxium allowed number of items to be selected"
        },
        {
          "name": "${itemListStyle:itemListStyle}=\"$1\"",
          "description": "Overrides the default list style when maxItems > 1",
          "valueSet": "v"
        },
        {
          "name": "itemListStyle",
          "description": "Overrides the default list style when maxItems > 1"
        },
        {
          "name": "${selectedListStyle:selectedListStyle}=\"$1\"",
          "description": "Overrides the default selected list style when maxItems > 1 and renderType is SelectSingle",
          "valueSet": "v"
        },
        {
          "name": "selectedListStyle",
          "description": "Overrides the default selected list style when maxItems > 1 and renderType is SelectSingle"
        },
        {
          "name": "${items:items}=\"$1\"",
          "description": "Items for the selector; array / CSV / Traversable / Query supported",
          "valueSet": "v"
        },
        {
          "name": "items",
          "description": "Items for the selector; array / CSV / Traversable / Query supported"
        },
        {
          "name": "${emptyOption:emptyOption}=\"$1\"",
          "description": "If not-FALSE, adds one empty option/value pair to the generated selector box and tries to use this property's value (cast to string) as label.",
          "valueSet": "v"
        },
        {
          "name": "emptyOption",
          "description": "If not-FALSE, adds one empty option/value pair to the generated selector box and tries to use this property's value (cast to string) as label."
        },
        {
          "name": "${translateCsvItems:translateCsvItems}=\"$1\"",
          "description": "If TRUE, attempts to resolve a LLL label for each value provided as CSV in \"items\" attribute using convention for lookup \"$field.option.123\" if given \"123\" as CSV item value. Field name is determined by normal Flux field name conventions",
          "valueSet": "v"
        },
        {
          "name": "translateCsvItems",
          "description": "If TRUE, attempts to resolve a LLL label for each value provided as CSV in \"items\" attribute using convention for lookup \"$field.option.123\" if given \"123\" as CSV item value. Field name is determined by normal Flux field name conventions"
        },
        {
          "name": "${itemsProcFunc:itemsProcFunc}=\"$1\"",
          "description": "Function for serving items. See TCA \"select\" field \"itemsProcFunc\" attribute",
          "valueSet": "v"
        },
        {
          "name": "itemsProcFunc",
          "description": "Function for serving items. See TCA \"select\" field \"itemsProcFunc\" attribute"
        },
        {
          "name": "${renderType:renderType}=\"$1\"",
          "description": "Rendering type as applies in FormEngine/TCA",
          "valueSet": "v"
        },
        {
          "name": "renderType",
          "description": "Rendering type as applies in FormEngine/TCA"
        },
        {
          "name": "${showIconTable:showIconTable}=\"$1\"",
          "description": "If TRUE shows the option icons as table beneath the select",
          "valueSet": "v"
        },
        {
          "name": "showIconTable",
          "description": "If TRUE shows the option icons as table beneath the select"
        }
      ]
    },
    {
      "name": "flux:field.text",
      "description": "Textarea FlexForm field ViewHelper /",
      "attributes": [
        {
          "name": "${name:name}=\"$1\"",
          "description": "Name of the attribute, FlexForm XML-valid tag name string",
          "valueSet": "v"
        },
        {
          "name": "name",
          "description": "Name of the attribute, FlexForm XML-valid tag name string"
        },
        {
          "name": "${label:label}=\"$1\"",
          "description": "Label for the attribute, can be LLL: value. Optional - if not specified, Flux tries to detect an LLL label named \"flux.fluxFormId.fields.foobar\" based on field name, in scope of extension rendering the Flux form. If field is in an object, use \"flux.fluxFormId.objects.objectname.foobar\" where \"foobar\" is the name of the field.",
          "valueSet": "v"
        },
        {
          "name": "label",
          "description": "Label for the attribute, can be LLL: value. Optional - if not specified, Flux tries to detect an LLL label named \"flux.fluxFormId.fields.foobar\" based on field name, in scope of extension rendering the Flux form. If field is in an object, use \"flux.fluxFormId.objects.objectname.foobar\" where \"foobar\" is the name of the field."
        },
        {
          "name": "${default:default}=\"$1\"",
          "description": "Default value for this attribute",
          "valueSet": "v"
        },
        {
          "name": "default",
          "description": "Default value for this attribute"
        },
        {
          "name": "${required:required}=\"$1\"",
          "description": "If TRUE, this attribute must be filled when editing the FCE",
          "valueSet": "v"
        },
        {
          "name": "required",
          "description": "If TRUE, this attribute must be filled when editing the FCE"
        },
        {
          "name": "${exclude:exclude}=\"$1\"",
          "description": "If TRUE, this field becomes an \"exclude field\" (see TYPO3 documentation about this)",
          "valueSet": "v"
        },
        {
          "name": "exclude",
          "description": "If TRUE, this field becomes an \"exclude field\" (see TYPO3 documentation about this)"
        },
        {
          "name": "${transform:transform}=\"$1\"",
          "description": "Set this to transform your value to this type - integer, array (for csv values), float, DateTime, Vendor\\MyExt\\Domain\\Model\\Object or ObjectStorage with type hint. ",
          "valueSet": "v"
        },
        {
          "name": "transform",
          "description": "Set this to transform your value to this type - integer, array (for csv values), float, DateTime, Vendor\\MyExt\\Domain\\Model\\Object or ObjectStorage with type hint. "
        },
        {
          "name": "${enabled:enabled}=\"$1\"",
          "description": "If FALSE, disables the field in the FlexForm",
          "valueSet": "v"
        },
        {
          "name": "enabled",
          "description": "If FALSE, disables the field in the FlexForm"
        },
        {
          "name": "${requestUpdate:requestUpdate}=\"$1\"",
          "description": "If TRUE, the form is force-saved and reloaded when field value changes",
          "valueSet": "v"
        },
        {
          "name": "requestUpdate",
          "description": "If TRUE, the form is force-saved and reloaded when field value changes"
        },
        {
          "name": "${displayCond:displayCond}=\"$1\"",
          "description": "Optional \"Display Condition\" (TCA style) for this particular field. See: https://docs.typo3.org/typo3cms/TCAReference/Reference/Columns/Index.html#displaycond",
          "valueSet": "v"
        },
        {
          "name": "displayCond",
          "description": "Optional \"Display Condition\" (TCA style) for this particular field. See: https://docs.typo3.org/typo3cms/TCAReference/Reference/Columns/Index.html#displaycond"
        },
        {
          "name": "${inherit:inherit}=\"$1\"",
          "description": "If TRUE, the value for this particular field is inherited - if inheritance is enabled by the ConfigurationProvider",
          "valueSet": "v"
        },
        {
          "name": "inherit",
          "description": "If TRUE, the value for this particular field is inherited - if inheritance is enabled by the ConfigurationProvider"
        },
        {
          "name": "${inheritEmpty:inheritEmpty}=\"$1\"",
          "description": "If TRUE, allows empty values (specifically excluding the number zero!) to be inherited - if inheritance is enabled by the ConfigurationProvider",
          "valueSet": "v"
        },
        {
          "name": "inheritEmpty",
          "description": "If TRUE, allows empty values (specifically excluding the number zero!) to be inherited - if inheritance is enabled by the ConfigurationProvider"
        },
        {
          "name": "${clear:clear}=\"$1\"",
          "description": "If TRUE, a \"clear value\" checkbox is displayed next to the field which when checked, completely destroys the current field value all the way down to the stored XML value",
          "valueSet": "v"
        },
        {
          "name": "clear",
          "description": "If TRUE, a \"clear value\" checkbox is displayed next to the field which when checked, completely destroys the current field value all the way down to the stored XML value"
        },
        {
          "name": "${variables:variables}=\"$1\"",
          "description": "Freestyle variables which become assigned to the resulting Component - can then be read from that Component outside this Fluid template and in other templates using the Form object from this template",
          "valueSet": "v"
        },
        {
          "name": "variables",
          "description": "Freestyle variables which become assigned to the resulting Component - can then be read from that Component outside this Fluid template and in other templates using the Form object from this template"
        },
        {
          "name": "${extensionName:extensionName}=\"$1\"",
          "description": "If provided, enables overriding the extension context for this and all child nodes. The extension name is otherwise automatically detected from rendering context.",
          "valueSet": "v"
        },
        {
          "name": "extensionName",
          "description": "If provided, enables overriding the extension context for this and all child nodes. The extension name is otherwise automatically detected from rendering context."
        },
        {
          "name": "${validate:validate}=\"$1\"",
          "description": "FlexForm-type validation configuration for this input",
          "valueSet": "v"
        },
        {
          "name": "validate",
          "description": "FlexForm-type validation configuration for this input"
        },
        {
          "name": "${cols:cols}=\"$1\"",
          "description": "Number of columns in editor",
          "valueSet": "v"
        },
        {
          "name": "cols",
          "description": "Number of columns in editor"
        },
        {
          "name": "${rows:rows}=\"$1\"",
          "description": "Number of rows in editor",
          "valueSet": "v"
        },
        {
          "name": "rows",
          "description": "Number of rows in editor"
        },
        {
          "name": "${defaultExtras:defaultExtras}=\"$1\"",
          "description": "DEPRECATED, IGNORED - has no function on TYPO3 8.7+. FlexForm-syntax \"defaultExtras\" definition, example: \"richtext[*]:rte_transform[mode=ts_css]\"",
          "valueSet": "v"
        },
        {
          "name": "defaultExtras",
          "description": "DEPRECATED, IGNORED - has no function on TYPO3 8.7+. FlexForm-syntax \"defaultExtras\" definition, example: \"richtext[*]:rte_transform[mode=ts_css]\""
        },
        {
          "name": "${enableRichText:enableRichText}=\"$1\"",
          "description": "Enable the richtext editor (RTE)",
          "valueSet": "v"
        },
        {
          "name": "enableRichText",
          "description": "Enable the richtext editor (RTE)"
        },
        {
          "name": "${renderType:renderType}=\"$1\"",
          "description": "Render type allows you to modify the behaviour of text field. At the moment only t3editor and none (works as disabled) are supported but you can create your own. More information: https://docs.typo3.org/typo3cms/TCAReference/Reference/Columns/Text/Index.html#rendertype",
          "valueSet": "v"
        },
        {
          "name": "renderType",
          "description": "Render type allows you to modify the behaviour of text field. At the moment only t3editor and none (works as disabled) are supported but you can create your own. More information: https://docs.typo3.org/typo3cms/TCAReference/Reference/Columns/Text/Index.html#rendertype"
        },
        {
          "name": "${format:format}=\"$1\"",
          "description": "Format is used with renderType and, at the moment, is just useful if renderType is equals to t3editor. At the moment possible values are: html, typoscript, javascript, css, xml, html, php, sparql, mixed. More information: https://docs.typo3.org/typo3cms/TCAReference/Reference/Columns/Text/Index.html#format",
          "valueSet": "v"
        },
        {
          "name": "format",
          "description": "Format is used with renderType and, at the moment, is just useful if renderType is equals to t3editor. At the moment possible values are: html, typoscript, javascript, css, xml, html, php, sparql, mixed. More information: https://docs.typo3.org/typo3cms/TCAReference/Reference/Columns/Text/Index.html#format"
        },
        {
          "name": "${richtextConfiguration:richtextConfiguration}=\"$1\"",
          "description": "Specifies which configuration to use in combination with EXT:rte_ckeditor.If none is given, PageTSconfig \"RTE.tx_flux.preset\" and \"RTE.default.preset\" are used.More information: https://docs.typo3.org/typo3cms/TCAReference/ColumnsConfig/Properties/TextRichtextConfiugration.html",
          "valueSet": "v"
        },
        {
          "name": "richtextConfiguration",
          "description": "Specifies which configuration to use in combination with EXT:rte_ckeditor.If none is given, PageTSconfig \"RTE.tx_flux.preset\" and \"RTE.default.preset\" are used.More information: https://docs.typo3.org/typo3cms/TCAReference/ColumnsConfig/Properties/TextRichtextConfiugration.html"
        },
        {
          "name": "${placeholder:placeholder}=\"$1\"",
          "description": "Placeholder text which vanishes if field is filled and/or field is focused",
          "valueSet": "v"
        },
        {
          "name": "placeholder",
          "description": "Placeholder text which vanishes if field is filled and/or field is focused"
        }
      ]
    },
    {
      "name": "flux:field.tree",
      "description": "Tree (select supertype) FlexForm field ViewHelper /",
      "attributes": [
        {
          "name": "${name:name}=\"$1\"",
          "description": "Name of the attribute, FlexForm XML-valid tag name string",
          "valueSet": "v"
        },
        {
          "name": "name",
          "description": "Name of the attribute, FlexForm XML-valid tag name string"
        },
        {
          "name": "${label:label}=\"$1\"",
          "description": "Label for the attribute, can be LLL: value. Optional - if not specified, Flux tries to detect an LLL label named \"flux.fluxFormId.fields.foobar\" based on field name, in scope of extension rendering the Flux form. If field is in an object, use \"flux.fluxFormId.objects.objectname.foobar\" where \"foobar\" is the name of the field.",
          "valueSet": "v"
        },
        {
          "name": "label",
          "description": "Label for the attribute, can be LLL: value. Optional - if not specified, Flux tries to detect an LLL label named \"flux.fluxFormId.fields.foobar\" based on field name, in scope of extension rendering the Flux form. If field is in an object, use \"flux.fluxFormId.objects.objectname.foobar\" where \"foobar\" is the name of the field."
        },
        {
          "name": "${default:default}=\"$1\"",
          "description": "Default value for this attribute",
          "valueSet": "v"
        },
        {
          "name": "default",
          "description": "Default value for this attribute"
        },
        {
          "name": "${required:required}=\"$1\"",
          "description": "If TRUE, this attribute must be filled when editing the FCE",
          "valueSet": "v"
        },
        {
          "name": "required",
          "description": "If TRUE, this attribute must be filled when editing the FCE"
        },
        {
          "name": "${exclude:exclude}=\"$1\"",
          "description": "If TRUE, this field becomes an \"exclude field\" (see TYPO3 documentation about this)",
          "valueSet": "v"
        },
        {
          "name": "exclude",
          "description": "If TRUE, this field becomes an \"exclude field\" (see TYPO3 documentation about this)"
        },
        {
          "name": "${transform:transform}=\"$1\"",
          "description": "Set this to transform your value to this type - integer, array (for csv values), float, DateTime, Vendor\\MyExt\\Domain\\Model\\Object or ObjectStorage with type hint. ",
          "valueSet": "v"
        },
        {
          "name": "transform",
          "description": "Set this to transform your value to this type - integer, array (for csv values), float, DateTime, Vendor\\MyExt\\Domain\\Model\\Object or ObjectStorage with type hint. "
        },
        {
          "name": "${enabled:enabled}=\"$1\"",
          "description": "If FALSE, disables the field in the FlexForm",
          "valueSet": "v"
        },
        {
          "name": "enabled",
          "description": "If FALSE, disables the field in the FlexForm"
        },
        {
          "name": "${requestUpdate:requestUpdate}=\"$1\"",
          "description": "If TRUE, the form is force-saved and reloaded when field value changes",
          "valueSet": "v"
        },
        {
          "name": "requestUpdate",
          "description": "If TRUE, the form is force-saved and reloaded when field value changes"
        },
        {
          "name": "${displayCond:displayCond}=\"$1\"",
          "description": "Optional \"Display Condition\" (TCA style) for this particular field. See: https://docs.typo3.org/typo3cms/TCAReference/Reference/Columns/Index.html#displaycond",
          "valueSet": "v"
        },
        {
          "name": "displayCond",
          "description": "Optional \"Display Condition\" (TCA style) for this particular field. See: https://docs.typo3.org/typo3cms/TCAReference/Reference/Columns/Index.html#displaycond"
        },
        {
          "name": "${inherit:inherit}=\"$1\"",
          "description": "If TRUE, the value for this particular field is inherited - if inheritance is enabled by the ConfigurationProvider",
          "valueSet": "v"
        },
        {
          "name": "inherit",
          "description": "If TRUE, the value for this particular field is inherited - if inheritance is enabled by the ConfigurationProvider"
        },
        {
          "name": "${inheritEmpty:inheritEmpty}=\"$1\"",
          "description": "If TRUE, allows empty values (specifically excluding the number zero!) to be inherited - if inheritance is enabled by the ConfigurationProvider",
          "valueSet": "v"
        },
        {
          "name": "inheritEmpty",
          "description": "If TRUE, allows empty values (specifically excluding the number zero!) to be inherited - if inheritance is enabled by the ConfigurationProvider"
        },
        {
          "name": "${clear:clear}=\"$1\"",
          "description": "If TRUE, a \"clear value\" checkbox is displayed next to the field which when checked, completely destroys the current field value all the way down to the stored XML value",
          "valueSet": "v"
        },
        {
          "name": "clear",
          "description": "If TRUE, a \"clear value\" checkbox is displayed next to the field which when checked, completely destroys the current field value all the way down to the stored XML value"
        },
        {
          "name": "${variables:variables}=\"$1\"",
          "description": "Freestyle variables which become assigned to the resulting Component - can then be read from that Component outside this Fluid template and in other templates using the Form object from this template",
          "valueSet": "v"
        },
        {
          "name": "variables",
          "description": "Freestyle variables which become assigned to the resulting Component - can then be read from that Component outside this Fluid template and in other templates using the Form object from this template"
        },
        {
          "name": "${extensionName:extensionName}=\"$1\"",
          "description": "If provided, enables overriding the extension context for this and all child nodes. The extension name is otherwise automatically detected from rendering context.",
          "valueSet": "v"
        },
        {
          "name": "extensionName",
          "description": "If provided, enables overriding the extension context for this and all child nodes. The extension name is otherwise automatically detected from rendering context."
        },
        {
          "name": "${validate:validate}=\"$1\"",
          "description": "FlexForm-type validation configuration for this input",
          "valueSet": "v"
        },
        {
          "name": "validate",
          "description": "FlexForm-type validation configuration for this input"
        },
        {
          "name": "${size:size}=\"$1\"",
          "description": "Size of the selector box",
          "valueSet": "v"
        },
        {
          "name": "size",
          "description": "Size of the selector box"
        },
        {
          "name": "${multiple:multiple}=\"$1\"",
          "description": "If TRUE, allows selecting the same value multiple times",
          "valueSet": "v"
        },
        {
          "name": "multiple",
          "description": "If TRUE, allows selecting the same value multiple times"
        },
        {
          "name": "${minItems:minItems}=\"$1\"",
          "description": "Minimum required number of items to be selected",
          "valueSet": "v"
        },
        {
          "name": "minItems",
          "description": "Minimum required number of items to be selected"
        },
        {
          "name": "${maxItems:maxItems}=\"$1\"",
          "description": "Maxium allowed number of items to be selected",
          "valueSet": "v"
        },
        {
          "name": "maxItems",
          "description": "Maxium allowed number of items to be selected"
        },
        {
          "name": "${itemListStyle:itemListStyle}=\"$1\"",
          "description": "Overrides the default list style when maxItems > 1",
          "valueSet": "v"
        },
        {
          "name": "itemListStyle",
          "description": "Overrides the default list style when maxItems > 1"
        },
        {
          "name": "${selectedListStyle:selectedListStyle}=\"$1\"",
          "description": "Overrides the default selected list style when maxItems > 1 and renderType is SelectSingle",
          "valueSet": "v"
        },
        {
          "name": "selectedListStyle",
          "description": "Overrides the default selected list style when maxItems > 1 and renderType is SelectSingle"
        },
        {
          "name": "${items:items}=\"$1\"",
          "description": "Items for the selector; array / CSV / Traversable / Query supported",
          "valueSet": "v"
        },
        {
          "name": "items",
          "description": "Items for the selector; array / CSV / Traversable / Query supported"
        },
        {
          "name": "${emptyOption:emptyOption}=\"$1\"",
          "description": "If not-FALSE, adds one empty option/value pair to the generated selector box and tries to use this property's value (cast to string) as label.",
          "valueSet": "v"
        },
        {
          "name": "emptyOption",
          "description": "If not-FALSE, adds one empty option/value pair to the generated selector box and tries to use this property's value (cast to string) as label."
        },
        {
          "name": "${translateCsvItems:translateCsvItems}=\"$1\"",
          "description": "If TRUE, attempts to resolve a LLL label for each value provided as CSV in \"items\" attribute using convention for lookup \"$field.option.123\" if given \"123\" as CSV item value. Field name is determined by normal Flux field name conventions",
          "valueSet": "v"
        },
        {
          "name": "translateCsvItems",
          "description": "If TRUE, attempts to resolve a LLL label for each value provided as CSV in \"items\" attribute using convention for lookup \"$field.option.123\" if given \"123\" as CSV item value. Field name is determined by normal Flux field name conventions"
        },
        {
          "name": "${itemsProcFunc:itemsProcFunc}=\"$1\"",
          "description": "Function for serving items. See TCA \"select\" field \"itemsProcFunc\" attribute",
          "valueSet": "v"
        },
        {
          "name": "itemsProcFunc",
          "description": "Function for serving items. See TCA \"select\" field \"itemsProcFunc\" attribute"
        },
        {
          "name": "${table:table}=\"$1\"",
          "description": "Define foreign table name to turn selector into a record selector for that table",
          "valueSet": "v"
        },
        {
          "name": "table",
          "description": "Define foreign table name to turn selector into a record selector for that table"
        },
        {
          "name": "${condition:condition}=\"$1\"",
          "description": "Condition to use when selecting from \"foreignTable\", supports FlexForm `foreign_table_where` markers",
          "valueSet": "v"
        },
        {
          "name": "condition",
          "description": "Condition to use when selecting from \"foreignTable\", supports FlexForm `foreign_table_where` markers"
        },
        {
          "name": "${mm:mm}=\"$1\"",
          "description": "Optional name of MM table to use for record selection",
          "valueSet": "v"
        },
        {
          "name": "mm",
          "description": "Optional name of MM table to use for record selection"
        },
        {
          "name": "${foreignField:foreignField}=\"$1\"",
          "description": "The `foreign_field` is the field of the child record pointing to the parent record. This defines where to store the uid of the parent record.",
          "valueSet": "v"
        },
        {
          "name": "foreignField",
          "description": "The `foreign_field` is the field of the child record pointing to the parent record. This defines where to store the uid of the parent record."
        },
        {
          "name": "${foreignLabel:foreignLabel}=\"$1\"",
          "description": "If set, it overrides the label set in `TCA[foreign_table]['ctrl']['label']` for the inline-view.",
          "valueSet": "v"
        },
        {
          "name": "foreignLabel",
          "description": "If set, it overrides the label set in `TCA[foreign_table]['ctrl']['label']` for the inline-view."
        },
        {
          "name": "${foreignSelector:foreignSelector}=\"$1\"",
          "description": "A selector is used to show all possible child records that could be used to create a relation with the parent record. It will be rendered as a multi-select-box. On clicking on an item inside the selector a new relation is created. The `foreign_selector` points to a field of the `foreign_table` that is responsible for providing a selector-box - this field on the `foreign_table` usually has the type \"select\" and also has a `foreign_table` defined.",
          "valueSet": "v"
        },
        {
          "name": "foreignSelector",
          "description": "A selector is used to show all possible child records that could be used to create a relation with the parent record. It will be rendered as a multi-select-box. On clicking on an item inside the selector a new relation is created. The `foreign_selector` points to a field of the `foreign_table` that is responsible for providing a selector-box - this field on the `foreign_table` usually has the type \"select\" and also has a `foreign_table` defined."
        },
        {
          "name": "${foreignSortby:foreignSortby}=\"$1\"",
          "description": "Field on the child record (or on the intermediate table) that stores the manual sorting information.",
          "valueSet": "v"
        },
        {
          "name": "foreignSortby",
          "description": "Field on the child record (or on the intermediate table) that stores the manual sorting information."
        },
        {
          "name": "${foreignDefaultSortby:foreignDefaultSortby}=\"$1\"",
          "description": "If a fieldname for `foreign_sortby` is defined, then this is ignored. Otherwise this is used as the \"ORDER BY\" statement to sort the records in the table when listed.",
          "valueSet": "v"
        },
        {
          "name": "foreignDefaultSortby",
          "description": "If a fieldname for `foreign_sortby` is defined, then this is ignored. Otherwise this is used as the \"ORDER BY\" statement to sort the records in the table when listed."
        },
        {
          "name": "${foreignTableField:foreignTableField}=\"$1\"",
          "description": "The field of the child record pointing to the parent record. This defines where to store the table name of the parent record. On setting this configuration key together with `foreign_field`, the child record knows what its parent record is - so the child record could also be used on other parent tables.",
          "valueSet": "v"
        },
        {
          "name": "foreignTableField",
          "description": "The field of the child record pointing to the parent record. This defines where to store the table name of the parent record. On setting this configuration key together with `foreign_field`, the child record knows what its parent record is - so the child record could also be used on other parent tables."
        },
        {
          "name": "${foreignUnique:foreignUnique}=\"$1\"",
          "description": "Field which must be uniue for all children of a parent record.",
          "valueSet": "v"
        },
        {
          "name": "foreignUnique",
          "description": "Field which must be uniue for all children of a parent record."
        },
        {
          "name": "${symmetricField:symmetricField}=\"$1\"",
          "description": "In case of bidirectional symmetric relations, this defines in which field on the foreign table the uid of the \"other\" parent is stored.",
          "valueSet": "v"
        },
        {
          "name": "symmetricField",
          "description": "In case of bidirectional symmetric relations, this defines in which field on the foreign table the uid of the \"other\" parent is stored."
        },
        {
          "name": "${symmetricLabel:symmetricLabel}=\"$1\"",
          "description": "If set, this overrides the default label of the selected `symmetric_field`.",
          "valueSet": "v"
        },
        {
          "name": "symmetricLabel",
          "description": "If set, this overrides the default label of the selected `symmetric_field`."
        },
        {
          "name": "${symmetricSortby:symmetricSortby}=\"$1\"",
          "description": "Works like `foreign_sortby`, but defines the field on `foreign_table` where the \"other\" sort order is stored.",
          "valueSet": "v"
        },
        {
          "name": "symmetricSortby",
          "description": "Works like `foreign_sortby`, but defines the field on `foreign_table` where the \"other\" sort order is stored."
        },
        {
          "name": "${localizationMode:localizationMode}=\"$1\"",
          "description": "Set whether children can be localizable ('select') or just inherit from default language ('keep').",
          "valueSet": "v"
        },
        {
          "name": "localizationMode",
          "description": "Set whether children can be localizable ('select') or just inherit from default language ('keep')."
        },
        {
          "name": "${localizeChildrenAtParentLocalization:localizeChildrenAtParentLocalization}=\"$1\"",
          "description": "Defines whether children should be localized when the localization of the parent gets created.",
          "valueSet": "v"
        },
        {
          "name": "localizeChildrenAtParentLocalization",
          "description": "Defines whether children should be localized when the localization of the parent gets created."
        },
        {
          "name": "${disableMovingChildrenWithParent:disableMovingChildrenWithParent}=\"$1\"",
          "description": "Disables that child records get moved along with their parent records.",
          "valueSet": "v"
        },
        {
          "name": "disableMovingChildrenWithParent",
          "description": "Disables that child records get moved along with their parent records."
        },
        {
          "name": "${showThumbs:showThumbs}=\"$1\"",
          "description": "If TRUE, adds thumbnail display when editing in BE",
          "valueSet": "v"
        },
        {
          "name": "showThumbs",
          "description": "If TRUE, adds thumbnail display when editing in BE"
        },
        {
          "name": "${matchFields:matchFields}=\"$1\"",
          "description": "When using manyToMany you can provide an additional array of field=>value pairs that must match in the relation table",
          "valueSet": "v"
        },
        {
          "name": "matchFields",
          "description": "When using manyToMany you can provide an additional array of field=>value pairs that must match in the relation table"
        },
        {
          "name": "${oppositeField:oppositeField}=\"$1\"",
          "description": "Name of the opposite field related to a proper mm relation",
          "valueSet": "v"
        },
        {
          "name": "oppositeField",
          "description": "Name of the opposite field related to a proper mm relation"
        },
        {
          "name": "${parentField:parentField}=\"$1\"",
          "description": "Field containing UID of parent record",
          "valueSet": "v"
        },
        {
          "name": "parentField",
          "description": "Field containing UID of parent record"
        },
        {
          "name": "${allowRecursiveMode:allowRecursiveMode}=\"$1\"",
          "description": "If TRUE, the selection of a node will trigger the selection of all child nodes too (recursively)",
          "valueSet": "v"
        },
        {
          "name": "allowRecursiveMode",
          "description": "If TRUE, the selection of a node will trigger the selection of all child nodes too (recursively)"
        },
        {
          "name": "${expandAll:expandAll}=\"$1\"",
          "description": "If TRUE, expands all branches",
          "valueSet": "v"
        },
        {
          "name": "expandAll",
          "description": "If TRUE, expands all branches"
        },
        {
          "name": "${nonSelectableLevels:nonSelectableLevels}=\"$1\"",
          "description": "Comma-separated list of levels that will not be selectable, by default the root node (which is \"0\") cannot be selected",
          "valueSet": "v"
        },
        {
          "name": "nonSelectableLevels",
          "description": "Comma-separated list of levels that will not be selectable, by default the root node (which is \"0\") cannot be selected"
        },
        {
          "name": "${maxLevels:maxLevels}=\"$1\"",
          "description": "The maximal amount of levels to be rendered (can be used to stop possible recursions)",
          "valueSet": "v"
        },
        {
          "name": "maxLevels",
          "description": "The maximal amount of levels to be rendered (can be used to stop possible recursions)"
        },
        {
          "name": "${showHeader:showHeader}=\"$1\"",
          "description": "If TRUE, displays tree header",
          "valueSet": "v"
        },
        {
          "name": "showHeader",
          "description": "If TRUE, displays tree header"
        },
        {
          "name": "${width:width}=\"$1\"",
          "description": "Width of TreeView component",
          "valueSet": "v"
        },
        {
          "name": "width",
          "description": "Width of TreeView component"
        }
      ]
    },
    {
      "name": "flux:field.tree.category",
      "description": "Tree preset for sys_category /",
      "attributes": [
        {
          "name": "${name:name}=\"$1\"",
          "description": "Name of the attribute, FlexForm XML-valid tag name string",
          "valueSet": "v"
        },
        {
          "name": "name",
          "description": "Name of the attribute, FlexForm XML-valid tag name string"
        },
        {
          "name": "${label:label}=\"$1\"",
          "description": "Label for the attribute, can be LLL: value. Optional - if not specified, Flux tries to detect an LLL label named \"flux.fluxFormId.fields.foobar\" based on field name, in scope of extension rendering the Flux form. If field is in an object, use \"flux.fluxFormId.objects.objectname.foobar\" where \"foobar\" is the name of the field.",
          "valueSet": "v"
        },
        {
          "name": "label",
          "description": "Label for the attribute, can be LLL: value. Optional - if not specified, Flux tries to detect an LLL label named \"flux.fluxFormId.fields.foobar\" based on field name, in scope of extension rendering the Flux form. If field is in an object, use \"flux.fluxFormId.objects.objectname.foobar\" where \"foobar\" is the name of the field."
        },
        {
          "name": "${default:default}=\"$1\"",
          "description": "Default value for this attribute",
          "valueSet": "v"
        },
        {
          "name": "default",
          "description": "Default value for this attribute"
        },
        {
          "name": "${required:required}=\"$1\"",
          "description": "If TRUE, this attribute must be filled when editing the FCE",
          "valueSet": "v"
        },
        {
          "name": "required",
          "description": "If TRUE, this attribute must be filled when editing the FCE"
        },
        {
          "name": "${exclude:exclude}=\"$1\"",
          "description": "If TRUE, this field becomes an \"exclude field\" (see TYPO3 documentation about this)",
          "valueSet": "v"
        },
        {
          "name": "exclude",
          "description": "If TRUE, this field becomes an \"exclude field\" (see TYPO3 documentation about this)"
        },
        {
          "name": "${transform:transform}=\"$1\"",
          "description": "Set this to transform your value to this type - integer, array (for csv values), float, DateTime, Vendor\\MyExt\\Domain\\Model\\Object or ObjectStorage with type hint. ",
          "valueSet": "v"
        },
        {
          "name": "transform",
          "description": "Set this to transform your value to this type - integer, array (for csv values), float, DateTime, Vendor\\MyExt\\Domain\\Model\\Object or ObjectStorage with type hint. "
        },
        {
          "name": "${enabled:enabled}=\"$1\"",
          "description": "If FALSE, disables the field in the FlexForm",
          "valueSet": "v"
        },
        {
          "name": "enabled",
          "description": "If FALSE, disables the field in the FlexForm"
        },
        {
          "name": "${requestUpdate:requestUpdate}=\"$1\"",
          "description": "If TRUE, the form is force-saved and reloaded when field value changes",
          "valueSet": "v"
        },
        {
          "name": "requestUpdate",
          "description": "If TRUE, the form is force-saved and reloaded when field value changes"
        },
        {
          "name": "${displayCond:displayCond}=\"$1\"",
          "description": "Optional \"Display Condition\" (TCA style) for this particular field. See: https://docs.typo3.org/typo3cms/TCAReference/Reference/Columns/Index.html#displaycond",
          "valueSet": "v"
        },
        {
          "name": "displayCond",
          "description": "Optional \"Display Condition\" (TCA style) for this particular field. See: https://docs.typo3.org/typo3cms/TCAReference/Reference/Columns/Index.html#displaycond"
        },
        {
          "name": "${inherit:inherit}=\"$1\"",
          "description": "If TRUE, the value for this particular field is inherited - if inheritance is enabled by the ConfigurationProvider",
          "valueSet": "v"
        },
        {
          "name": "inherit",
          "description": "If TRUE, the value for this particular field is inherited - if inheritance is enabled by the ConfigurationProvider"
        },
        {
          "name": "${inheritEmpty:inheritEmpty}=\"$1\"",
          "description": "If TRUE, allows empty values (specifically excluding the number zero!) to be inherited - if inheritance is enabled by the ConfigurationProvider",
          "valueSet": "v"
        },
        {
          "name": "inheritEmpty",
          "description": "If TRUE, allows empty values (specifically excluding the number zero!) to be inherited - if inheritance is enabled by the ConfigurationProvider"
        },
        {
          "name": "${clear:clear}=\"$1\"",
          "description": "If TRUE, a \"clear value\" checkbox is displayed next to the field which when checked, completely destroys the current field value all the way down to the stored XML value",
          "valueSet": "v"
        },
        {
          "name": "clear",
          "description": "If TRUE, a \"clear value\" checkbox is displayed next to the field which when checked, completely destroys the current field value all the way down to the stored XML value"
        },
        {
          "name": "${variables:variables}=\"$1\"",
          "description": "Freestyle variables which become assigned to the resulting Component - can then be read from that Component outside this Fluid template and in other templates using the Form object from this template",
          "valueSet": "v"
        },
        {
          "name": "variables",
          "description": "Freestyle variables which become assigned to the resulting Component - can then be read from that Component outside this Fluid template and in other templates using the Form object from this template"
        },
        {
          "name": "${extensionName:extensionName}=\"$1\"",
          "description": "If provided, enables overriding the extension context for this and all child nodes. The extension name is otherwise automatically detected from rendering context.",
          "valueSet": "v"
        },
        {
          "name": "extensionName",
          "description": "If provided, enables overriding the extension context for this and all child nodes. The extension name is otherwise automatically detected from rendering context."
        },
        {
          "name": "${validate:validate}=\"$1\"",
          "description": "FlexForm-type validation configuration for this input",
          "valueSet": "v"
        },
        {
          "name": "validate",
          "description": "FlexForm-type validation configuration for this input"
        },
        {
          "name": "${size:size}=\"$1\"",
          "description": "Size of the selector box",
          "valueSet": "v"
        },
        {
          "name": "size",
          "description": "Size of the selector box"
        },
        {
          "name": "${multiple:multiple}=\"$1\"",
          "description": "If TRUE, allows selecting the same value multiple times",
          "valueSet": "v"
        },
        {
          "name": "multiple",
          "description": "If TRUE, allows selecting the same value multiple times"
        },
        {
          "name": "${minItems:minItems}=\"$1\"",
          "description": "Minimum required number of items to be selected",
          "valueSet": "v"
        },
        {
          "name": "minItems",
          "description": "Minimum required number of items to be selected"
        },
        {
          "name": "${maxItems:maxItems}=\"$1\"",
          "description": "Maxium allowed number of items to be selected",
          "valueSet": "v"
        },
        {
          "name": "maxItems",
          "description": "Maxium allowed number of items to be selected"
        },
        {
          "name": "${itemListStyle:itemListStyle}=\"$1\"",
          "description": "Overrides the default list style when maxItems > 1",
          "valueSet": "v"
        },
        {
          "name": "itemListStyle",
          "description": "Overrides the default list style when maxItems > 1"
        },
        {
          "name": "${selectedListStyle:selectedListStyle}=\"$1\"",
          "description": "Overrides the default selected list style when maxItems > 1 and renderType is SelectSingle",
          "valueSet": "v"
        },
        {
          "name": "selectedListStyle",
          "description": "Overrides the default selected list style when maxItems > 1 and renderType is SelectSingle"
        },
        {
          "name": "${items:items}=\"$1\"",
          "description": "Items for the selector; array / CSV / Traversable / Query supported",
          "valueSet": "v"
        },
        {
          "name": "items",
          "description": "Items for the selector; array / CSV / Traversable / Query supported"
        },
        {
          "name": "${emptyOption:emptyOption}=\"$1\"",
          "description": "If not-FALSE, adds one empty option/value pair to the generated selector box and tries to use this property's value (cast to string) as label.",
          "valueSet": "v"
        },
        {
          "name": "emptyOption",
          "description": "If not-FALSE, adds one empty option/value pair to the generated selector box and tries to use this property's value (cast to string) as label."
        },
        {
          "name": "${translateCsvItems:translateCsvItems}=\"$1\"",
          "description": "If TRUE, attempts to resolve a LLL label for each value provided as CSV in \"items\" attribute using convention for lookup \"$field.option.123\" if given \"123\" as CSV item value. Field name is determined by normal Flux field name conventions",
          "valueSet": "v"
        },
        {
          "name": "translateCsvItems",
          "description": "If TRUE, attempts to resolve a LLL label for each value provided as CSV in \"items\" attribute using convention for lookup \"$field.option.123\" if given \"123\" as CSV item value. Field name is determined by normal Flux field name conventions"
        },
        {
          "name": "${itemsProcFunc:itemsProcFunc}=\"$1\"",
          "description": "Function for serving items. See TCA \"select\" field \"itemsProcFunc\" attribute",
          "valueSet": "v"
        },
        {
          "name": "itemsProcFunc",
          "description": "Function for serving items. See TCA \"select\" field \"itemsProcFunc\" attribute"
        },
        {
          "name": "${table:table}=\"$1\"",
          "description": "Define foreign table name to turn selector into a record selector for that table",
          "valueSet": "v"
        },
        {
          "name": "table",
          "description": "Define foreign table name to turn selector into a record selector for that table"
        },
        {
          "name": "${condition:condition}=\"$1\"",
          "description": "Condition to use when selecting from \"foreignTable\", supports FlexForm `foreign_table_where` markers",
          "valueSet": "v"
        },
        {
          "name": "condition",
          "description": "Condition to use when selecting from \"foreignTable\", supports FlexForm `foreign_table_where` markers"
        },
        {
          "name": "${mm:mm}=\"$1\"",
          "description": "Optional name of MM table to use for record selection",
          "valueSet": "v"
        },
        {
          "name": "mm",
          "description": "Optional name of MM table to use for record selection"
        },
        {
          "name": "${foreignField:foreignField}=\"$1\"",
          "description": "The `foreign_field` is the field of the child record pointing to the parent record. This defines where to store the uid of the parent record.",
          "valueSet": "v"
        },
        {
          "name": "foreignField",
          "description": "The `foreign_field` is the field of the child record pointing to the parent record. This defines where to store the uid of the parent record."
        },
        {
          "name": "${foreignLabel:foreignLabel}=\"$1\"",
          "description": "If set, it overrides the label set in `TCA[foreign_table]['ctrl']['label']` for the inline-view.",
          "valueSet": "v"
        },
        {
          "name": "foreignLabel",
          "description": "If set, it overrides the label set in `TCA[foreign_table]['ctrl']['label']` for the inline-view."
        },
        {
          "name": "${foreignSelector:foreignSelector}=\"$1\"",
          "description": "A selector is used to show all possible child records that could be used to create a relation with the parent record. It will be rendered as a multi-select-box. On clicking on an item inside the selector a new relation is created. The `foreign_selector` points to a field of the `foreign_table` that is responsible for providing a selector-box - this field on the `foreign_table` usually has the type \"select\" and also has a `foreign_table` defined.",
          "valueSet": "v"
        },
        {
          "name": "foreignSelector",
          "description": "A selector is used to show all possible child records that could be used to create a relation with the parent record. It will be rendered as a multi-select-box. On clicking on an item inside the selector a new relation is created. The `foreign_selector` points to a field of the `foreign_table` that is responsible for providing a selector-box - this field on the `foreign_table` usually has the type \"select\" and also has a `foreign_table` defined."
        },
        {
          "name": "${foreignSortby:foreignSortby}=\"$1\"",
          "description": "Field on the child record (or on the intermediate table) that stores the manual sorting information.",
          "valueSet": "v"
        },
        {
          "name": "foreignSortby",
          "description": "Field on the child record (or on the intermediate table) that stores the manual sorting information."
        },
        {
          "name": "${foreignDefaultSortby:foreignDefaultSortby}=\"$1\"",
          "description": "If a fieldname for `foreign_sortby` is defined, then this is ignored. Otherwise this is used as the \"ORDER BY\" statement to sort the records in the table when listed.",
          "valueSet": "v"
        },
        {
          "name": "foreignDefaultSortby",
          "description": "If a fieldname for `foreign_sortby` is defined, then this is ignored. Otherwise this is used as the \"ORDER BY\" statement to sort the records in the table when listed."
        },
        {
          "name": "${foreignTableField:foreignTableField}=\"$1\"",
          "description": "The field of the child record pointing to the parent record. This defines where to store the table name of the parent record. On setting this configuration key together with `foreign_field`, the child record knows what its parent record is - so the child record could also be used on other parent tables.",
          "valueSet": "v"
        },
        {
          "name": "foreignTableField",
          "description": "The field of the child record pointing to the parent record. This defines where to store the table name of the parent record. On setting this configuration key together with `foreign_field`, the child record knows what its parent record is - so the child record could also be used on other parent tables."
        },
        {
          "name": "${foreignUnique:foreignUnique}=\"$1\"",
          "description": "Field which must be uniue for all children of a parent record.",
          "valueSet": "v"
        },
        {
          "name": "foreignUnique",
          "description": "Field which must be uniue for all children of a parent record."
        },
        {
          "name": "${symmetricField:symmetricField}=\"$1\"",
          "description": "In case of bidirectional symmetric relations, this defines in which field on the foreign table the uid of the \"other\" parent is stored.",
          "valueSet": "v"
        },
        {
          "name": "symmetricField",
          "description": "In case of bidirectional symmetric relations, this defines in which field on the foreign table the uid of the \"other\" parent is stored."
        },
        {
          "name": "${symmetricLabel:symmetricLabel}=\"$1\"",
          "description": "If set, this overrides the default label of the selected `symmetric_field`.",
          "valueSet": "v"
        },
        {
          "name": "symmetricLabel",
          "description": "If set, this overrides the default label of the selected `symmetric_field`."
        },
        {
          "name": "${symmetricSortby:symmetricSortby}=\"$1\"",
          "description": "Works like `foreign_sortby`, but defines the field on `foreign_table` where the \"other\" sort order is stored.",
          "valueSet": "v"
        },
        {
          "name": "symmetricSortby",
          "description": "Works like `foreign_sortby`, but defines the field on `foreign_table` where the \"other\" sort order is stored."
        },
        {
          "name": "${localizationMode:localizationMode}=\"$1\"",
          "description": "Set whether children can be localizable ('select') or just inherit from default language ('keep').",
          "valueSet": "v"
        },
        {
          "name": "localizationMode",
          "description": "Set whether children can be localizable ('select') or just inherit from default language ('keep')."
        },
        {
          "name": "${localizeChildrenAtParentLocalization:localizeChildrenAtParentLocalization}=\"$1\"",
          "description": "Defines whether children should be localized when the localization of the parent gets created.",
          "valueSet": "v"
        },
        {
          "name": "localizeChildrenAtParentLocalization",
          "description": "Defines whether children should be localized when the localization of the parent gets created."
        },
        {
          "name": "${disableMovingChildrenWithParent:disableMovingChildrenWithParent}=\"$1\"",
          "description": "Disables that child records get moved along with their parent records.",
          "valueSet": "v"
        },
        {
          "name": "disableMovingChildrenWithParent",
          "description": "Disables that child records get moved along with their parent records."
        },
        {
          "name": "${showThumbs:showThumbs}=\"$1\"",
          "description": "If TRUE, adds thumbnail display when editing in BE",
          "valueSet": "v"
        },
        {
          "name": "showThumbs",
          "description": "If TRUE, adds thumbnail display when editing in BE"
        },
        {
          "name": "${matchFields:matchFields}=\"$1\"",
          "description": "When using manyToMany you can provide an additional array of field=>value pairs that must match in the relation table",
          "valueSet": "v"
        },
        {
          "name": "matchFields",
          "description": "When using manyToMany you can provide an additional array of field=>value pairs that must match in the relation table"
        },
        {
          "name": "${oppositeField:oppositeField}=\"$1\"",
          "description": "Name of the opposite field related to a proper mm relation",
          "valueSet": "v"
        },
        {
          "name": "oppositeField",
          "description": "Name of the opposite field related to a proper mm relation"
        },
        {
          "name": "${parentField:parentField}=\"$1\"",
          "description": "Field containing UID of parent record",
          "valueSet": "v"
        },
        {
          "name": "parentField",
          "description": "Field containing UID of parent record"
        },
        {
          "name": "${allowRecursiveMode:allowRecursiveMode}=\"$1\"",
          "description": "If TRUE, the selection of a node will trigger the selection of all child nodes too (recursively)",
          "valueSet": "v"
        },
        {
          "name": "allowRecursiveMode",
          "description": "If TRUE, the selection of a node will trigger the selection of all child nodes too (recursively)"
        },
        {
          "name": "${expandAll:expandAll}=\"$1\"",
          "description": "If TRUE, expands all branches",
          "valueSet": "v"
        },
        {
          "name": "expandAll",
          "description": "If TRUE, expands all branches"
        },
        {
          "name": "${nonSelectableLevels:nonSelectableLevels}=\"$1\"",
          "description": "Comma-separated list of levels that will not be selectable, by default the root node (which is \"0\") cannot be selected",
          "valueSet": "v"
        },
        {
          "name": "nonSelectableLevels",
          "description": "Comma-separated list of levels that will not be selectable, by default the root node (which is \"0\") cannot be selected"
        },
        {
          "name": "${maxLevels:maxLevels}=\"$1\"",
          "description": "The maximal amount of levels to be rendered (can be used to stop possible recursions)",
          "valueSet": "v"
        },
        {
          "name": "maxLevels",
          "description": "The maximal amount of levels to be rendered (can be used to stop possible recursions)"
        },
        {
          "name": "${showHeader:showHeader}=\"$1\"",
          "description": "If TRUE, displays tree header",
          "valueSet": "v"
        },
        {
          "name": "showHeader",
          "description": "If TRUE, displays tree header"
        },
        {
          "name": "${width:width}=\"$1\"",
          "description": "Width of TreeView component",
          "valueSet": "v"
        },
        {
          "name": "width",
          "description": "Width of TreeView component"
        }
      ]
    },
    {
      "name": "flux:field.userFunc",
      "description": "Flexform Userfunc field ViewHelper /",
      "attributes": [
        {
          "name": "${name:name}=\"$1\"",
          "description": "Name of the attribute, FlexForm XML-valid tag name string",
          "valueSet": "v"
        },
        {
          "name": "name",
          "description": "Name of the attribute, FlexForm XML-valid tag name string"
        },
        {
          "name": "${label:label}=\"$1\"",
          "description": "Label for the attribute, can be LLL: value. Optional - if not specified, Flux tries to detect an LLL label named \"flux.fluxFormId.fields.foobar\" based on field name, in scope of extension rendering the Flux form. If field is in an object, use \"flux.fluxFormId.objects.objectname.foobar\" where \"foobar\" is the name of the field.",
          "valueSet": "v"
        },
        {
          "name": "label",
          "description": "Label for the attribute, can be LLL: value. Optional - if not specified, Flux tries to detect an LLL label named \"flux.fluxFormId.fields.foobar\" based on field name, in scope of extension rendering the Flux form. If field is in an object, use \"flux.fluxFormId.objects.objectname.foobar\" where \"foobar\" is the name of the field."
        },
        {
          "name": "${default:default}=\"$1\"",
          "description": "Default value for this attribute",
          "valueSet": "v"
        },
        {
          "name": "default",
          "description": "Default value for this attribute"
        },
        {
          "name": "${required:required}=\"$1\"",
          "description": "If TRUE, this attribute must be filled when editing the FCE",
          "valueSet": "v"
        },
        {
          "name": "required",
          "description": "If TRUE, this attribute must be filled when editing the FCE"
        },
        {
          "name": "${exclude:exclude}=\"$1\"",
          "description": "If TRUE, this field becomes an \"exclude field\" (see TYPO3 documentation about this)",
          "valueSet": "v"
        },
        {
          "name": "exclude",
          "description": "If TRUE, this field becomes an \"exclude field\" (see TYPO3 documentation about this)"
        },
        {
          "name": "${transform:transform}=\"$1\"",
          "description": "Set this to transform your value to this type - integer, array (for csv values), float, DateTime, Vendor\\MyExt\\Domain\\Model\\Object or ObjectStorage with type hint. ",
          "valueSet": "v"
        },
        {
          "name": "transform",
          "description": "Set this to transform your value to this type - integer, array (for csv values), float, DateTime, Vendor\\MyExt\\Domain\\Model\\Object or ObjectStorage with type hint. "
        },
        {
          "name": "${enabled:enabled}=\"$1\"",
          "description": "If FALSE, disables the field in the FlexForm",
          "valueSet": "v"
        },
        {
          "name": "enabled",
          "description": "If FALSE, disables the field in the FlexForm"
        },
        {
          "name": "${requestUpdate:requestUpdate}=\"$1\"",
          "description": "If TRUE, the form is force-saved and reloaded when field value changes",
          "valueSet": "v"
        },
        {
          "name": "requestUpdate",
          "description": "If TRUE, the form is force-saved and reloaded when field value changes"
        },
        {
          "name": "${displayCond:displayCond}=\"$1\"",
          "description": "Optional \"Display Condition\" (TCA style) for this particular field. See: https://docs.typo3.org/typo3cms/TCAReference/Reference/Columns/Index.html#displaycond",
          "valueSet": "v"
        },
        {
          "name": "displayCond",
          "description": "Optional \"Display Condition\" (TCA style) for this particular field. See: https://docs.typo3.org/typo3cms/TCAReference/Reference/Columns/Index.html#displaycond"
        },
        {
          "name": "${inherit:inherit}=\"$1\"",
          "description": "If TRUE, the value for this particular field is inherited - if inheritance is enabled by the ConfigurationProvider",
          "valueSet": "v"
        },
        {
          "name": "inherit",
          "description": "If TRUE, the value for this particular field is inherited - if inheritance is enabled by the ConfigurationProvider"
        },
        {
          "name": "${inheritEmpty:inheritEmpty}=\"$1\"",
          "description": "If TRUE, allows empty values (specifically excluding the number zero!) to be inherited - if inheritance is enabled by the ConfigurationProvider",
          "valueSet": "v"
        },
        {
          "name": "inheritEmpty",
          "description": "If TRUE, allows empty values (specifically excluding the number zero!) to be inherited - if inheritance is enabled by the ConfigurationProvider"
        },
        {
          "name": "${clear:clear}=\"$1\"",
          "description": "If TRUE, a \"clear value\" checkbox is displayed next to the field which when checked, completely destroys the current field value all the way down to the stored XML value",
          "valueSet": "v"
        },
        {
          "name": "clear",
          "description": "If TRUE, a \"clear value\" checkbox is displayed next to the field which when checked, completely destroys the current field value all the way down to the stored XML value"
        },
        {
          "name": "${variables:variables}=\"$1\"",
          "description": "Freestyle variables which become assigned to the resulting Component - can then be read from that Component outside this Fluid template and in other templates using the Form object from this template",
          "valueSet": "v"
        },
        {
          "name": "variables",
          "description": "Freestyle variables which become assigned to the resulting Component - can then be read from that Component outside this Fluid template and in other templates using the Form object from this template"
        },
        {
          "name": "${extensionName:extensionName}=\"$1\"",
          "description": "If provided, enables overriding the extension context for this and all child nodes. The extension name is otherwise automatically detected from rendering context.",
          "valueSet": "v"
        },
        {
          "name": "extensionName",
          "description": "If provided, enables overriding the extension context for this and all child nodes. The extension name is otherwise automatically detected from rendering context."
        },
        {
          "name": "${userFunc:userFunc}=\"$1\"",
          "description": "UserFunc to be called, example \"MyExt\\MyVendor\\MySpecialClass->renderField\"",
          "valueSet": "v"
        },
        {
          "name": "userFunc",
          "description": "UserFunc to be called, example \"MyExt\\MyVendor\\MySpecialClass->renderField\""
        },
        {
          "name": "${arguments:arguments}=\"$1\"",
          "description": "Optional array of arguments to pass to the UserFunction building this field",
          "valueSet": "v"
        },
        {
          "name": "arguments",
          "description": "Optional array of arguments to pass to the UserFunction building this field"
        }
      ]
    },
    {
      "name": "flux:form",
      "description": "FlexForm configuration container ViewHelper /",
      "attributes": [
        {
          "name": "${id:id}=\"$1\"",
          "description": "Identifier of this Flexible Content Element, `/[a-z0-9]/i` allowed",
          "valueSet": "v"
        },
        {
          "name": "id",
          "description": "Identifier of this Flexible Content Element, `/[a-z0-9]/i` allowed"
        },
        {
          "name": "${label:label}=\"$1\"",
          "description": "Label for the form, can be LLL: value. Optional - if not specified, Flux tries to detect an LLL label named \"flux.fluxFormId\", in scope of extension rendering the Flux form.",
          "valueSet": "v"
        },
        {
          "name": "label",
          "description": "Label for the form, can be LLL: value. Optional - if not specified, Flux tries to detect an LLL label named \"flux.fluxFormId\", in scope of extension rendering the Flux form."
        },
        {
          "name": "${description:description}=\"$1\"",
          "description": "Short description of the purpose/function of this form",
          "valueSet": "v"
        },
        {
          "name": "description",
          "description": "Short description of the purpose/function of this form"
        },
        {
          "name": "${enabled:enabled}=\"$1\"",
          "description": "If FALSE, features which use this form can elect to skip it. Respect for this flag depends on the feature using the form.",
          "valueSet": "v"
        },
        {
          "name": "enabled",
          "description": "If FALSE, features which use this form can elect to skip it. Respect for this flag depends on the feature using the form."
        },
        {
          "name": "${compact:compact}=\"$1\"",
          "description": "If TRUE, disables sheet usage in the form. WARNING! AVOID DYNAMIC VALUES AT ALL COSTS! Toggling this option is DESTRUCTIVE to variables currently saved in the database!",
          "valueSet": "v"
        },
        {
          "name": "compact",
          "description": "If TRUE, disables sheet usage in the form. WARNING! AVOID DYNAMIC VALUES AT ALL COSTS! Toggling this option is DESTRUCTIVE to variables currently saved in the database!"
        },
        {
          "name": "${variables:variables}=\"$1\"",
          "description": "Freestyle variables which become assigned to the resulting Component - can then be read from that Component outside this Fluid template and in other templates using the Form object from this template",
          "valueSet": "v"
        },
        {
          "name": "variables",
          "description": "Freestyle variables which become assigned to the resulting Component - can then be read from that Component outside this Fluid template and in other templates using the Form object from this template"
        },
        {
          "name": "${options:options}=\"$1\"",
          "description": "Custom options to be assigned to Form object - valid values depends on the. See docs of extension in which you use this feature. Can also be set using `flux:form.option` as child of `flux:form`.",
          "valueSet": "v"
        },
        {
          "name": "options",
          "description": "Custom options to be assigned to Form object - valid values depends on the. See docs of extension in which you use this feature. Can also be set using `flux:form.option` as child of `flux:form`."
        },
        {
          "name": "${localLanguageFileRelativePath:localLanguageFileRelativePath}=\"$1\"",
          "description": "Relative (from extension) path to locallang file containing labels for the LLL values used in this form.",
          "valueSet": "v"
        },
        {
          "name": "localLanguageFileRelativePath",
          "description": "Relative (from extension) path to locallang file containing labels for the LLL values used in this form."
        },
        {
          "name": "${extensionName:extensionName}=\"$1\"",
          "description": "If provided, enables overriding the extension context for this and all child nodes. The extension name is otherwise automatically detected from rendering context.",
          "valueSet": "v"
        },
        {
          "name": "extensionName",
          "description": "If provided, enables overriding the extension context for this and all child nodes. The extension name is otherwise automatically detected from rendering context."
        }
      ]
    },
    {
      "name": "flux:form.container",
      "description": "### FlexForm Field Container element Use around other Flux fields to make these fields nested visually and in variable scopes (i.e. a field called \"name\" inside a palette called \"person\" would end up with \"person\" being an array containing the \"name\" property, rendered as {person.name} in Fluid. The field grouping can be hidden or completely removed. In this regard this element is a simpler version of the Section and Object logic. #### Grouping elements with a container <flux:form.container name=\"settings.name\" label=\"Name\"> <flux:field.input name=\"firstname\" label=\"First name\"/> <flux:field.input name=\"lastname\" label=\"Last name\"/> </flux:form.container> #### Accessing values of grouped elements Name: {settings.name.firstname} {settings.name.lastname} /",
      "attributes": [
        {
          "name": "${name:name}=\"$1\"",
          "description": "Name of the attribute, FlexForm XML-valid tag name string",
          "valueSet": "v"
        },
        {
          "name": "name",
          "description": "Name of the attribute, FlexForm XML-valid tag name string"
        },
        {
          "name": "${label:label}=\"$1\"",
          "description": "Label for the attribute, can be LLL: value. Optional - if not specified, Flux tries to detect an LLL label named \"flux.fluxFormId.fields.foobar\" based on field name, in scope of extension rendering the Flux form. If field is in an object, use \"flux.fluxFormId.objects.objectname.foobar\" where \"foobar\" is the name of the field.",
          "valueSet": "v"
        },
        {
          "name": "label",
          "description": "Label for the attribute, can be LLL: value. Optional - if not specified, Flux tries to detect an LLL label named \"flux.fluxFormId.fields.foobar\" based on field name, in scope of extension rendering the Flux form. If field is in an object, use \"flux.fluxFormId.objects.objectname.foobar\" where \"foobar\" is the name of the field."
        },
        {
          "name": "${variables:variables}=\"$1\"",
          "description": "Freestyle variables which become assigned to the resulting Component - can then be read from that Component outside this Fluid template and in other templates using the Form object from this template",
          "valueSet": "v"
        },
        {
          "name": "variables",
          "description": "Freestyle variables which become assigned to the resulting Component - can then be read from that Component outside this Fluid template and in other templates using the Form object from this template"
        },
        {
          "name": "${extensionName:extensionName}=\"$1\"",
          "description": "If provided, enables overriding the extension context for this and all child nodes. The extension name is otherwise automatically detected from rendering context.",
          "valueSet": "v"
        },
        {
          "name": "extensionName",
          "description": "If provided, enables overriding the extension context for this and all child nodes. The extension name is otherwise automatically detected from rendering context."
        }
      ]
    },
    {
      "name": "flux:form.content",
      "description": "Adds a content area to a source using Flux FlexForms Only works to insert a single content area into your element. To insert multiple content areas, use instead a full `flux:grid` with your desired row and column structure; each column then becomes a content area. Using `flux:grid` after this ViewHelper in the same `flux:form` will overwrite this ViewHelper. Using this ViewHelper after `flux:grid` will cause this ViewHelper to be ignored. ### Example of difference <flux:form id=\"myform\"> <!-- Creates a basic Grid with one row and one column, names the column \"mycontent\" and makes Flux use this Grid --> <flux:content name=\"mycontent\" /> <!-- Additional flux:content tags are completely ignored --> </flux:form> <flux:form id=\"myform\"> <!-- Creates a full, multi-column/row Grid --> <flux:grid> <flux:grid.row> <flux:grid.column name=\"mycontentA\" /> <flux:grid.column name=\"mycontentB\" /> </flux:grid.row> <flux:grid.row> <flux:grid.column name=\"mycontentC\" colspan=\"2\" /> </flux:grid.row> </flux:grid> <!-- No use of flux:content is possible after this point --> </flux:form> /",
      "attributes": [
        {
          "name": "${name:name}=\"$1\"",
          "description": "Name of the content area, FlexForm XML-valid tag name string",
          "valueSet": "v"
        },
        {
          "name": "name",
          "description": "Name of the content area, FlexForm XML-valid tag name string"
        },
        {
          "name": "${label:label}=\"$1\"",
          "description": "Label for content area, can be LLL: value. Optional - if not specified, Flux tries to detect an LLL label named \"flux.fluxFormId.columns.foobar\" based on column name, in scope of extension rendering the Flux form.",
          "valueSet": "v"
        },
        {
          "name": "label",
          "description": "Label for content area, can be LLL: value. Optional - if not specified, Flux tries to detect an LLL label named \"flux.fluxFormId.columns.foobar\" based on column name, in scope of extension rendering the Flux form."
        },
        {
          "name": "${extensionName:extensionName}=\"$1\"",
          "description": "If provided, enables overriding the extension context for this and all child nodes. The extension name is otherwise automatically detected from rendering context.",
          "valueSet": "v"
        },
        {
          "name": "extensionName",
          "description": "If provided, enables overriding the extension context for this and all child nodes. The extension name is otherwise automatically detected from rendering context."
        }
      ]
    },
    {
      "name": "flux:form.data",
      "description": "Converts raw flexform xml into an associative array, and applies any transformation that may be configured for fields/objects. ### Example: Fetch page configuration inside content element Since the `page` variable is available in fluidcontent elements, we can use it to access page configuration data: <flux:form.data table=\"pages\" field=\"tx_fed_page_flexform\" record=\"{page}\" /> /",
      "attributes": [
        {
          "name": "${table:table}=\"$1\"",
          "description": "Name of table that contains record with Flux field",
          "valueSet": "v"
        },
        {
          "name": "table",
          "description": "Name of table that contains record with Flux field"
        },
        {
          "name": "${field:field}=\"$1\"",
          "description": "Name of Flux field in table",
          "valueSet": "v"
        },
        {
          "name": "field",
          "description": "Name of Flux field in table"
        },
        {
          "name": "${uid:uid}=\"$1\"",
          "description": "UID of record to load (used if \"record\" attribute not used)",
          "valueSet": "v"
        },
        {
          "name": "uid",
          "description": "UID of record to load (used if \"record\" attribute not used)"
        },
        {
          "name": "${record:record}=\"$1\"",
          "description": "Record containing Flux field (used if \"uid\" attribute not used)",
          "valueSet": "v"
        },
        {
          "name": "record",
          "description": "Record containing Flux field (used if \"uid\" attribute not used)"
        },
        {
          "name": "${as:as}=\"$1\"",
          "description": "Optional name of variable to assign in tag content rendering",
          "valueSet": "v"
        },
        {
          "name": "as",
          "description": "Optional name of variable to assign in tag content rendering"
        }
      ]
    },
    {
      "name": "flux:form.object",
      "description": "FlexForm field section object ViewHelper Use this inside flux:form.section to name and divide the fields into individual objects that can be inserted into the section. /",
      "attributes": [
        {
          "name": "${name:name}=\"$1\"",
          "description": "Name of the section object, FlexForm XML-valid tag name string",
          "valueSet": "v"
        },
        {
          "name": "name",
          "description": "Name of the section object, FlexForm XML-valid tag name string"
        },
        {
          "name": "${label:label}=\"$1\"",
          "description": "Label for section object, can be LLL: value. Optional - if not specified, Flux tries to detect an LLL label named \"flux.fluxFormId.objects.foobar\" based on object name, in scope of extension rendering the Flux form.",
          "valueSet": "v"
        },
        {
          "name": "label",
          "description": "Label for section object, can be LLL: value. Optional - if not specified, Flux tries to detect an LLL label named \"flux.fluxFormId.objects.foobar\" based on object name, in scope of extension rendering the Flux form."
        },
        {
          "name": "${variables:variables}=\"$1\"",
          "description": "Freestyle variables which become assigned to the resulting Component - can then be read from that Component outside this Fluid template and in other templates using the Form object from this template",
          "valueSet": "v"
        },
        {
          "name": "variables",
          "description": "Freestyle variables which become assigned to the resulting Component - can then be read from that Component outside this Fluid template and in other templates using the Form object from this template"
        },
        {
          "name": "${extensionName:extensionName}=\"$1\"",
          "description": "If provided, enables overriding the extension context for this and all child nodes. The extension name is otherwise automatically detected from rendering context.",
          "valueSet": "v"
        },
        {
          "name": "extensionName",
          "description": "If provided, enables overriding the extension context for this and all child nodes. The extension name is otherwise automatically detected from rendering context."
        },
        {
          "name": "${inherit:inherit}=\"$1\"",
          "description": "If TRUE, the value for this particular field is inherited - if inheritance is enabled by the ConfigurationProvider",
          "valueSet": "v"
        },
        {
          "name": "inherit",
          "description": "If TRUE, the value for this particular field is inherited - if inheritance is enabled by the ConfigurationProvider"
        },
        {
          "name": "${inheritEmpty:inheritEmpty}=\"$1\"",
          "description": "If TRUE, allows empty values (specifically excluding the number zero!) to be inherited - if inheritance is enabled by the ConfigurationProvider",
          "valueSet": "v"
        },
        {
          "name": "inheritEmpty",
          "description": "If TRUE, allows empty values (specifically excluding the number zero!) to be inherited - if inheritance is enabled by the ConfigurationProvider"
        },
        {
          "name": "${transform:transform}=\"$1\"",
          "description": "Set this to transform your value to this type - integer, array (for csv values), float, DateTime, Vendor\\MyExt\\Domain\\Model\\Object or ObjectStorage with type hint. ",
          "valueSet": "v"
        },
        {
          "name": "transform",
          "description": "Set this to transform your value to this type - integer, array (for csv values), float, DateTime, Vendor\\MyExt\\Domain\\Model\\Object or ObjectStorage with type hint. "
        }
      ]
    },
    {
      "name": "flux:form.option",
      "description": "Form option ViewHelper /",
      "attributes": [
        {
          "name": "${value:value}=\"$1\"",
          "description": "Option value",
          "valueSet": "v"
        },
        {
          "name": "value",
          "description": "Option value"
        },
        {
          "name": "${name:name}=\"$1\"",
          "description": "Name of the option to be set",
          "valueSet": "v"
        },
        {
          "name": "name",
          "description": "Name of the option to be set"
        }
      ]
    },
    {
      "name": "flux:form.option.group",
      "description": "Form group option ViewHelper Defines a logical group name for the Flux form, which can then be read by extensions supporting Flux forms. How the setting gets used is specific to the extension reading the Flux form - please consult that documentation to learn if/how the extension supports this option. /",
      "attributes": [
        {
          "name": "${value:value}=\"$1\"",
          "description": "Name of the group",
          "valueSet": "v"
        },
        {
          "name": "value",
          "description": "Name of the group"
        }
      ]
    },
    {
      "name": "flux:form.option.icon",
      "description": "### Icon option Sets the `icon` option in the Flux form, which can then be read by extensions using Flux forms. Consult the documentation of extensions which use the `icon` setting to learn more about how icons are used. ``value`` needs to be the absolute path to the image file, e.g. ``/typo3conf/ext/myext/Resources/Public/Icons/Element.svg``. #### Example <flux:form.option.icon value=\"/typo3conf/ext/myext/Resources/Public/Icons/Element.svg\"/> /",
      "attributes": [
        {
          "name": "${value:value}=\"$1\"",
          "description": "Path and name of the icon file",
          "valueSet": "v"
        },
        {
          "name": "value",
          "description": "Path and name of the icon file"
        }
      ]
    },
    {
      "name": "flux:form.option.sorting",
      "description": "Form sorting option ViewHelper /",
      "attributes": [
        {
          "name": "${value:value}=\"$1\"",
          "description": "Sorting value of form (how this is applied depends on the implementation using the Form instance; see third-party feature documentation)",
          "valueSet": "v"
        },
        {
          "name": "value",
          "description": "Sorting value of form (how this is applied depends on the implementation using the Form instance; see third-party feature documentation)"
        }
      ]
    },
    {
      "name": "flux:form.option.static",
      "description": "Form static caching option ViewHelper Use this only when your Flux form is 100% static and will work when cached. /",
      "attributes": [
        {
          "name": "${value:value}=\"$1\"",
          "description": "Configures caching of the DS resulting from the form. Default when used is TRUE which enables caching",
          "valueSet": "v"
        },
        {
          "name": "value",
          "description": "Configures caching of the DS resulting from the form. Default when used is TRUE which enables caching"
        }
      ]
    },
    {
      "name": "flux:form.render",
      "description": "## Main form rendering ViewHelper Use to render a Flux form as HTML. /",
      "attributes": [
        {
          "name": "${form:form}=\"$1\"",
          "description": "Form instance to render as HTML",
          "valueSet": "v"
        },
        {
          "name": "form",
          "description": "Form instance to render as HTML"
        }
      ]
    },
    {
      "name": "flux:form.section",
      "description": "FlexForm field section ViewHelper #### Using a section to let a user add many elements <flux:form.section name=\"settings.numbers\" label=\"Telephone numbers\"> <flux:form.object name=\"mobile\" label=\"Mobile\"> <flux:field.input name=\"number\"/> </flux:form.object> <flux:form.object name=\"landline\" label=\"Landline\"> <flux:field.input name=\"number\"/> </flux:form.object> </flux:form.section> #### Reading section element values <f:for each=\"{settings.numbers}\" as=\"obj\" key=\"id\"> Number #{id}: <f:if condition=\"{obj.landline}\">mobile, {obj.landline.number}</f:if> <f:if condition=\"{obj.mobile}\">landline, {obj.mobile.number}</f:if> <br/> </f:for> /",
      "attributes": [
        {
          "name": "${name:name}=\"$1\"",
          "description": "Name of the attribute, FlexForm XML-valid tag name string",
          "valueSet": "v"
        },
        {
          "name": "name",
          "description": "Name of the attribute, FlexForm XML-valid tag name string"
        },
        {
          "name": "${label:label}=\"$1\"",
          "description": "Label for section, can be LLL: value. Optional - if not specified, Flux tries to detect an LLL label named \"flux.fluxFormId.sections.foobar\" based on section name, in scope of extension rendering the form.",
          "valueSet": "v"
        },
        {
          "name": "label",
          "description": "Label for section, can be LLL: value. Optional - if not specified, Flux tries to detect an LLL label named \"flux.fluxFormId.sections.foobar\" based on section name, in scope of extension rendering the form."
        },
        {
          "name": "${variables:variables}=\"$1\"",
          "description": "Freestyle variables which become assigned to the resulting Component - can then be read from that Component outside this Fluid template and in other templates using the Form object from this template",
          "valueSet": "v"
        },
        {
          "name": "variables",
          "description": "Freestyle variables which become assigned to the resulting Component - can then be read from that Component outside this Fluid template and in other templates using the Form object from this template"
        },
        {
          "name": "${extensionName:extensionName}=\"$1\"",
          "description": "If provided, enables overriding the extension context for this and all child nodes. The extension name is otherwise automatically detected from rendering context.",
          "valueSet": "v"
        },
        {
          "name": "extensionName",
          "description": "If provided, enables overriding the extension context for this and all child nodes. The extension name is otherwise automatically detected from rendering context."
        },
        {
          "name": "${inherit:inherit}=\"$1\"",
          "description": "If TRUE, the value for this particular field is inherited - if inheritance is enabled by the ConfigurationProvider",
          "valueSet": "v"
        },
        {
          "name": "inherit",
          "description": "If TRUE, the value for this particular field is inherited - if inheritance is enabled by the ConfigurationProvider"
        },
        {
          "name": "${inheritEmpty:inheritEmpty}=\"$1\"",
          "description": "If TRUE, allows empty values (specifically excluding the number zero!) to be inherited - if inheritance is enabled by the ConfigurationProvider",
          "valueSet": "v"
        },
        {
          "name": "inheritEmpty",
          "description": "If TRUE, allows empty values (specifically excluding the number zero!) to be inherited - if inheritance is enabled by the ConfigurationProvider"
        }
      ]
    },
    {
      "name": "flux:form.sheet",
      "description": "FlexForm sheet ViewHelper Groups FlexForm fields into sheets. /",
      "attributes": [
        {
          "name": "${name:name}=\"$1\"",
          "description": "Name of the group, used as FlexForm sheet name, must be FlexForm XML-valid tag name string",
          "valueSet": "v"
        },
        {
          "name": "name",
          "description": "Name of the group, used as FlexForm sheet name, must be FlexForm XML-valid tag name string"
        },
        {
          "name": "${label:label}=\"$1\"",
          "description": "Label for the field group - used as tab name in FlexForm. Optional - if not specified, Flux tries to detect an LLL label named \"flux.fluxFormId.sheets.foobar\" based on sheet name, in scope of extension rendering the Flux form.",
          "valueSet": "v"
        },
        {
          "name": "label",
          "description": "Label for the field group - used as tab name in FlexForm. Optional - if not specified, Flux tries to detect an LLL label named \"flux.fluxFormId.sheets.foobar\" based on sheet name, in scope of extension rendering the Flux form."
        },
        {
          "name": "${variables:variables}=\"$1\"",
          "description": "Freestyle variables which become assigned to the resulting Component - can then be read from that Component outside this Fluid template and in other templates using the Form object from this template",
          "valueSet": "v"
        },
        {
          "name": "variables",
          "description": "Freestyle variables which become assigned to the resulting Component - can then be read from that Component outside this Fluid template and in other templates using the Form object from this template"
        },
        {
          "name": "${description:description}=\"$1\"",
          "description": "Optional string or LLL reference with a desription of the purpose of the sheet",
          "valueSet": "v"
        },
        {
          "name": "description",
          "description": "Optional string or LLL reference with a desription of the purpose of the sheet"
        },
        {
          "name": "${shortDescription:shortDescription}=\"$1\"",
          "description": "Optional shorter version of description of purpose of the sheet, LLL reference supported",
          "valueSet": "v"
        },
        {
          "name": "shortDescription",
          "description": "Optional shorter version of description of purpose of the sheet, LLL reference supported"
        },
        {
          "name": "${extensionName:extensionName}=\"$1\"",
          "description": "If provided, enables overriding the extension context for this and all child nodes. The extension name is otherwise automatically detected from rendering context.",
          "valueSet": "v"
        },
        {
          "name": "extensionName",
          "description": "If provided, enables overriding the extension context for this and all child nodes. The extension name is otherwise automatically detected from rendering context."
        }
      ]
    },
    {
      "name": "flux:form.variable",
      "description": "Sets an option in the Form instance /",
      "attributes": [
        {
          "name": "${name:name}=\"$1\"",
          "description": "Name of the option - valid values and their behaviours depend entirely on the consumer that will handle the Form instance",
          "valueSet": "v"
        },
        {
          "name": "name",
          "description": "Name of the option - valid values and their behaviours depend entirely on the consumer that will handle the Form instance"
        },
        {
          "name": "${value:value}=\"$1\"",
          "description": "Value of the option",
          "valueSet": "v"
        },
        {
          "name": "value",
          "description": "Value of the option"
        }
      ]
    },
    {
      "name": "flux:grid",
      "description": "Grid container ViewHelper. Use `<flux:grid.row>` with nested `<flux:grid.column>` tags to define a tablular layout. The grid is then rendered automatically in the preview section of the content element, or as page columns if used in page templates. For frontend rendering, use `flux:content.render`. ### Content elements Use the `name` and `area` attributes. #### Grid for a two-column container element <flux:grid> <flux:grid.row> <flux:grid.column name=\"left\" /> <flux:grid.column name=\"right\" /> </flux:grid.row> </flux:grid> #### Container element frontend rendering <flux:content.render area=\"left\" /> <flux:content.render area=\"right\" /> ### Pages Use the `colPos` and `column` attributes. <flux:grid> <flux:grid.row> <flux:grid.column colPos=\"0\" name=\"Main\" colspan=\"3\" style=\"width: 75%\" /> <flux:grid.column colPos=\"1\" name=\"Secondary\" colspan=\"1\" style=\"width: 25%\" /> </flux:grid.row> </flux:grid> #### Page rendering <v:content.render column=\"0\" /> <v:content.render column=\"1\" /> /",
      "attributes": [
        {
          "name": "${name:name}=\"$1\"",
          "description": "Optional name of this grid - defaults to \"grid\"",
          "valueSet": "v"
        },
        {
          "name": "name",
          "description": "Optional name of this grid - defaults to \"grid\""
        },
        {
          "name": "${label:label}=\"$1\"",
          "description": "Optional label for this grid - defaults to an LLL value (reported if it is missing)",
          "valueSet": "v"
        },
        {
          "name": "label",
          "description": "Optional label for this grid - defaults to an LLL value (reported if it is missing)"
        },
        {
          "name": "${variables:variables}=\"$1\"",
          "description": "Freestyle variables which become assigned to the resulting Component - can then be read from that Component outside this Fluid template and in other templates using the Form object from this template",
          "valueSet": "v"
        },
        {
          "name": "variables",
          "description": "Freestyle variables which become assigned to the resulting Component - can then be read from that Component outside this Fluid template and in other templates using the Form object from this template"
        },
        {
          "name": "${extensionName:extensionName}=\"$1\"",
          "description": "If provided, enables overriding the extension context for this and all child nodes. The extension name is otherwise automatically detected from rendering context.",
          "valueSet": "v"
        },
        {
          "name": "extensionName",
          "description": "If provided, enables overriding the extension context for this and all child nodes. The extension name is otherwise automatically detected from rendering context."
        }
      ]
    },
    {
      "name": "flux:grid.column",
      "description": "Flexform Grid Column ViewHelper Used inside `<flux:grid.row>` tags. Use the `name` attribute for grids in content elements, and the `colPos` attribute for grids in pages templates. See `<flux:grid>` for an example. ### Limit allowed elements It is possible to limit the elements allowed in the column by setting the `allowedContentTypes` variable: <flux:grid.column name=\"elements\"> <flux:form.variable name=\"allowedContentTypes\" value=\"text,shortcut\"/> </flux:grid.column> The value is a comma-separated list of content type IDs; they can be found in `tt_content.CType` column. ### Limit allowed fluid content elements It is also possible to limit the allowed fluid content elements: <flux:grid.column name=\"elements\"> <flux:form.variable name=\"allowedContentTypes\" value=\"fluidcontent_content\"/> <flux:form.variable name=\"Fluidcontent\" value=\"{allowedContentTypes: 'Vendor.Extension:ContentElement.html'}\"/> </flux:grid.column> /",
      "attributes": [
        {
          "name": "${name:name}=\"$1\"",
          "description": "Identifies your column in generated configuration; also used as target ID when column is inside a container content element. Page-level content columns use \"colPos\" instead.",
          "valueSet": "v"
        },
        {
          "name": "name",
          "description": "Identifies your column in generated configuration; also used as target ID when column is inside a container content element. Page-level content columns use \"colPos\" instead."
        },
        {
          "name": "${label:label}=\"$1\"",
          "description": "Optional column label, will be shown as column header.",
          "valueSet": "v"
        },
        {
          "name": "label",
          "description": "Optional column label, will be shown as column header."
        },
        {
          "name": "${colPos:colPos}=\"$1\"",
          "description": "Column number - between 0 and 99, should be unique.",
          "valueSet": "v"
        },
        {
          "name": "colPos",
          "description": "Column number - between 0 and 99, should be unique."
        },
        {
          "name": "${colspan:colspan}=\"$1\"",
          "description": "Column span",
          "valueSet": "v"
        },
        {
          "name": "colspan",
          "description": "Column span"
        },
        {
          "name": "${rowspan:rowspan}=\"$1\"",
          "description": "Row span",
          "valueSet": "v"
        },
        {
          "name": "rowspan",
          "description": "Row span"
        },
        {
          "name": "${style:style}=\"$1\"",
          "description": "Inline style to add when rendering the column",
          "valueSet": "v"
        },
        {
          "name": "style",
          "description": "Inline style to add when rendering the column"
        },
        {
          "name": "${variables:variables}=\"$1\"",
          "description": "Freestyle variables which become assigned to the resulting Component - can then be read from that Component outside this Fluid template and in other templates using the Form object from this template. Can also be set and/or overridden in tag content using `<flux:form.variable />`",
          "valueSet": "v"
        },
        {
          "name": "variables",
          "description": "Freestyle variables which become assigned to the resulting Component - can then be read from that Component outside this Fluid template and in other templates using the Form object from this template. Can also be set and/or overridden in tag content using `<flux:form.variable />`"
        },
        {
          "name": "${extensionName:extensionName}=\"$1\"",
          "description": "If provided, enables overriding the extension context for this and all child nodes. The extension name is otherwise automatically detected from rendering context.",
          "valueSet": "v"
        },
        {
          "name": "extensionName",
          "description": "If provided, enables overriding the extension context for this and all child nodes. The extension name is otherwise automatically detected from rendering context."
        }
      ]
    },
    {
      "name": "flux:grid.row",
      "description": "Flexform Grid Row ViewHelper Used inside `<flux:grid>` tags. Usually contains `<flux:grid.column>` tags. See `<flux:grid>` for an example. /",
      "attributes": [
        {
          "name": "${name:name}=\"$1\"",
          "description": "Optional name of this row - defaults to \"row\"",
          "valueSet": "v"
        },
        {
          "name": "name",
          "description": "Optional name of this row - defaults to \"row\""
        },
        {
          "name": "${label:label}=\"$1\"",
          "description": "Optional label for this row - defaults to an LLL value (reported if it is missing)",
          "valueSet": "v"
        },
        {
          "name": "label",
          "description": "Optional label for this row - defaults to an LLL value (reported if it is missing)"
        },
        {
          "name": "${variables:variables}=\"$1\"",
          "description": "Freestyle variables which become assigned to the resulting Component - can then be read from that Component outside this Fluid template and in other templates using the Form object from this template",
          "valueSet": "v"
        },
        {
          "name": "variables",
          "description": "Freestyle variables which become assigned to the resulting Component - can then be read from that Component outside this Fluid template and in other templates using the Form object from this template"
        },
        {
          "name": "${extensionName:extensionName}=\"$1\"",
          "description": "If provided, enables overriding the extension context for this and all child nodes. The extension name is otherwise automatically detected from rendering context.",
          "valueSet": "v"
        },
        {
          "name": "extensionName",
          "description": "If provided, enables overriding the extension context for this and all child nodes. The extension name is otherwise automatically detected from rendering context."
        }
      ]
    },
    {
      "name": "flux:outlet",
      "description": "ViewHelper to configure outlets see `<flux:outlet.argument>` and `<flux:outlet.validate>` ViewHelpers for more information /",
      "attributes": [
        {
          "name": "${enabled:enabled}=\"$1\"",
          "description": "if the outlet is enabled",
          "valueSet": "v"
        },
        {
          "name": "enabled",
          "description": "if the outlet is enabled"
        }
      ]
    },
    {
      "name": "flux:outlet.argument",
      "description": "ViewHelper to define Outlet arguments Use `<flux:outlet.argument>` in conjunction with the `<flux:outlet>` and `<flux.outlet.validate>` viewHelpers. You can define any number of arguments including validations that will be applied to the outlet action. To call the outlet action use the action \"outlet\" in your form action. ### Example <f:section name=\"Configuration\"> <flux:outlet> <flux:outlet.argument name=\"name\"> <flux:outlet.validate type=\"NotEmpty\" /> </flux:outlet.argument> </flux:outlet> </f:section> <f:section name=\"Main\"> <f:form action=\"outlet\" noCache=\"1\"> <f:form.textfield name=\"name\" value=\"{name}\" /> </f:form> </f:section> /",
      "attributes": [
        {
          "name": "${name:name}=\"$1\"",
          "description": "name of the argument",
          "valueSet": "v"
        },
        {
          "name": "name",
          "description": "name of the argument"
        },
        {
          "name": "${type:type}=\"$1\"",
          "description": "type of the argument",
          "valueSet": "v"
        },
        {
          "name": "type",
          "description": "type of the argument"
        }
      ]
    },
    {
      "name": "flux:outlet.form",
      "description": "Outlet Form Renderer Specialised version of `f:form` which adds three vital behaviors: - Automatic resolving of the correct extension name and plugin name - Automatic use of \"outletAction\" on controller - Addition of table name and UID as to prevent calling \"outletAction\" on any other instance than the one which rendered the form. Together these specialised behaviors mean that the form data will only be processed by the exact instance from which the form was rendered, and will always target the correct plugin namespace for the arguments to be recognised. To customise handling of this form, add an \"outletAction\" to your Flux controller with which your template is associated, e.g. your \"ContentController\", \"PageController\" etc. /",
      "attributes": [
        {
          "name": "${additionalAttributes:additionalAttributes}=\"$1\"",
          "description": "Additional tag attributes. They will be added directly to the resulting HTML tag.",
          "valueSet": "v"
        },
        {
          "name": "additionalAttributes",
          "description": "Additional tag attributes. They will be added directly to the resulting HTML tag."
        },
        {
          "name": "${data:data}=\"$1\"",
          "description": "Additional data-* attributes. They will each be added with a \"data-\" prefix.",
          "valueSet": "v"
        },
        {
          "name": "data",
          "description": "Additional data-* attributes. They will each be added with a \"data-\" prefix."
        },
        {
          "name": "${action:action}=\"$1\"",
          "description": "Target action",
          "valueSet": "v"
        },
        {
          "name": "action",
          "description": "Target action"
        },
        {
          "name": "${arguments:arguments}=\"$1\"",
          "description": "Arguments",
          "valueSet": "v"
        },
        {
          "name": "arguments",
          "description": "Arguments"
        },
        {
          "name": "${controller:controller}=\"$1\"",
          "description": "Target controller",
          "valueSet": "v"
        },
        {
          "name": "controller",
          "description": "Target controller"
        },
        {
          "name": "${extensionName:extensionName}=\"$1\"",
          "description": "Target Extension Name (without \"tx_\" prefix and no underscores). If NULL the current extension name is used",
          "valueSet": "v"
        },
        {
          "name": "extensionName",
          "description": "Target Extension Name (without \"tx_\" prefix and no underscores). If NULL the current extension name is used"
        },
        {
          "name": "${pluginName:pluginName}=\"$1\"",
          "description": "Target plugin. If empty, the current plugin name is used",
          "valueSet": "v"
        },
        {
          "name": "pluginName",
          "description": "Target plugin. If empty, the current plugin name is used"
        },
        {
          "name": "${pageUid:pageUid}=\"$1\"",
          "description": "Target page uid",
          "valueSet": "v"
        },
        {
          "name": "pageUid",
          "description": "Target page uid"
        },
        {
          "name": "${object:object}=\"$1\"",
          "description": "Object to use for the form. Use in conjunction with the \"property\" attribute on the sub tags",
          "valueSet": "v"
        },
        {
          "name": "object",
          "description": "Object to use for the form. Use in conjunction with the \"property\" attribute on the sub tags"
        },
        {
          "name": "${pageType:pageType}=\"$1\"",
          "description": "Target page type",
          "valueSet": "v"
        },
        {
          "name": "pageType",
          "description": "Target page type"
        },
        {
          "name": "${noCache:noCache}=\"$1\"",
          "description": "set this to disable caching for the target page. You should not need this.",
          "valueSet": "v"
        },
        {
          "name": "noCache",
          "description": "set this to disable caching for the target page. You should not need this."
        },
        {
          "name": "${noCacheHash:noCacheHash}=\"$1\"",
          "description": "set this to suppress the cHash query parameter created by TypoLink. You should not need this.",
          "valueSet": "v"
        },
        {
          "name": "noCacheHash",
          "description": "set this to suppress the cHash query parameter created by TypoLink. You should not need this."
        },
        {
          "name": "${section:section}=\"$1\"",
          "description": "The anchor to be added to the action URI (only active if $actionUri is not set)",
          "valueSet": "v"
        },
        {
          "name": "section",
          "description": "The anchor to be added to the action URI (only active if $actionUri is not set)"
        },
        {
          "name": "${format:format}=\"$1\"",
          "description": "The requested format (e.g. \".html\") of the target page (only active if $actionUri is not set)",
          "valueSet": "v"
        },
        {
          "name": "format",
          "description": "The requested format (e.g. \".html\") of the target page (only active if $actionUri is not set)"
        },
        {
          "name": "${additionalParams:additionalParams}=\"$1\"",
          "description": "additional action URI query parameters that won't be prefixed like $arguments (overrule $arguments) (only active if $actionUri is not set)",
          "valueSet": "v"
        },
        {
          "name": "additionalParams",
          "description": "additional action URI query parameters that won't be prefixed like $arguments (overrule $arguments) (only active if $actionUri is not set)"
        },
        {
          "name": "${absolute:absolute}=\"$1\"",
          "description": "If set, an absolute action URI is rendered (only active if $actionUri is not set)",
          "valueSet": "v"
        },
        {
          "name": "absolute",
          "description": "If set, an absolute action URI is rendered (only active if $actionUri is not set)"
        },
        {
          "name": "${addQueryString:addQueryString}=\"$1\"",
          "description": "If set, the current query parameters will be kept in the action URI (only active if $actionUri is not set)",
          "valueSet": "v"
        },
        {
          "name": "addQueryString",
          "description": "If set, the current query parameters will be kept in the action URI (only active if $actionUri is not set)"
        },
        {
          "name": "${argumentsToBeExcludedFromQueryString:argumentsToBeExcludedFromQueryString}=\"$1\"",
          "description": "arguments to be removed from the action URI. Only active if $addQueryString = TRUE and $actionUri is not set",
          "valueSet": "v"
        },
        {
          "name": "argumentsToBeExcludedFromQueryString",
          "description": "arguments to be removed from the action URI. Only active if $addQueryString = TRUE and $actionUri is not set"
        },
        {
          "name": "${addQueryStringMethod:addQueryStringMethod}=\"$1\"",
          "description": "Method to use when keeping query parameters (GET or POST, only active if $actionUri is not set",
          "valueSet": "v"
        },
        {
          "name": "addQueryStringMethod",
          "description": "Method to use when keeping query parameters (GET or POST, only active if $actionUri is not set"
        },
        {
          "name": "${fieldNamePrefix:fieldNamePrefix}=\"$1\"",
          "description": "Prefix that will be added to all field names within this form. If not set the prefix will be tx_yourExtension_plugin",
          "valueSet": "v"
        },
        {
          "name": "fieldNamePrefix",
          "description": "Prefix that will be added to all field names within this form. If not set the prefix will be tx_yourExtension_plugin"
        },
        {
          "name": "${actionUri:actionUri}=\"$1\"",
          "description": "can be used to overwrite the \"action\" attribute of the form tag",
          "valueSet": "v"
        },
        {
          "name": "actionUri",
          "description": "can be used to overwrite the \"action\" attribute of the form tag"
        },
        {
          "name": "${objectName:objectName}=\"$1\"",
          "description": "name of the object that is bound to this form. If this argument is not specified, the name attribute of this form is used to determine the FormObjectName",
          "valueSet": "v"
        },
        {
          "name": "objectName",
          "description": "name of the object that is bound to this form. If this argument is not specified, the name attribute of this form is used to determine the FormObjectName"
        },
        {
          "name": "${hiddenFieldClassName:hiddenFieldClassName}=\"$1\"",
          "description": "hiddenFieldClassName",
          "valueSet": "v"
        },
        {
          "name": "hiddenFieldClassName",
          "description": "hiddenFieldClassName"
        },
        {
          "name": "${enctype:enctype}=\"$1\"",
          "description": "MIME type with which the form is submitted",
          "valueSet": "v"
        },
        {
          "name": "enctype",
          "description": "MIME type with which the form is submitted"
        },
        {
          "name": "${method:method}=\"$1\"",
          "description": "Transfer type (GET or POST)",
          "valueSet": "v"
        },
        {
          "name": "method",
          "description": "Transfer type (GET or POST)"
        },
        {
          "name": "${name:name}=\"$1\"",
          "description": "Name of form",
          "valueSet": "v"
        },
        {
          "name": "name",
          "description": "Name of form"
        },
        {
          "name": "${onreset:onreset}=\"$1\"",
          "description": "JavaScript: On reset of the form",
          "valueSet": "v"
        },
        {
          "name": "onreset",
          "description": "JavaScript: On reset of the form"
        },
        {
          "name": "${onsubmit:onsubmit}=\"$1\"",
          "description": "JavaScript: On submit of the form",
          "valueSet": "v"
        },
        {
          "name": "onsubmit",
          "description": "JavaScript: On submit of the form"
        },
        {
          "name": "${target:target}=\"$1\"",
          "description": "Target attribute of the form",
          "valueSet": "v"
        },
        {
          "name": "target",
          "description": "Target attribute of the form"
        },
        {
          "name": "${novalidate:novalidate}=\"$1\"",
          "description": "Indicate that the form is not to be validated on submit.",
          "valueSet": "v"
        },
        {
          "name": "novalidate",
          "description": "Indicate that the form is not to be validated on submit."
        },
        {
          "name": "${class:class}=\"$1\"",
          "description": "CSS class(es) for this element",
          "valueSet": "v"
        },
        {
          "name": "class",
          "description": "CSS class(es) for this element"
        },
        {
          "name": "${dir:dir}=\"$1\"",
          "description": "Text direction for this HTML element. Allowed strings: \"ltr\" (left to right), \"rtl\" (right to left)",
          "valueSet": "v"
        },
        {
          "name": "dir",
          "description": "Text direction for this HTML element. Allowed strings: \"ltr\" (left to right), \"rtl\" (right to left)"
        },
        {
          "name": "${id:id}=\"$1\"",
          "description": "Unique (in this file) identifier for this HTML element.",
          "valueSet": "v"
        },
        {
          "name": "id",
          "description": "Unique (in this file) identifier for this HTML element."
        },
        {
          "name": "${lang:lang}=\"$1\"",
          "description": "Language for this element. Use short names specified in RFC 1766",
          "valueSet": "v"
        },
        {
          "name": "lang",
          "description": "Language for this element. Use short names specified in RFC 1766"
        },
        {
          "name": "${style:style}=\"$1\"",
          "description": "Individual CSS styles for this element",
          "valueSet": "v"
        },
        {
          "name": "style",
          "description": "Individual CSS styles for this element"
        },
        {
          "name": "${title:title}=\"$1\"",
          "description": "Tooltip text of element",
          "valueSet": "v"
        },
        {
          "name": "title",
          "description": "Tooltip text of element"
        },
        {
          "name": "${accesskey:accesskey}=\"$1\"",
          "description": "Keyboard shortcut to access this element",
          "valueSet": "v"
        },
        {
          "name": "accesskey",
          "description": "Keyboard shortcut to access this element"
        },
        {
          "name": "${tabindex:tabindex}=\"$1\"",
          "description": "Specifies the tab order of this element",
          "valueSet": "v"
        },
        {
          "name": "tabindex",
          "description": "Specifies the tab order of this element"
        },
        {
          "name": "${onclick:onclick}=\"$1\"",
          "description": "JavaScript evaluated for the onclick event",
          "valueSet": "v"
        },
        {
          "name": "onclick",
          "description": "JavaScript evaluated for the onclick event"
        }
      ]
    },
    {
      "name": "flux:outlet.validate",
      "description": "ViewHelper to validate Outlet arguments Use `<flux:outlet.validate>` inside the `<flux.outlet.argument>` viewHelper. You can add any number of validations to the arguments. After submission validation errors will be available inside the validationResults variable. ### Example <f:section name=\"Configuration\"> <flux:outlet> <flux:outlet.argument name=\"name\"> <flux:outlet.validate type=\"NotEmpty\" /> </flux:outlet.argument> </flux:outlet> </f:section> <f:section name=\"Main\"> <f:form noCache=\"1\"> <f:form.textfield name=\"name\" value=\"{name}\" /> <f:if condition=\"{validationResults.name}\"> <f:for each=\"{validationResults.name}\" as=\"error\"> <span class=\"error\">{error.code}: {error.message}</span> </f:for> </f:if> </f:form> </f:section> /",
      "attributes": [
        {
          "name": "${type:type}=\"$1\"",
          "description": "validator to apply",
          "valueSet": "v"
        },
        {
          "name": "type",
          "description": "validator to apply"
        },
        {
          "name": "${options:options}=\"$1\"",
          "description": "additional validator arguments",
          "valueSet": "v"
        },
        {
          "name": "options",
          "description": "additional validator arguments"
        }
      ]
    },
    {
      "name": "flux:pipe.controller",
      "description": "Controller Action Outlet Pipe ViewHelper Adds a ControllerPipe to the Form's Outlet. /",
      "attributes": [
        {
          "name": "${direction:direction}=\"$1\"",
          "description": "Which endpoint to attach the Pipe to - either \"in\" or \"out\". See documentation about Outlets and Pipes",
          "valueSet": "v"
        },
        {
          "name": "direction",
          "description": "Which endpoint to attach the Pipe to - either \"in\" or \"out\". See documentation about Outlets and Pipes"
        },
        {
          "name": "${action:action}=\"$1\"",
          "description": "Action to call on the controller, minus the \"Action\" suffix",
          "valueSet": "v"
        },
        {
          "name": "action",
          "description": "Action to call on the controller, minus the \"Action\" suffix"
        },
        {
          "name": "${controller:controller}=\"$1\"",
          "description": "Class name of controller to call. If empty, uses current controller",
          "valueSet": "v"
        },
        {
          "name": "controller",
          "description": "Class name of controller to call. If empty, uses current controller"
        },
        {
          "name": "${extensionName:extensionName}=\"$1\"",
          "description": "Extension name of controller to call. If empty, uses current extension name",
          "valueSet": "v"
        },
        {
          "name": "extensionName",
          "description": "Extension name of controller to call. If empty, uses current extension name"
        }
      ]
    },
    {
      "name": "flux:pipe.email",
      "description": "Email Outlet Pipe ViewHelper Adds an EmailPipe to the Form's Outlet /",
      "attributes": [
        {
          "name": "${direction:direction}=\"$1\"",
          "description": "Which endpoint to attach the Pipe to - either \"in\" or \"out\". See documentation about Outlets and Pipes",
          "valueSet": "v"
        },
        {
          "name": "direction",
          "description": "Which endpoint to attach the Pipe to - either \"in\" or \"out\". See documentation about Outlets and Pipes"
        },
        {
          "name": "${body:body}=\"$1\"",
          "description": "Message body. Can also be inserted as tag content",
          "valueSet": "v"
        },
        {
          "name": "body",
          "description": "Message body. Can also be inserted as tag content"
        },
        {
          "name": "${bodySection:bodySection}=\"$1\"",
          "description": "Section to use for the body",
          "valueSet": "v"
        },
        {
          "name": "bodySection",
          "description": "Section to use for the body"
        },
        {
          "name": "${subject:subject}=\"$1\"",
          "description": "Message subject",
          "valueSet": "v"
        },
        {
          "name": "subject",
          "description": "Message subject"
        },
        {
          "name": "${recipient:recipient}=\"$1\"",
          "description": "Message recipient address or name+address as \"Name <add@ress>\"",
          "valueSet": "v"
        },
        {
          "name": "recipient",
          "description": "Message recipient address or name+address as \"Name <add@ress>\""
        },
        {
          "name": "${sender:sender}=\"$1\"",
          "description": "Message sender address or name+address as \"Name <add@ress>\"",
          "valueSet": "v"
        },
        {
          "name": "sender",
          "description": "Message sender address or name+address as \"Name <add@ress>\""
        }
      ]
    },
    {
      "name": "flux:pipe.flashMessage",
      "description": "FlashMessage Outlet Pipe ViewHelper Adds a FlashMessagePipe to the Form's Outlet /",
      "attributes": [
        {
          "name": "${direction:direction}=\"$1\"",
          "description": "Which endpoint to attach the Pipe to - either \"in\" or \"out\". See documentation about Outlets and Pipes",
          "valueSet": "v"
        },
        {
          "name": "direction",
          "description": "Which endpoint to attach the Pipe to - either \"in\" or \"out\". See documentation about Outlets and Pipes"
        },
        {
          "name": "${message:message}=\"$1\"",
          "description": "FlashMessage message body",
          "valueSet": "v"
        },
        {
          "name": "message",
          "description": "FlashMessage message body"
        },
        {
          "name": "${title:title}=\"$1\"",
          "description": "FlashMessage title to use",
          "valueSet": "v"
        },
        {
          "name": "title",
          "description": "FlashMessage title to use"
        },
        {
          "name": "${severity:severity}=\"$1\"",
          "description": "Severity level, as integer",
          "valueSet": "v"
        },
        {
          "name": "severity",
          "description": "Severity level, as integer"
        },
        {
          "name": "${storeInSession:storeInSession}=\"$1\"",
          "description": "Store message in sesssion. If FALSE, message only lives in POST. Default TRUE.",
          "valueSet": "v"
        },
        {
          "name": "storeInSession",
          "description": "Store message in sesssion. If FALSE, message only lives in POST. Default TRUE."
        }
      ]
    },
    {
      "name": "flux:pipe.typeConverter",
      "description": "Type Converter Outlet Pipe ViewHelper Adds a TypeConverterPipe to the Form's Outlet. /",
      "attributes": [
        {
          "name": "${direction:direction}=\"$1\"",
          "description": "Which endpoint to attach the Pipe to - either \"in\" or \"out\". See documentation about Outlets and Pipes",
          "valueSet": "v"
        },
        {
          "name": "direction",
          "description": "Which endpoint to attach the Pipe to - either \"in\" or \"out\". See documentation about Outlets and Pipes"
        },
        {
          "name": "${targetType:targetType}=\"$1\"",
          "description": "Target type (class name, integer, array, etc.)",
          "valueSet": "v"
        },
        {
          "name": "targetType",
          "description": "Target type (class name, integer, array, etc.)"
        },
        {
          "name": "${typeConverter:typeConverter}=\"$1\"",
          "description": "Class or instance of type converter. Can be a short name of a system type converter, minus \"Converter\" suffix, e.g. PersistentObject, Array etc.",
          "valueSet": "v"
        },
        {
          "name": "typeConverter",
          "description": "Class or instance of type converter. Can be a short name of a system type converter, minus \"Converter\" suffix, e.g. PersistentObject, Array etc."
        }
      ]
    },
    {
      "name": "flux:wizard.add",
      "description": "Field Wizard: Add See https://docs.typo3.org/typo3cms/TCAReference/AdditionalFeatures/CoreWizardScripts/Index.html for details about the behaviors that are controlled by arguments. /",
      "attributes": [
        {
          "name": "${label:label}=\"$1\"",
          "description": "Optional title of this Wizard",
          "valueSet": "v"
        },
        {
          "name": "label",
          "description": "Optional title of this Wizard"
        },
        {
          "name": "${hideParent:hideParent}=\"$1\"",
          "description": "If TRUE, hides the parent field",
          "valueSet": "v"
        },
        {
          "name": "hideParent",
          "description": "If TRUE, hides the parent field"
        },
        {
          "name": "${variables:variables}=\"$1\"",
          "description": "Freestyle variables which become assigned to the resulting Component - can then be read from that Component outside this Fluid template and in other templates using the Form object from this template",
          "valueSet": "v"
        },
        {
          "name": "variables",
          "description": "Freestyle variables which become assigned to the resulting Component - can then be read from that Component outside this Fluid template and in other templates using the Form object from this template"
        },
        {
          "name": "${extensionName:extensionName}=\"$1\"",
          "description": "If provided, enables overriding the extension context for this and all child nodes. The extension name is otherwise automatically detected from rendering context.",
          "valueSet": "v"
        },
        {
          "name": "extensionName",
          "description": "If provided, enables overriding the extension context for this and all child nodes. The extension name is otherwise automatically detected from rendering context."
        },
        {
          "name": "${table:table}=\"$1\"",
          "description": "Table name that records are added to",
          "valueSet": "v"
        },
        {
          "name": "table",
          "description": "Table name that records are added to"
        },
        {
          "name": "${pid:pid}=\"$1\"",
          "description": "Storage page UID or (as is default) ###CURRENT_PID###",
          "valueSet": "v"
        },
        {
          "name": "pid",
          "description": "Storage page UID or (as is default) ###CURRENT_PID###"
        },
        {
          "name": "${setValue:setValue}=\"$1\"",
          "description": "How to treat the record once created",
          "valueSet": "v"
        },
        {
          "name": "setValue",
          "description": "How to treat the record once created"
        }
      ]
    },
    {
      "name": "flux:wizard.colorPicker",
      "description": "Field Wizard: Color Picker See https://docs.typo3.org/typo3cms/TCAReference/AdditionalFeatures/CoreWizardScripts/Index.html for details about the behaviors that are controlled by arguments. /",
      "attributes": [
        {
          "name": "${label:label}=\"$1\"",
          "description": "Optional title of this Wizard",
          "valueSet": "v"
        },
        {
          "name": "label",
          "description": "Optional title of this Wizard"
        },
        {
          "name": "${hideParent:hideParent}=\"$1\"",
          "description": "If TRUE, hides the parent field",
          "valueSet": "v"
        },
        {
          "name": "hideParent",
          "description": "If TRUE, hides the parent field"
        },
        {
          "name": "${variables:variables}=\"$1\"",
          "description": "Freestyle variables which become assigned to the resulting Component - can then be read from that Component outside this Fluid template and in other templates using the Form object from this template",
          "valueSet": "v"
        },
        {
          "name": "variables",
          "description": "Freestyle variables which become assigned to the resulting Component - can then be read from that Component outside this Fluid template and in other templates using the Form object from this template"
        },
        {
          "name": "${extensionName:extensionName}=\"$1\"",
          "description": "If provided, enables overriding the extension context for this and all child nodes. The extension name is otherwise automatically detected from rendering context.",
          "valueSet": "v"
        },
        {
          "name": "extensionName",
          "description": "If provided, enables overriding the extension context for this and all child nodes. The extension name is otherwise automatically detected from rendering context."
        },
        {
          "name": "${dim:dim}=\"$1\"",
          "description": "Dimensions (WxH, e.g. 20x20) of color picker",
          "valueSet": "v"
        },
        {
          "name": "dim",
          "description": "Dimensions (WxH, e.g. 20x20) of color picker"
        },
        {
          "name": "${width:width}=\"$1\"",
          "description": "Width of the popup window",
          "valueSet": "v"
        },
        {
          "name": "width",
          "description": "Width of the popup window"
        },
        {
          "name": "${height:height}=\"$1\"",
          "description": "height of the popup window",
          "valueSet": "v"
        },
        {
          "name": "height",
          "description": "height of the popup window"
        },
        {
          "name": "${exampleImg:exampleImg}=\"$1\"",
          "description": "Example image from which to pick colors",
          "valueSet": "v"
        },
        {
          "name": "exampleImg",
          "description": "Example image from which to pick colors"
        }
      ]
    },
    {
      "name": "flux:wizard.edit",
      "description": "Field Wizard: Edit See https://docs.typo3.org/typo3cms/TCAReference/AdditionalFeatures/CoreWizardScripts/Index.html for details about the behaviors that are controlled by arguments. /",
      "attributes": [
        {
          "name": "${label:label}=\"$1\"",
          "description": "Optional title of this Wizard",
          "valueSet": "v"
        },
        {
          "name": "label",
          "description": "Optional title of this Wizard"
        },
        {
          "name": "${hideParent:hideParent}=\"$1\"",
          "description": "If TRUE, hides the parent field",
          "valueSet": "v"
        },
        {
          "name": "hideParent",
          "description": "If TRUE, hides the parent field"
        },
        {
          "name": "${variables:variables}=\"$1\"",
          "description": "Freestyle variables which become assigned to the resulting Component - can then be read from that Component outside this Fluid template and in other templates using the Form object from this template",
          "valueSet": "v"
        },
        {
          "name": "variables",
          "description": "Freestyle variables which become assigned to the resulting Component - can then be read from that Component outside this Fluid template and in other templates using the Form object from this template"
        },
        {
          "name": "${extensionName:extensionName}=\"$1\"",
          "description": "If provided, enables overriding the extension context for this and all child nodes. The extension name is otherwise automatically detected from rendering context.",
          "valueSet": "v"
        },
        {
          "name": "extensionName",
          "description": "If provided, enables overriding the extension context for this and all child nodes. The extension name is otherwise automatically detected from rendering context."
        },
        {
          "name": "${width:width}=\"$1\"",
          "description": "Width of the popup window",
          "valueSet": "v"
        },
        {
          "name": "width",
          "description": "Width of the popup window"
        },
        {
          "name": "${height:height}=\"$1\"",
          "description": "height of the popup window",
          "valueSet": "v"
        },
        {
          "name": "height",
          "description": "height of the popup window"
        },
        {
          "name": "${openOnlyIfSelected:openOnlyIfSelected}=\"$1\"",
          "description": "Only open the edit dialog if an item is selected",
          "valueSet": "v"
        },
        {
          "name": "openOnlyIfSelected",
          "description": "Only open the edit dialog if an item is selected"
        }
      ]
    },
    {
      "name": "flux:wizard.link",
      "description": "Field Wizard: Link #### Link input field with link wizard <flux:field.input name=\"link\"> <flux:wizard.link/> </flux:field.input> See https://docs.typo3.org/typo3cms/TCAReference/AdditionalFeatures/CoreWizardScripts/Index.html for details about the behaviors that are controlled by arguments. /",
      "attributes": [
        {
          "name": "${label:label}=\"$1\"",
          "description": "Optional title of this Wizard",
          "valueSet": "v"
        },
        {
          "name": "label",
          "description": "Optional title of this Wizard"
        },
        {
          "name": "${hideParent:hideParent}=\"$1\"",
          "description": "If TRUE, hides the parent field",
          "valueSet": "v"
        },
        {
          "name": "hideParent",
          "description": "If TRUE, hides the parent field"
        },
        {
          "name": "${variables:variables}=\"$1\"",
          "description": "Freestyle variables which become assigned to the resulting Component - can then be read from that Component outside this Fluid template and in other templates using the Form object from this template",
          "valueSet": "v"
        },
        {
          "name": "variables",
          "description": "Freestyle variables which become assigned to the resulting Component - can then be read from that Component outside this Fluid template and in other templates using the Form object from this template"
        },
        {
          "name": "${extensionName:extensionName}=\"$1\"",
          "description": "If provided, enables overriding the extension context for this and all child nodes. The extension name is otherwise automatically detected from rendering context.",
          "valueSet": "v"
        },
        {
          "name": "extensionName",
          "description": "If provided, enables overriding the extension context for this and all child nodes. The extension name is otherwise automatically detected from rendering context."
        },
        {
          "name": "${activeTab:activeTab}=\"$1\"",
          "description": "Active tab of the link popup",
          "valueSet": "v"
        },
        {
          "name": "activeTab",
          "description": "Active tab of the link popup"
        },
        {
          "name": "${width:width}=\"$1\"",
          "description": "Width of the popup window",
          "valueSet": "v"
        },
        {
          "name": "width",
          "description": "Width of the popup window"
        },
        {
          "name": "${height:height}=\"$1\"",
          "description": "height of the popup window",
          "valueSet": "v"
        },
        {
          "name": "height",
          "description": "height of the popup window"
        },
        {
          "name": "${allowedExtensions:allowedExtensions}=\"$1\"",
          "description": "Comma-separated list of extensions that are allowed to be selected. Default is all types.",
          "valueSet": "v"
        },
        {
          "name": "allowedExtensions",
          "description": "Comma-separated list of extensions that are allowed to be selected. Default is all types."
        },
        {
          "name": "${blindLinkOptions:blindLinkOptions}=\"$1\"",
          "description": "Blind link options",
          "valueSet": "v"
        },
        {
          "name": "blindLinkOptions",
          "description": "Blind link options"
        },
        {
          "name": "${blindLinkFields:blindLinkFields}=\"$1\"",
          "description": "Blind link fields",
          "valueSet": "v"
        },
        {
          "name": "blindLinkFields",
          "description": "Blind link fields"
        }
      ]
    },
    {
      "name": "flux:wizard.list",
      "description": "Field Wizard: List See https://docs.typo3.org/typo3cms/TCAReference/AdditionalFeatures/CoreWizardScripts/Index.html for details about the behaviors that are controlled by arguments. /",
      "attributes": [
        {
          "name": "${label:label}=\"$1\"",
          "description": "Optional title of this Wizard",
          "valueSet": "v"
        },
        {
          "name": "label",
          "description": "Optional title of this Wizard"
        },
        {
          "name": "${hideParent:hideParent}=\"$1\"",
          "description": "If TRUE, hides the parent field",
          "valueSet": "v"
        },
        {
          "name": "hideParent",
          "description": "If TRUE, hides the parent field"
        },
        {
          "name": "${variables:variables}=\"$1\"",
          "description": "Freestyle variables which become assigned to the resulting Component - can then be read from that Component outside this Fluid template and in other templates using the Form object from this template",
          "valueSet": "v"
        },
        {
          "name": "variables",
          "description": "Freestyle variables which become assigned to the resulting Component - can then be read from that Component outside this Fluid template and in other templates using the Form object from this template"
        },
        {
          "name": "${extensionName:extensionName}=\"$1\"",
          "description": "If provided, enables overriding the extension context for this and all child nodes. The extension name is otherwise automatically detected from rendering context.",
          "valueSet": "v"
        },
        {
          "name": "extensionName",
          "description": "If provided, enables overriding the extension context for this and all child nodes. The extension name is otherwise automatically detected from rendering context."
        },
        {
          "name": "${table:table}=\"$1\"",
          "description": "Table name that records are added to",
          "valueSet": "v"
        },
        {
          "name": "table",
          "description": "Table name that records are added to"
        },
        {
          "name": "${pid:pid}=\"$1\"",
          "description": "Storage page UID or (as is default) ###CURRENT_PID###",
          "valueSet": "v"
        },
        {
          "name": "pid",
          "description": "Storage page UID or (as is default) ###CURRENT_PID###"
        },
        {
          "name": "${width:width}=\"$1\"",
          "description": "Width of the popup window",
          "valueSet": "v"
        },
        {
          "name": "width",
          "description": "Width of the popup window"
        },
        {
          "name": "${height:height}=\"$1\"",
          "description": "height of the popup window",
          "valueSet": "v"
        },
        {
          "name": "height",
          "description": "height of the popup window"
        }
      ]
    },
    {
      "name": "flux:wizard.select",
      "description": "Field Wizard: Edit See https://docs.typo3.org/typo3cms/TCAReference/AdditionalFeatures/CoreWizardScripts/Index.html for details about the behaviors that are controlled by arguments. /",
      "attributes": [
        {
          "name": "${label:label}=\"$1\"",
          "description": "Optional title of this Wizard",
          "valueSet": "v"
        },
        {
          "name": "label",
          "description": "Optional title of this Wizard"
        },
        {
          "name": "${hideParent:hideParent}=\"$1\"",
          "description": "If TRUE, hides the parent field",
          "valueSet": "v"
        },
        {
          "name": "hideParent",
          "description": "If TRUE, hides the parent field"
        },
        {
          "name": "${variables:variables}=\"$1\"",
          "description": "Freestyle variables which become assigned to the resulting Component - can then be read from that Component outside this Fluid template and in other templates using the Form object from this template",
          "valueSet": "v"
        },
        {
          "name": "variables",
          "description": "Freestyle variables which become assigned to the resulting Component - can then be read from that Component outside this Fluid template and in other templates using the Form object from this template"
        },
        {
          "name": "${extensionName:extensionName}=\"$1\"",
          "description": "If provided, enables overriding the extension context for this and all child nodes. The extension name is otherwise automatically detected from rendering context.",
          "valueSet": "v"
        },
        {
          "name": "extensionName",
          "description": "If provided, enables overriding the extension context for this and all child nodes. The extension name is otherwise automatically detected from rendering context."
        },
        {
          "name": "${mode:mode}=\"$1\"",
          "description": "Selection mode - substitution, append or prepend",
          "valueSet": "v"
        },
        {
          "name": "mode",
          "description": "Selection mode - substitution, append or prepend"
        },
        {
          "name": "${items:items}=\"$1\"",
          "description": "Comma-separated, comma-and-semicolon-separated or array list of possible values",
          "valueSet": "v"
        },
        {
          "name": "items",
          "description": "Comma-separated, comma-and-semicolon-separated or array list of possible values"
        }
      ]
    },
    {
      "name": "flux:wizard.slider",
      "description": "Field Wizard: Slider See https://docs.typo3.org/typo3cms/TCAReference/AdditionalFeatures/CoreWizardScripts/Index.html for details about the behaviors that are controlled by arguments. /",
      "attributes": [
        {
          "name": "${label:label}=\"$1\"",
          "description": "Optional title of this Wizard",
          "valueSet": "v"
        },
        {
          "name": "label",
          "description": "Optional title of this Wizard"
        },
        {
          "name": "${hideParent:hideParent}=\"$1\"",
          "description": "If TRUE, hides the parent field",
          "valueSet": "v"
        },
        {
          "name": "hideParent",
          "description": "If TRUE, hides the parent field"
        },
        {
          "name": "${variables:variables}=\"$1\"",
          "description": "Freestyle variables which become assigned to the resulting Component - can then be read from that Component outside this Fluid template and in other templates using the Form object from this template",
          "valueSet": "v"
        },
        {
          "name": "variables",
          "description": "Freestyle variables which become assigned to the resulting Component - can then be read from that Component outside this Fluid template and in other templates using the Form object from this template"
        },
        {
          "name": "${extensionName:extensionName}=\"$1\"",
          "description": "If provided, enables overriding the extension context for this and all child nodes. The extension name is otherwise automatically detected from rendering context.",
          "valueSet": "v"
        },
        {
          "name": "extensionName",
          "description": "If provided, enables overriding the extension context for this and all child nodes. The extension name is otherwise automatically detected from rendering context."
        },
        {
          "name": "${step:step}=\"$1\"",
          "description": "Increment slider values by this much for each step",
          "valueSet": "v"
        },
        {
          "name": "step",
          "description": "Increment slider values by this much for each step"
        },
        {
          "name": "${width:width}=\"$1\"",
          "description": "Width of the popup window",
          "valueSet": "v"
        },
        {
          "name": "width",
          "description": "Width of the popup window"
        }
      ]
    },
    {
      "name": "flux:wizard.suggest",
      "description": "Field Wizard: Suggest See https://docs.typo3.org/typo3cms/TCAReference/AdditionalFeatures/CoreWizardScripts/Index.html for details about the behaviors that are controlled by arguments. /",
      "attributes": [
        {
          "name": "${label:label}=\"$1\"",
          "description": "Optional title of this Wizard",
          "valueSet": "v"
        },
        {
          "name": "label",
          "description": "Optional title of this Wizard"
        },
        {
          "name": "${hideParent:hideParent}=\"$1\"",
          "description": "If TRUE, hides the parent field",
          "valueSet": "v"
        },
        {
          "name": "hideParent",
          "description": "If TRUE, hides the parent field"
        },
        {
          "name": "${variables:variables}=\"$1\"",
          "description": "Freestyle variables which become assigned to the resulting Component - can then be read from that Component outside this Fluid template and in other templates using the Form object from this template",
          "valueSet": "v"
        },
        {
          "name": "variables",
          "description": "Freestyle variables which become assigned to the resulting Component - can then be read from that Component outside this Fluid template and in other templates using the Form object from this template"
        },
        {
          "name": "${extensionName:extensionName}=\"$1\"",
          "description": "If provided, enables overriding the extension context for this and all child nodes. The extension name is otherwise automatically detected from rendering context.",
          "valueSet": "v"
        },
        {
          "name": "extensionName",
          "description": "If provided, enables overriding the extension context for this and all child nodes. The extension name is otherwise automatically detected from rendering context."
        },
        {
          "name": "${table:table}=\"$1\"",
          "description": "Table to search. If left out will use the table defined by the parent field",
          "valueSet": "v"
        },
        {
          "name": "table",
          "description": "Table to search. If left out will use the table defined by the parent field"
        },
        {
          "name": "${pidList:pidList}=\"$1\"",
          "description": "List of storage page UIDs",
          "valueSet": "v"
        },
        {
          "name": "pidList",
          "description": "List of storage page UIDs"
        },
        {
          "name": "${pidDepth:pidDepth}=\"$1\"",
          "description": "Depth of recursive storage page UID lookups",
          "valueSet": "v"
        },
        {
          "name": "pidDepth",
          "description": "Depth of recursive storage page UID lookups"
        },
        {
          "name": "${minimumCharacters:minimumCharacters}=\"$1\"",
          "description": "Minimum number of characters that must be typed before search begins",
          "valueSet": "v"
        },
        {
          "name": "minimumCharacters",
          "description": "Minimum number of characters that must be typed before search begins"
        },
        {
          "name": "${maxPathTitleLength:maxPathTitleLength}=\"$1\"",
          "description": "Maximum path segment length - crops titles over this length",
          "valueSet": "v"
        },
        {
          "name": "maxPathTitleLength",
          "description": "Maximum path segment length - crops titles over this length"
        },
        {
          "name": "${searchWholePhrase:searchWholePhrase}=\"$1\"",
          "description": "A match requires a full word that matches the search value",
          "valueSet": "v"
        },
        {
          "name": "searchWholePhrase",
          "description": "A match requires a full word that matches the search value"
        },
        {
          "name": "${searchCondition:searchCondition}=\"$1\"",
          "description": "Search condition - for example, if table is pages \"doktype = 1\" to only allow standard pages",
          "valueSet": "v"
        },
        {
          "name": "searchCondition",
          "description": "Search condition - for example, if table is pages \"doktype = 1\" to only allow standard pages"
        },
        {
          "name": "${cssClass:cssClass}=\"$1\"",
          "description": "Use this CSS class for all list items",
          "valueSet": "v"
        },
        {
          "name": "cssClass",
          "description": "Use this CSS class for all list items"
        },
        {
          "name": "${receiverClass:receiverClass}=\"$1\"",
          "description": "Class reference, target class should be derived from \"t3lib_tceforms_suggest_defaultreceiver\"",
          "valueSet": "v"
        },
        {
          "name": "receiverClass",
          "description": "Class reference, target class should be derived from \"t3lib_tceforms_suggest_defaultreceiver\""
        },
        {
          "name": "${renderFunc:renderFunc}=\"$1\"",
          "description": "Reference to function which processes all records displayed in results",
          "valueSet": "v"
        },
        {
          "name": "renderFunc",
          "description": "Reference to function which processes all records displayed in results"
        }
      ]
    }
  ]
}